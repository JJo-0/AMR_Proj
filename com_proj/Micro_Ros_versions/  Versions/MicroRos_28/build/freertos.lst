ARM GAS  /tmp/ccDBp1of.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_FREERTOS_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_FREERTOS_Init:
  27              	.LFB142:
  28              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   *********************  *********************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include <stdbool.h>
  29:Core/Src/freertos.c **** #include <rcl/rcl.h>
  30:Core/Src/freertos.c **** #include <rcl/error_handling.h>
ARM GAS  /tmp/ccDBp1of.s 			page 2


  31:Core/Src/freertos.c **** #include <rclc/rclc.h>
  32:Core/Src/freertos.c **** #include <rclc/executor.h>
  33:Core/Src/freertos.c **** #include <uxr/client/transport.h>
  34:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  35:Core/Src/freertos.c **** #include <rmw_microros/rmw_microros.h>
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** #include <std_msgs/msg/int32.h>
  38:Core/Src/freertos.c **** #include <std_msgs/msg/u_int16.h>
  39:Core/Src/freertos.c **** #include <std_msgs/msg/string.h>
  40:Core/Src/freertos.c **** #include <geometry_msgs/msg/twist.h>
  41:Core/Src/freertos.c **** #include <geometry_msgs/msg/detail/twist__struct.h>
  42:Core/Src/freertos.c **** #include <nav_msgs/msg/odometry.h>
  43:Core/Src/freertos.c **** #include <std_msgs/msg/float32.h>
  44:Core/Src/freertos.c **** #include <std_msgs/msg/float64.h>
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** #include "usart.h"
  47:Core/Src/freertos.c **** #include "tim.h"
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** //#include "math.h"
  50:Core/Src/freertos.c **** #include <math.h>
  51:Core/Src/freertos.c **** #include <string.h>
  52:Core/Src/freertos.c **** #include <stdint.h>
  53:Core/Src/freertos.c **** /* USER CODE END Includes */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  56:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  57:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** typedef struct{
  60:Core/Src/freertos.c **** 	uint16_t state, current;
  61:Core/Src/freertos.c **** 	int16_t rpm;
  62:Core/Src/freertos.c **** 	int position, position_p, encoder, encoder_p;
  63:Core/Src/freertos.c **** } motor_packet;
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** /* USER CODE END PTD */
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  68:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* USER CODE END PD */
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  73:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* USER CODE END PM */
  76:Core/Src/freertos.c **** 
  77:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  78:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  79:Core/Src/freertos.c **** /*
  80:Core/Src/freertos.c **** char Run_State = 'B';
  81:Core/Src/freertos.c **** char Motor_State = 'T';
  82:Core/Src/freertos.c **** char Run_Dir = 'F';
  83:Core/Src/freertos.c **** */
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** #define _USE_MATH_DEFINES
  86:Core/Src/freertos.c **** 
  87:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 3


  88:Core/Src/freertos.c **** #define DATA_SIZE 24
  89:Core/Src/freertos.c **** 
  90:Core/Src/freertos.c **** //uint8_t Command_Request_Data[20]= {0xb7,0xb8,0x01,0x0a,0x01,0x05,0x80};
  91:Core/Src/freertos.c **** //uint8_t Command_Request_Data[7]= {0xB7,0xB8,0x01,0x0A,0x01,0x05,0x80};
  92:Core/Src/freertos.c **** //uint8_t Command_Request_Data[7]= {0xB7,0xB8,0x01,0x0A,0x01,0x3D,0x48};
  93:Core/Src/freertos.c **** uint8_t Command_Request_Data[7]= {0xB7,0xB8,0x01,0x04,0x01,0xD2,0xB9};
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c **** uint8_t Command_Response1[50]="01234567890ABCDEF";//dummy
  96:Core/Src/freertos.c **** uint8_t Command_Response2[DATA_SIZE]="01234567890ABCDEF";//dummy
  97:Core/Src/freertos.c **** //uint8_t Command_Response2[23]="01234567890ABCDEF";//dummy
  98:Core/Src/freertos.c **** //uint8_t Command_Response2[25]="01234567890ABCDEF";//dummy
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c **** motor_packet motor1, motor2;
 102:Core/Src/freertos.c **** 
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c **** char Run_State;
 106:Core/Src/freertos.c **** char Motor_State;
 107:Core/Src/freertos.c **** char Run_Dir;
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c **** // ?��?��?��?? 각속?��?�� 모든 값을 �??��?�� ???��
 111:Core/Src/freertos.c **** float linear_velocity_x;
 112:Core/Src/freertos.c **** float linear_velocity_y;
 113:Core/Src/freertos.c **** float linear_velocity_z;
 114:Core/Src/freertos.c **** 
 115:Core/Src/freertos.c **** float angular_velocity_x;
 116:Core/Src/freertos.c **** float angular_velocity_y;
 117:Core/Src/freertos.c **** float angular_velocity_z;
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c **** int m1_hall=0, m2_hall=0;
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c **** int m1_rev=0, m2_rev=0;
 122:Core/Src/freertos.c **** int m1_deg=0, m2_deg=0;
 123:Core/Src/freertos.c **** int m1_deg_10=0, m2_deg_10=0;
 124:Core/Src/freertos.c **** int m1_deg_10_p=0, m2_deg_10_p=0;
 125:Core/Src/freertos.c **** int m1_deg_1_10=0, m2_deg_1_10=0;
 126:Core/Src/freertos.c **** int m1_rpm=0, m2_rpm=0;
 127:Core/Src/freertos.c **** int m1_rpm_p=0, m2_rpm_p=0;
 128:Core/Src/freertos.c **** int m1_rpm_p_10=0, m2_rpm_p_10=0;
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c **** //std_msgs__msg__Int32 msg;
 131:Core/Src/freertos.c **** int hall1 = 0, hall2 = 0;
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c **** int l_enc_op=0;
 134:Core/Src/freertos.c **** int r_enc_op=0;
 135:Core/Src/freertos.c **** 
 136:Core/Src/freertos.c **** typedef struct{
 137:Core/Src/freertos.c **** 	double vx, vy, vz;
 138:Core/Src/freertos.c **** } Twist_value;
 139:Core/Src/freertos.c **** /*
 140:Core/Src/freertos.c **** Twist_value Linear = {0, 0, 0};
 141:Core/Src/freertos.c **** Twist_value Angular = {0, 0, 0};*/
 142:Core/Src/freertos.c **** Twist_value Linear;
 143:Core/Src/freertos.c **** Twist_value Angular;
 144:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 4


 145:Core/Src/freertos.c **** 
 146:Core/Src/freertos.c **** //int count_sec = 0;
 147:Core/Src/freertos.c **** //int turn_flag = 0;
 148:Core/Src/freertos.c **** int m_mode = 0; // 0: stop, 1: straight, 2: rotation mode
 149:Core/Src/freertos.c **** double pwm_p = 0;
 150:Core/Src/freertos.c **** double pwm_m = 0;
 151:Core/Src/freertos.c **** 
 152:Core/Src/freertos.c **** double angle;
 153:Core/Src/freertos.c **** 
 154:Core/Src/freertos.c **** int timeout = 10000000;
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c **** /* USER CODE END Variables */
 157:Core/Src/freertos.c **** /* Definitions for defaultTask */
 158:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
 159:Core/Src/freertos.c **** uint32_t defaultTaskBuffer[ 3000 ];
 160:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
 161:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
 162:Core/Src/freertos.c ****   .name = "defaultTask",
 163:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
 164:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
 165:Core/Src/freertos.c ****   .stack_mem = &defaultTaskBuffer[0],
 166:Core/Src/freertos.c ****   .stack_size = sizeof(defaultTaskBuffer),
 167:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
 168:Core/Src/freertos.c **** };
 169:Core/Src/freertos.c **** 
 170:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
 171:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 172:Core/Src/freertos.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
 173:Core/Src/freertos.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
 174:Core/Src/freertos.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
 175:Core/Src/freertos.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
 176:Core/Src/freertos.c **** 
 177:Core/Src/freertos.c **** void * microros_allocate(size_t size, void * state);
 178:Core/Src/freertos.c **** void microros_deallocate(void * pointer, void * state);
 179:Core/Src/freertos.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
 180:Core/Src/freertos.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
 181:Core/Src/freertos.c **** 
 182:Core/Src/freertos.c **** void messageCallback(const void *msgin);
 183:Core/Src/freertos.c **** void messageCallback_test1(const void *msgin);
 184:Core/Src/freertos.c **** void messageCallback_test2(const void *msgin);
 185:Core/Src/freertos.c **** void twist_subscription_callback(const void * msgin);
 186:Core/Src/freertos.c **** 
 187:Core/Src/freertos.c **** 
 188:Core/Src/freertos.c **** //my motor test functions
 189:Core/Src/freertos.c **** 
 190:Core/Src/freertos.c **** //int MOTION_MODE(double x, double y, double z);
 191:Core/Src/freertos.c **** 
 192:Core/Src/freertos.c **** void RUN_DIR(char);
 193:Core/Src/freertos.c **** 
 194:Core/Src/freertos.c **** void RUN_RB(char);
 195:Core/Src/freertos.c **** void MOTOR_SS(char);
 196:Core/Src/freertos.c **** 
 197:Core/Src/freertos.c **** double MOTOR_CAL_LINE_PWM(double,double,double);
 198:Core/Src/freertos.c **** 
 199:Core/Src/freertos.c **** void PWM_L(double);
 200:Core/Src/freertos.c **** void PWM_R(double);
 201:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 5


 202:Core/Src/freertos.c **** double CAL_LinearSpeed(double x, double y, double z);
 203:Core/Src/freertos.c **** double CAL_AngularSpeed(double x, double y, double z);
 204:Core/Src/freertos.c **** 
 205:Core/Src/freertos.c **** //void TURN(double);
 206:Core/Src/freertos.c **** 
 207:Core/Src/freertos.c **** double TURN(double ang);
 208:Core/Src/freertos.c **** //int MOTION_MODE(double, double, double);
 209:Core/Src/freertos.c **** //void MOTION_MODE(double, double, double);
 210:Core/Src/freertos.c **** void MOTION_MODE(double lx, double ly, double lz, double ax, double ay, double az);
 211:Core/Src/freertos.c **** 
 212:Core/Src/freertos.c **** 
 213:Core/Src/freertos.c **** int16_t hex_to_signed_int(const char *hex_str);
 214:Core/Src/freertos.c **** 
 215:Core/Src/freertos.c **** 
 216:Core/Src/freertos.c **** 
 217:Core/Src/freertos.c **** 
 218:Core/Src/freertos.c **** 
 219:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 220:Core/Src/freertos.c **** 
 221:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
 222:Core/Src/freertos.c **** 
 223:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 224:Core/Src/freertos.c **** 
 225:Core/Src/freertos.c **** /**
 226:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 227:Core/Src/freertos.c ****   * @param  None
 228:Core/Src/freertos.c ****   * @retval None
 229:Core/Src/freertos.c ****   */
 230:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  29              		.loc 1 230 29 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 231:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 232:Core/Src/freertos.c **** 
 233:Core/Src/freertos.c ****   /* USER CODE END Init */
 234:Core/Src/freertos.c **** 
 235:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 236:Core/Src/freertos.c ****   /* add mutexes, ... */
 237:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 238:Core/Src/freertos.c **** 
 239:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 240:Core/Src/freertos.c ****   /* add semaphores, ... */
 241:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 242:Core/Src/freertos.c **** 
 243:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 244:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 245:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 246:Core/Src/freertos.c **** 
 247:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 248:Core/Src/freertos.c ****   /* add queues, ... */
 249:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
ARM GAS  /tmp/ccDBp1of.s 			page 6


 250:Core/Src/freertos.c **** 
 251:Core/Src/freertos.c ****   /* Create the thread(s) */
 252:Core/Src/freertos.c ****   /* creation of defaultTask */
 253:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
  38              		.loc 1 253 3 view .LVU1
  39              		.loc 1 253 23 is_stmt 0 view .LVU2
  40 0002 044A     		ldr	r2, .L3
  41 0004 0021     		movs	r1, #0
  42 0006 0448     		ldr	r0, .L3+4
  43 0008 FFF7FEFF 		bl	osThreadNew
  44              	.LVL0:
  45              		.loc 1 253 21 view .LVU3
  46 000c 034B     		ldr	r3, .L3+8
  47 000e 1860     		str	r0, [r3]
 254:Core/Src/freertos.c **** 
 255:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 256:Core/Src/freertos.c ****   /* add threads, ... */
 257:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 258:Core/Src/freertos.c **** 
 259:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 260:Core/Src/freertos.c ****   /* add events, ... */
 261:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 262:Core/Src/freertos.c **** 
 263:Core/Src/freertos.c **** }
  48              		.loc 1 263 1 view .LVU4
  49 0010 08BD     		pop	{r3, pc}
  50              	.L4:
  51 0012 00BF     		.align	2
  52              	.L3:
  53 0014 00000000 		.word	.LANCHOR0
  54 0018 00000000 		.word	StartDefaultTask
  55 001c 00000000 		.word	.LANCHOR1
  56              		.cfi_endproc
  57              	.LFE142:
  59              		.section	.rodata.messageCallback.str1.4,"aMS",%progbits,1
  60              		.align	2
  61              	.LC0:
  62 0000 52656365 		.ascii	"Received: %s\012\000"
  62      69766564 
  62      3A202573 
  62      0A00
  63              		.section	.text.messageCallback,"ax",%progbits
  64              		.align	1
  65              		.global	messageCallback
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	messageCallback:
  71              	.LVL1:
  72              	.LFB144:
 264:Core/Src/freertos.c **** 
 265:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 266:Core/Src/freertos.c **** /**
 267:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 268:Core/Src/freertos.c ****   * @param  argument: Not used
 269:Core/Src/freertos.c ****   * @retval None
 270:Core/Src/freertos.c ****   */
ARM GAS  /tmp/ccDBp1of.s 			page 7


 271:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 272:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 273:Core/Src/freertos.c **** {
 274:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 275:Core/Src/freertos.c ****   /* USER CODE BEGIN 5 */
 276:Core/Src/freertos.c **** 
 277:Core/Src/freertos.c ****   // micro-ROS configuration
 278:Core/Src/freertos.c **** 
 279:Core/Src/freertos.c ****   rmw_uros_set_custom_transport(
 280:Core/Src/freertos.c ****     true,
 281:Core/Src/freertos.c ****     (void *) &huart3,
 282:Core/Src/freertos.c ****     cubemx_transport_open,
 283:Core/Src/freertos.c ****     cubemx_transport_close,
 284:Core/Src/freertos.c ****     cubemx_transport_write,
 285:Core/Src/freertos.c ****     cubemx_transport_read);
 286:Core/Src/freertos.c **** 
 287:Core/Src/freertos.c ****   rcl_allocator_t freeRTOS_allocator = rcutils_get_zero_initialized_allocator();
 288:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 289:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 290:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 291:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 292:Core/Src/freertos.c **** 
 293:Core/Src/freertos.c ****   if (!rcutils_set_default_allocator(&freeRTOS_allocator)) {
 294:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 295:Core/Src/freertos.c ****   }
 296:Core/Src/freertos.c **** 
 297:Core/Src/freertos.c **** 
 298:Core/Src/freertos.c **** 	int length;
 299:Core/Src/freertos.c **** 	motor1.position_p = 0;
 300:Core/Src/freertos.c **** 	motor2.position_p = 0;
 301:Core/Src/freertos.c **** 
 302:Core/Src/freertos.c **** 
 303:Core/Src/freertos.c **** 
 304:Core/Src/freertos.c **** 
 305:Core/Src/freertos.c **** 
 306:Core/Src/freertos.c **** 
 307:Core/Src/freertos.c ****   // micro-ROS app
 308:Core/Src/freertos.c **** 
 309:Core/Src/freertos.c ****   rcl_publisher_t publisher;
 310:Core/Src/freertos.c ****   std_msgs__msg__Int32 msg;
 311:Core/Src/freertos.c **** //test
 312:Core/Src/freertos.c ****   rcl_publisher_t publisher_test;
 313:Core/Src/freertos.c ****   std_msgs__msg__Int32_test1 msg_test;
 314:Core/Src/freertos.c **** 
 315:Core/Src/freertos.c ****   rcl_subscription_t subscriber_test1;
 316:Core/Src/freertos.c ****   std_msgs__msg__Int32_test2 submsg_test1;
 317:Core/Src/freertos.c **** 
 318:Core/Src/freertos.c ****   rcl_subscription_t subscriber_test2;
 319:Core/Src/freertos.c ****   std_msgs__msg__Int32_test3 submsg_test2;
 320:Core/Src/freertos.c **** //
 321:Core/Src/freertos.c ****   rcl_publisher_t publisher_1;
 322:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_1;
 323:Core/Src/freertos.c **** 
 324:Core/Src/freertos.c ****   rcl_publisher_t publisher_2;
 325:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub2 pubmsg_2;
 326:Core/Src/freertos.c **** 
 327:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 8


 328:Core/Src/freertos.c ****   rcl_publisher_t publisher_3;
 329:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_3;
 330:Core/Src/freertos.c **** 
 331:Core/Src/freertos.c **** 
 332:Core/Src/freertos.c ****   rcl_subscription_t subscriber_2;
 333:Core/Src/freertos.c **** //  std_msgs__msg__String_sub1 submsg_1;
 334:Core/Src/freertos.c ****   geometry_msgs__msg__Twist submsg_2;
 335:Core/Src/freertos.c **** //  geometry_msgs__msg__Twist * submsg_2_1;
 336:Core/Src/freertos.c **** 
 337:Core/Src/freertos.c ****   rclc_support_t support;
 338:Core/Src/freertos.c ****   rcl_allocator_t allocator;
 339:Core/Src/freertos.c ****   rcl_node_t node;
 340:Core/Src/freertos.c **** 
 341:Core/Src/freertos.c ****   allocator = rcl_get_default_allocator();
 342:Core/Src/freertos.c **** 
 343:Core/Src/freertos.c ****   //create init_options
 344:Core/Src/freertos.c ****   rclc_support_init(&support, 0, NULL, &allocator);
 345:Core/Src/freertos.c **** 
 346:Core/Src/freertos.c **** 
 347:Core/Src/freertos.c **** 
 348:Core/Src/freertos.c ****   // create node
 349:Core/Src/freertos.c ****   rclc_node_init_default(&node, "cubemx_node", "", &support);
 350:Core/Src/freertos.c **** 
 351:Core/Src/freertos.c ****   // create publisher example
 352:Core/Src/freertos.c ****   rclc_publisher_init_default(
 353:Core/Src/freertos.c ****     &publisher,
 354:Core/Src/freertos.c ****     &node,
 355:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 356:Core/Src/freertos.c ****     "cubemx_publisher");
 357:Core/Src/freertos.c **** 
 358:Core/Src/freertos.c **** 
 359:Core/Src/freertos.c ****   // create publisher_2
 360:Core/Src/freertos.c **** /*  rclc_publisher_init_default(
 361:Core/Src/freertos.c ****     &publisher_1,
 362:Core/Src/freertos.c ****     &node,
 363:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 364:Core/Src/freertos.c ****     "r_enc");
 365:Core/Src/freertos.c **** 
 366:Core/Src/freertos.c ****   	  // r_wheel_vel
 367:Core/Src/freertos.c ****   // create publisher_3
 368:Core/Src/freertos.c ****   rclc_publisher_init_default(
 369:Core/Src/freertos.c ****     &publisher_2,
 370:Core/Src/freertos.c ****     &node,
 371:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 372:Core/Src/freertos.c ****     "l_enc");
 373:Core/Src/freertos.c **** */
 374:Core/Src/freertos.c **** 
 375:Core/Src/freertos.c ****   // create publisher_3
 376:Core/Src/freertos.c ****   rclc_publisher_init_default(
 377:Core/Src/freertos.c ****     &publisher_3,
 378:Core/Src/freertos.c ****     &node,
 379:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 380:Core/Src/freertos.c ****     "enc");
 381:Core/Src/freertos.c **** 
 382:Core/Src/freertos.c **** 
 383:Core/Src/freertos.c ****   	  //l_enc
 384:Core/Src/freertos.c ****   // create publisher_test
ARM GAS  /tmp/ccDBp1of.s 			page 9


 385:Core/Src/freertos.c ****   rclc_publisher_init_default(
 386:Core/Src/freertos.c ****     &publisher_test,
 387:Core/Src/freertos.c ****     &node,
 388:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 389:Core/Src/freertos.c ****     "cubemx_publisher_test");
 390:Core/Src/freertos.c **** 
 391:Core/Src/freertos.c ****   // create subscriber_test1
 392:Core/Src/freertos.c ****   rclc_subscription_init_default(
 393:Core/Src/freertos.c ****       &subscriber_2,
 394:Core/Src/freertos.c ****       &node,
 395:Core/Src/freertos.c **** //      ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, twist),
 396:Core/Src/freertos.c ****       // ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, Twist),
 397:Core/Src/freertos.c ****       // "diffbot_base_controller/cmd_vel_unstamped");
 398:Core/Src/freertos.c ****   	  ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, Twist),
 399:Core/Src/freertos.c ****   	  "cmd_vel");
 400:Core/Src/freertos.c ****   // create subscriber_test2
 401:Core/Src/freertos.c **** /*  rclc_subscription_init_default(
 402:Core/Src/freertos.c ****       &subscriber_test2,
 403:Core/Src/freertos.c ****       &node,
 404:Core/Src/freertos.c ****       ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 405:Core/Src/freertos.c **** //	    "cubemx_publisher_test");
 406:Core/Src/freertos.c ****         "r_wheel_vel");*/
 407:Core/Src/freertos.c **** 
 408:Core/Src/freertos.c ****   // create subscriber
 409:Core/Src/freertos.c **** /*  rclc_subscription_init_default(
 410:Core/Src/freertos.c ****       &subscriber_1,
 411:Core/Src/freertos.c ****       &node,
 412:Core/Src/freertos.c ****       ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, String),
 413:Core/Src/freertos.c ****       "r_wheel_vel_String");*/
 414:Core/Src/freertos.c **** 
 415:Core/Src/freertos.c **** 
 416:Core/Src/freertos.c **** 
 417:Core/Src/freertos.c **** 
 418:Core/Src/freertos.c ****   // add subscriber to executor
 419:Core/Src/freertos.c ****   rclc_executor_t executor;
 420:Core/Src/freertos.c ****   rclc_executor_init(&executor, &support.context, 1, &allocator);
 421:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_1, &submsg_1, &messageCallback, ON_NEW_DA
 422:Core/Src/freertos.c **** 
 423:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_test1, &submsg_test1, &messageCallback_te
 424:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_1, &submsg_test2, &twist_subscription_cal
 425:Core/Src/freertos.c ****   rclc_executor_add_subscription(&executor, &subscriber_2, &submsg_2, &twist_subscription_callback,
 426:Core/Src/freertos.c **** 
 427:Core/Src/freertos.c ****   msg.data = 0;
 428:Core/Src/freertos.c ****   pubmsg_1.hall_1 = 0;
 429:Core/Src/freertos.c ****   pubmsg_2.hall_2 = 0;
 430:Core/Src/freertos.c **** 
 431:Core/Src/freertos.c **** 
 432:Core/Src/freertos.c **** //  RUN_INIT();
 433:Core/Src/freertos.c **** 
 434:Core/Src/freertos.c **** 
 435:Core/Src/freertos.c ****   for(;;)
 436:Core/Src/freertos.c ****   {
 437:Core/Src/freertos.c ****     // publish message
 438:Core/Src/freertos.c **** 
 439:Core/Src/freertos.c **** 
 440:Core/Src/freertos.c ****       // hall pulse count
 441:Core/Src/freertos.c **** 	  if(motor1.encoder > 500 && motor1.encoder < -500){
ARM GAS  /tmp/ccDBp1of.s 			page 10


 442:Core/Src/freertos.c **** 		pubmsg_1.hall_1 = (int32_t)motor1.encoder_p;
 443:Core/Src/freertos.c **** 
 444:Core/Src/freertos.c **** 	  }
 445:Core/Src/freertos.c **** 	  else{
 446:Core/Src/freertos.c **** 		pubmsg_1.hall_1 = (int32_t)motor1.encoder;
 447:Core/Src/freertos.c **** 		motor1.encoder_p = motor1.encoder;
 448:Core/Src/freertos.c **** 	  }
 449:Core/Src/freertos.c **** 
 450:Core/Src/freertos.c **** 	  if(motor2.encoder > 500 && motor2.encoder < -500){
 451:Core/Src/freertos.c **** 		pubmsg_2.hall_2 = (int32_t)motor2.encoder_p;
 452:Core/Src/freertos.c **** 
 453:Core/Src/freertos.c **** 	  }
 454:Core/Src/freertos.c **** 	  else{
 455:Core/Src/freertos.c **** 		pubmsg_2.hall_2 = (int32_t)motor2.encoder;
 456:Core/Src/freertos.c **** 		motor2.encoder_p = motor2.encoder;
 457:Core/Src/freertos.c **** 	  }
 458:Core/Src/freertos.c **** 
 459:Core/Src/freertos.c **** 	  if(pubmsg_1.hall_1>=0){
 460:Core/Src/freertos.c **** 		  r_enc_op = 0;
 461:Core/Src/freertos.c **** 	  }
 462:Core/Src/freertos.c **** 	  else{
 463:Core/Src/freertos.c **** 		  r_enc_op = 1;
 464:Core/Src/freertos.c **** 	  }
 465:Core/Src/freertos.c **** 
 466:Core/Src/freertos.c **** 	  if(pubmsg_2.hall_2>=0){
 467:Core/Src/freertos.c **** 		  l_enc_op = 0;
 468:Core/Src/freertos.c **** 	  }
 469:Core/Src/freertos.c **** 	  else{
 470:Core/Src/freertos.c **** 		  l_enc_op = 10;
 471:Core/Src/freertos.c **** 	  }
 472:Core/Src/freertos.c **** 
 473:Core/Src/freertos.c **** 	  //	  pubmsg_3.hall_1 = pubmsg_1.hall_1 + 10000*pubmsg_2.hall_2;
 474:Core/Src/freertos.c **** 	  	  pubmsg_3.hall_1 = l_enc_op + r_enc_op + 100*abs(pubmsg_1.hall_1) + 10000*100*abs(pubmsg_2.hal
 475:Core/Src/freertos.c **** 
 476:Core/Src/freertos.c **** /*		 rcl_ret_t ret_3 = rcl_publish(&publisher_2, &pubmsg_2, NULL);
 477:Core/Src/freertos.c **** 		 rcl_ret_t ret_2 = rcl_publish(&publisher_1, &pubmsg_1, NULL);*/
 478:Core/Src/freertos.c **** 
 479:Core/Src/freertos.c **** 		 rcl_ret_t ret_4 = rcl_publish(&publisher_3, &pubmsg_3, NULL);
 480:Core/Src/freertos.c **** 
 481:Core/Src/freertos.c **** 
 482:Core/Src/freertos.c **** /*	   if (ret_2 != RCL_RET_OK)
 483:Core/Src/freertos.c **** 	   {
 484:Core/Src/freertos.c **** 		 printf("Error publishing (line %d)\n", __LINE__);
 485:Core/Src/freertos.c **** 	   }
 486:Core/Src/freertos.c **** 	   if (ret_3 != RCL_RET_OK)
 487:Core/Src/freertos.c **** 	   {
 488:Core/Src/freertos.c **** 		 printf("Error publishing (line %d)\n", __LINE__);
 489:Core/Src/freertos.c **** 	   }*/
 490:Core/Src/freertos.c **** 
 491:Core/Src/freertos.c **** //    rcl_ret_t ret = rcl_publish(&publisher, &msg, NULL);
 492:Core/Src/freertos.c **** /*	 rcl_ret_t ret_3 = rcl_publish(&publisher_2, &pubmsg_2, NULL);
 493:Core/Src/freertos.c **** 	 rcl_ret_t ret_2 = rcl_publish(&publisher_1, &pubmsg_1, NULL);*/
 494:Core/Src/freertos.c **** //    rcl_ret_t ret = rcl_publish(&publisher, &msg, NULL);
 495:Core/Src/freertos.c ****     rcl_ret_t ret_test = rcl_publish(&publisher_test, &msg_test, NULL);
 496:Core/Src/freertos.c **** /*    if (ret != RCL_RET_OK)
 497:Core/Src/freertos.c ****     {
 498:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__); 
ARM GAS  /tmp/ccDBp1of.s 			page 11


 499:Core/Src/freertos.c ****     }*/
 500:Core/Src/freertos.c ****     /*
 501:Core/Src/freertos.c ****     if (ret_2 != RCL_RET_OK)
 502:Core/Src/freertos.c ****     {
 503:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__);
 504:Core/Src/freertos.c ****     }
 505:Core/Src/freertos.c ****     if (ret_3 != RCL_RET_OK)
 506:Core/Src/freertos.c ****     {
 507:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__);
 508:Core/Src/freertos.c ****     }*/
 509:Core/Src/freertos.c **** 
 510:Core/Src/freertos.c **** 
 511:Core/Src/freertos.c **** 	  // Transmit command to request data
 512:Core/Src/freertos.c **** 	  length = sizeof(Command_Request_Data);
 513:Core/Src/freertos.c **** 	  HAL_UART_Transmit(&huart5, Command_Request_Data, length, 10);
 514:Core/Src/freertos.c **** 
 515:Core/Src/freertos.c **** 
 516:Core/Src/freertos.c ****     length = DATA_SIZE;
 517:Core/Src/freertos.c **** //    if (HAL_UART_Receive(&huart5, Command_Response1, 50, 100) == HAL_OK) {
 518:Core/Src/freertos.c **** 
 519:Core/Src/freertos.c ****     	HAL_UART_Receive(&huart5, Command_Response1, 50, 500);
 520:Core/Src/freertos.c **** 
 521:Core/Src/freertos.c ****   	  for(int i = 0; i < 50-DATA_SIZE; i++){
 522:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 523:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 524:Core/Src/freertos.c **** 
 525:Core/Src/freertos.c ****     	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response1[
 526:Core/Src/freertos.c **** 
 527:Core/Src/freertos.c ****   	              // Copy received data to another buffer (for example purposes)
 528:Core/Src/freertos.c ****   	    		  for (int j = 0; j < DATA_SIZE; j++) {
 529:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 530:Core/Src/freertos.c ****   	    		          i++;
 531:Core/Src/freertos.c **** 					  }
 532:Core/Src/freertos.c **** 
 533:Core/Src/freertos.c **** 
 534:Core/Src/freertos.c ****   	    		  motor1.rpm = Command_Response2[5] | Command_Response2[6]<<8;
 535:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 536:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 537:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 538:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 539:Core/Src/freertos.c **** 
 540:Core/Src/freertos.c ****   	    		  motor2.rpm = Command_Response2[14] | Command_Response2[15]<<8;
 541:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 542:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 543:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 544:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 545:Core/Src/freertos.c ****   	    		  motor2.encoder = -(motor2.position - motor2.position_p);
 546:Core/Src/freertos.c **** 
 547:Core/Src/freertos.c **** 
 548:Core/Src/freertos.c ****       			  break;
 549:Core/Src/freertos.c ****       	    	  }
 550:Core/Src/freertos.c ****       		  }
 551:Core/Src/freertos.c ****       	  }
 552:Core/Src/freertos.c **** //        }
 553:Core/Src/freertos.c **** /*    else{
 554:Core/Src/freertos.c ****     	motor1.encoder = -1;
 555:Core/Src/freertos.c ****     	motor2.encoder = -1;
ARM GAS  /tmp/ccDBp1of.s 			page 12


 556:Core/Src/freertos.c ****     }*/
 557:Core/Src/freertos.c **** 
 558:Core/Src/freertos.c **** 
 559:Core/Src/freertos.c ****     memset(Command_Response1, 0, sizeof(Command_Response1)); // 버퍼 초기화
 560:Core/Src/freertos.c ****     memset(Command_Response2, 0, sizeof(Command_Response2)); // 버퍼 초기화
 561:Core/Src/freertos.c **** 
 562:Core/Src/freertos.c **** 
 563:Core/Src/freertos.c **** 
 564:Core/Src/freertos.c **** 
 565:Core/Src/freertos.c **** 
 566:Core/Src/freertos.c **** 
 567:Core/Src/freertos.c **** 
 568:Core/Src/freertos.c **** 
 569:Core/Src/freertos.c **** 
 570:Core/Src/freertos.c **** 
 571:Core/Src/freertos.c **** 
 572:Core/Src/freertos.c ****     // subscribe message
 573:Core/Src/freertos.c **** //    rclc_executor_spin(&executor);
 574:Core/Src/freertos.c **** //    rclc_executor_spin_some(&executor, timeout);
 575:Core/Src/freertos.c **** //    rclc_executor_spin_one_period(&executor, timeout);
 576:Core/Src/freertos.c **** 
 577:Core/Src/freertos.c ****     /*      // hall pulse count
 578:Core/Src/freertos.c ****       	pubmsg_1.hall_1 = hall1;
 579:Core/Src/freertos.c ****       	pubmsg_2.hall_2 = hall2;
 580:Core/Src/freertos.c **** 
 581:Core/Src/freertos.c ****           // reset the hall sensor data
 582:Core/Src/freertos.c ****       	hall1 = 0;
 583:Core/Src/freertos.c ****       	hall2 = 0;*/
 584:Core/Src/freertos.c **** 
 585:Core/Src/freertos.c ****         // hall pulse count
 586:Core/Src/freertos.c **** /*    if(motor1.encoder > 500 && motor1.encoder < -500){
 587:Core/Src/freertos.c ****     	pubmsg_1.hall_1 = (int32_t)motor1.encoder_p;
 588:Core/Src/freertos.c **** 
 589:Core/Src/freertos.c ****     }
 590:Core/Src/freertos.c ****     else{
 591:Core/Src/freertos.c ****     	pubmsg_1.hall_1 = (int32_t)motor1.encoder;
 592:Core/Src/freertos.c ****     	motor1.encoder_p = motor1.encoder;
 593:Core/Src/freertos.c ****     }
 594:Core/Src/freertos.c **** 
 595:Core/Src/freertos.c ****     if(motor2.encoder > 500 && motor2.encoder < -500){
 596:Core/Src/freertos.c ****     	pubmsg_2.hall_2 = (int32_t)motor2.encoder_p;
 597:Core/Src/freertos.c **** 
 598:Core/Src/freertos.c ****     }
 599:Core/Src/freertos.c ****     else{
 600:Core/Src/freertos.c ****     	pubmsg_2.hall_2 = (int32_t)motor2.encoder;
 601:Core/Src/freertos.c ****     	motor2.encoder_p = motor2.encoder;
 602:Core/Src/freertos.c ****     }
 603:Core/Src/freertos.c **** 
 604:Core/Src/freertos.c **** 
 605:Core/Src/freertos.c ****    	 rcl_ret_t ret_3 = rcl_publish(&publisher_2, &pubmsg_2, NULL);
 606:Core/Src/freertos.c ****    	 rcl_ret_t ret_2 = rcl_publish(&publisher_1, &pubmsg_1, NULL);
 607:Core/Src/freertos.c **** 
 608:Core/Src/freertos.c **** 
 609:Core/Src/freertos.c ****      if (ret_2 != RCL_RET_OK)
 610:Core/Src/freertos.c ****      {
 611:Core/Src/freertos.c ****        printf("Error publishing (line %d)\n", __LINE__);
 612:Core/Src/freertos.c ****      }
ARM GAS  /tmp/ccDBp1of.s 			page 13


 613:Core/Src/freertos.c ****      if (ret_3 != RCL_RET_OK)
 614:Core/Src/freertos.c ****      {
 615:Core/Src/freertos.c ****        printf("Error publishing (line %d)\n", __LINE__);
 616:Core/Src/freertos.c ****      }*/
 617:Core/Src/freertos.c ****         // reset the hall sensor data
 618:Core/Src/freertos.c **** /*    	hall1 = 0;
 619:Core/Src/freertos.c ****     	hall2 = 0;*/
 620:Core/Src/freertos.c **** 
 621:Core/Src/freertos.c **** /*
 622:Core/Src/freertos.c **** 	Linear.vx = submsg_2_1->linear.x;
 623:Core/Src/freertos.c **** 	Linear.vy = submsg_2_1->linear.y;
 624:Core/Src/freertos.c **** 	Linear.vz = submsg_2_1->linear.z;*/
 625:Core/Src/freertos.c **** 
 626:Core/Src/freertos.c **** /*	Linear.vx = submsg_2.linear.x;
 627:Core/Src/freertos.c **** 	Linear.vy = submsg_2.linear.y;
 628:Core/Src/freertos.c **** 	Linear.vz = submsg_2.linear.z;*/
 629:Core/Src/freertos.c **** 
 630:Core/Src/freertos.c **** 	// move the robot.
 631:Core/Src/freertos.c **** //	MOTION_MODE(Linear.vx, Linear.vy, Linear.vz);
 632:Core/Src/freertos.c **** /*
 633:Core/Src/freertos.c **** 	if(m_mode == 0){
 634:Core/Src/freertos.c **** 		// robot stop
 635:Core/Src/freertos.c **** 		Run_State = 'B';
 636:Core/Src/freertos.c **** //		HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 637:Core/Src/freertos.c **** //		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, SET);	// Motor2 RUN/BRK - BRK
 638:Core/Src/freertos.c **** 	}
 639:Core/Src/freertos.c **** 	else if(m_mode == 1){
 640:Core/Src/freertos.c **** 		// robot move straight
 641:Core/Src/freertos.c **** 		if(Linear.vx >0){
 642:Core/Src/freertos.c **** 			Run_Dir = 'F';
 643:Core/Src/freertos.c **** 			Run_State = 'U';
 644:Core/Src/freertos.c **** 			PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 645:Core/Src/freertos.c **** 			PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 646:Core/Src/freertos.c **** 		}
 647:Core/Src/freertos.c **** 		else if (Linear.vx < 0)
 648:Core/Src/freertos.c **** 		{
 649:Core/Src/freertos.c **** 			Run_Dir = 'O';
 650:Core/Src/freertos.c **** 			Run_State = 'U';
 651:Core/Src/freertos.c **** 			PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 652:Core/Src/freertos.c **** 			PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 653:Core/Src/freertos.c **** 		}
 654:Core/Src/freertos.c **** 
 655:Core/Src/freertos.c **** 
 656:Core/Src/freertos.c **** 
 657:Core/Src/freertos.c **** 	}
 658:Core/Src/freertos.c **** 	else if(m_mode == 2){
 659:Core/Src/freertos.c **** 		// robot move rotation
 660:Core/Src/freertos.c **** 		if(Linear.vx==0 && Linear.vy==0){
 661:Core/Src/freertos.c **** 			if(Angular.vz > 0){
 662:Core/Src/freertos.c **** 				Run_Dir = 'L';
 663:Core/Src/freertos.c **** 				Run_State = 'U';
 664:Core/Src/freertos.c **** 			}
 665:Core/Src/freertos.c **** 			else if(Angular.vz < 0){
 666:Core/Src/freertos.c **** 				Run_Dir = 'R';
 667:Core/Src/freertos.c **** 				Run_State = 'U';
 668:Core/Src/freertos.c **** 			}
 669:Core/Src/freertos.c **** 			PWM_R(TURN(Angular.vz));
ARM GAS  /tmp/ccDBp1of.s 			page 14


 670:Core/Src/freertos.c **** 			PWM_L(TURN(Angular.vz));
 671:Core/Src/freertos.c **** 		}
 672:Core/Src/freertos.c **** */
 673:Core/Src/freertos.c **** /*
 674:Core/Src/freertos.c **** 	// 좌회전
 675:Core/Src/freertos.c **** 	if(m_mode == 1){
 676:Core/Src/freertos.c **** 		Run_State = 'U';
 677:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) + CAL_AngularSpeed(Angular.vx, Angular.vy,
 678:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy,
 679:Core/Src/freertos.c **** 	}
 680:Core/Src/freertos.c **** 	// 우회전
 681:Core/Src/freertos.c **** 	else if(m_mode == 2){
 682:Core/Src/freertos.c **** 		Run_State = 'U';
 683:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy,
 684:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) + CAL_AngularSpeed(Angular.vx, Angular.vy,
 685:Core/Src/freertos.c **** 	}
 686:Core/Src/freertos.c **** 	else {
 687:Core/Src/freertos.c **** 		// robot stop
 688:Core/Src/freertos.c **** 		Run_State = 'B';
 689:Core/Src/freertos.c **** 	}*/
 690:Core/Src/freertos.c **** 
 691:Core/Src/freertos.c **** 	pwm_p = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) + CAL_AngularSpeed(Angular.vx, Angular.vy
 692:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 693:Core/Src/freertos.c **** 
 694:Core/Src/freertos.c **** 	// 좌회전
 695:Core/Src/freertos.c **** 	if(m_mode == 0){
 696:Core/Src/freertos.c **** 		Run_State = 'B';
 697:Core/Src/freertos.c **** 		PWM_R(0);
 698:Core/Src/freertos.c **** 		PWM_L(0);
 699:Core/Src/freertos.c **** 	}
 700:Core/Src/freertos.c **** 	// 우회전
 701:Core/Src/freertos.c **** 	else if(m_mode == 1){
 702:Core/Src/freertos.c **** 		Run_State = 'U';
 703:Core/Src/freertos.c **** //		Run_Dir = 'F';
 704:Core/Src/freertos.c **** 
 705:Core/Src/freertos.c **** 		if(pwm_m<0){
 706:Core/Src/freertos.c **** 			Run_Dir = 'R';
 707:Core/Src/freertos.c **** 		}
 708:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 709:Core/Src/freertos.c **** 			Run_Dir = 'F';
 710:Core/Src/freertos.c **** 		}
 711:Core/Src/freertos.c **** 		PWM_R(fabs(pwm_m));
 712:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 713:Core/Src/freertos.c **** 	}
 714:Core/Src/freertos.c **** 	else if(m_mode == 2){
 715:Core/Src/freertos.c **** 		Run_State = 'U';
 716:Core/Src/freertos.c **** //		Run_Dir = 'F';
 717:Core/Src/freertos.c **** 		if(pwm_m<0){
 718:Core/Src/freertos.c **** 			Run_Dir = 'L';
 719:Core/Src/freertos.c **** 		}
 720:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 721:Core/Src/freertos.c **** 			Run_Dir = 'F';
 722:Core/Src/freertos.c **** 		}
 723:Core/Src/freertos.c **** 		PWM_R(pwm_p);
 724:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 725:Core/Src/freertos.c **** 	}
 726:Core/Src/freertos.c **** 	else if(m_mode == 3){
ARM GAS  /tmp/ccDBp1of.s 			page 15


 727:Core/Src/freertos.c **** 		Run_State = 'U';
 728:Core/Src/freertos.c **** //		Run_Dir = 'O';
 729:Core/Src/freertos.c **** 		if(pwm_m<0){
 730:Core/Src/freertos.c **** 			Run_Dir = 'R';
 731:Core/Src/freertos.c **** 		}
 732:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 733:Core/Src/freertos.c **** 			Run_Dir = 'O';
 734:Core/Src/freertos.c **** 		}
 735:Core/Src/freertos.c **** 		PWM_R(pwm_p);
 736:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 737:Core/Src/freertos.c **** 	}
 738:Core/Src/freertos.c **** 	else if(m_mode == 4){
 739:Core/Src/freertos.c **** 		Run_State = 'U';
 740:Core/Src/freertos.c **** //		Run_Dir = 'O';
 741:Core/Src/freertos.c **** 		if(pwm_m<0){
 742:Core/Src/freertos.c **** 			Run_Dir = 'L';
 743:Core/Src/freertos.c **** 		}
 744:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 745:Core/Src/freertos.c **** 			Run_Dir = 'O';
 746:Core/Src/freertos.c **** 		}
 747:Core/Src/freertos.c **** 		PWM_R(fabs(pwm_m));
 748:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 749:Core/Src/freertos.c **** 	}
 750:Core/Src/freertos.c **** 	else if(m_mode == 5){
 751:Core/Src/freertos.c **** 		Run_State = 'U';
 752:Core/Src/freertos.c **** 		Run_Dir = 'F';
 753:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 754:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 755:Core/Src/freertos.c **** 	}
 756:Core/Src/freertos.c **** 	else if(m_mode == 6){
 757:Core/Src/freertos.c **** 		Run_State = 'U';
 758:Core/Src/freertos.c **** 		Run_Dir = 'O';
 759:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 760:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 761:Core/Src/freertos.c **** 	}
 762:Core/Src/freertos.c **** 
 763:Core/Src/freertos.c **** 
 764:Core/Src/freertos.c **** 
 765:Core/Src/freertos.c **** 
 766:Core/Src/freertos.c **** 
 767:Core/Src/freertos.c **** 
 768:Core/Src/freertos.c **** 
 769:Core/Src/freertos.c **** 
 770:Core/Src/freertos.c **** 		/*
 771:Core/Src/freertos.c **** 		angle = CAL_ANG(Linear.vx, Linear.vy, Linear.vz);
 772:Core/Src/freertos.c **** 		TURN(angle);*/
 773:Core/Src/freertos.c **** //	}
 774:Core/Src/freertos.c **** 
 775:Core/Src/freertos.c **** 	// Motor activate
 776:Core/Src/freertos.c **** //    RUN_DIR('F');
 777:Core/Src/freertos.c **** //    RUN_RB('U');
 778:Core/Src/freertos.c ****     RUN_RB(Run_State);
 779:Core/Src/freertos.c ****     MOTOR_SS(Motor_State);
 780:Core/Src/freertos.c ****     RUN_DIR(Run_Dir);
 781:Core/Src/freertos.c **** 
 782:Core/Src/freertos.c ****     rclc_executor_spin_some(&executor, timeout);
 783:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 16


 784:Core/Src/freertos.c **** 
 785:Core/Src/freertos.c **** 	  motor1.position_p = motor1.position;
 786:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 787:Core/Src/freertos.c **** 
 788:Core/Src/freertos.c **** 
 789:Core/Src/freertos.c ****         osDelay(1-1);
 790:Core/Src/freertos.c ****       }
 791:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 792:Core/Src/freertos.c **** }
 793:Core/Src/freertos.c **** 
 794:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 795:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 796:Core/Src/freertos.c **** 
 797:Core/Src/freertos.c **** 	// 기본 ?��?��(default task) ?��?��?�� 구독 콜백 ?��?��
 798:Core/Src/freertos.c **** 	void messageCallback(const void *msgin) {
  73              		.loc 1 798 42 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 798 42 is_stmt 0 view .LVU6
  78 0000 08B5     		push	{r3, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
 799:Core/Src/freertos.c **** 		const std_msgs__msg__String_sub1 *msg = (const std_msgs__msg__String_sub1 *)msgin;
  83              		.loc 1 799 3 is_stmt 1 view .LVU7
  84              	.LVL2:
 800:Core/Src/freertos.c **** 		printf("Received: %s\n", msg->dir_1);
  85              		.loc 1 800 3 view .LVU8
  86 0002 90E80E00 		ldm	r0, {r1, r2, r3}
  87 0006 0248     		ldr	r0, .L7
  88              	.LVL3:
  89              		.loc 1 800 3 is_stmt 0 view .LVU9
  90 0008 FFF7FEFF 		bl	printf
  91              	.LVL4:
 801:Core/Src/freertos.c **** 	}
  92              		.loc 1 801 2 view .LVU10
  93 000c 08BD     		pop	{r3, pc}
  94              	.L8:
  95 000e 00BF     		.align	2
  96              	.L7:
  97 0010 00000000 		.word	.LC0
  98              		.cfi_endproc
  99              	.LFE144:
 101              		.section	.rodata.messageCallback_test1.str1.4,"aMS",%progbits,1
 102              		.align	2
 103              	.LC1:
 104 0000 52656365 		.ascii	"Received: %d\012\000"
 104      69766564 
 104      3A202564 
 104      0A00
 105              		.section	.text.messageCallback_test1,"ax",%progbits
 106              		.align	1
 107              		.global	messageCallback_test1
 108              		.syntax unified
 109              		.thumb
ARM GAS  /tmp/ccDBp1of.s 			page 17


 110              		.thumb_func
 112              	messageCallback_test1:
 113              	.LVL5:
 114              	.LFB145:
 802:Core/Src/freertos.c **** 
 803:Core/Src/freertos.c **** 	void messageCallback_test1(const void *msgin) {
 115              		.loc 1 803 48 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		.loc 1 803 48 is_stmt 0 view .LVU12
 120 0000 08B5     		push	{r3, lr}
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 3, -8
 124              		.cfi_offset 14, -4
 804:Core/Src/freertos.c **** 		const std_msgs__msg__Int32_test2 *msg = (const std_msgs__msg__Int32_test2 *)msgin;
 125              		.loc 1 804 3 is_stmt 1 view .LVU13
 126              	.LVL6:
 805:Core/Src/freertos.c **** 		printf("Received: %d\n", msg->test_2);
 127              		.loc 1 805 3 view .LVU14
 128 0002 0168     		ldr	r1, [r0]
 129 0004 0148     		ldr	r0, .L11
 130              	.LVL7:
 131              		.loc 1 805 3 is_stmt 0 view .LVU15
 132 0006 FFF7FEFF 		bl	printf
 133              	.LVL8:
 806:Core/Src/freertos.c **** 	}
 134              		.loc 1 806 2 view .LVU16
 135 000a 08BD     		pop	{r3, pc}
 136              	.L12:
 137              		.align	2
 138              	.L11:
 139 000c 00000000 		.word	.LC1
 140              		.cfi_endproc
 141              	.LFE145:
 143              		.section	.text.messageCallback_test2,"ax",%progbits
 144              		.align	1
 145              		.global	messageCallback_test2
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	messageCallback_test2:
 151              	.LVL9:
 152              	.LFB146:
 807:Core/Src/freertos.c **** 
 808:Core/Src/freertos.c **** 	void messageCallback_test2(const void *msgin) {
 153              		.loc 1 808 48 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		.loc 1 808 48 is_stmt 0 view .LVU18
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
ARM GAS  /tmp/ccDBp1of.s 			page 18


 809:Core/Src/freertos.c **** 		const std_msgs__msg__Int32_test3 *msg = (const std_msgs__msg__Int32_test3 *)msgin;
 163              		.loc 1 809 3 is_stmt 1 view .LVU19
 164              	.LVL10:
 810:Core/Src/freertos.c **** 		printf("Received: %d\n", msg->test_3);
 165              		.loc 1 810 3 view .LVU20
 166 0002 0168     		ldr	r1, [r0]
 167 0004 0148     		ldr	r0, .L15
 168              	.LVL11:
 169              		.loc 1 810 3 is_stmt 0 view .LVU21
 170 0006 FFF7FEFF 		bl	printf
 171              	.LVL12:
 811:Core/Src/freertos.c **** 	}
 172              		.loc 1 811 2 view .LVU22
 173 000a 08BD     		pop	{r3, pc}
 174              	.L16:
 175              		.align	2
 176              	.L15:
 177 000c 00000000 		.word	.LC1
 178              		.cfi_endproc
 179              	.LFE146:
 181              		.section	.text.RUN_INIT,"ax",%progbits
 182              		.align	1
 183              		.global	RUN_INIT
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	RUN_INIT:
 189              	.LFB148:
 812:Core/Src/freertos.c **** 
 813:Core/Src/freertos.c **** 	void twist_subscription_callback(const void * msgin)
 814:Core/Src/freertos.c **** 	{
 815:Core/Src/freertos.c **** 	    const geometry_msgs__msg__Twist * msg = (const geometry_msgs__msg__Twist *)msgin;
 816:Core/Src/freertos.c **** 
 817:Core/Src/freertos.c **** 	    HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 818:Core/Src/freertos.c **** 
 819:Core/Src/freertos.c **** /*		Run_State = 'U';
 820:Core/Src/freertos.c **** 		Run_Dir = 'F';
 821:Core/Src/freertos.c **** 		Motor_State = 'T';*/
 822:Core/Src/freertos.c **** 
 823:Core/Src/freertos.c **** //    	m_mode = 1;
 824:Core/Src/freertos.c **** 
 825:Core/Src/freertos.c **** /*	    if(m_mode == 0){
 826:Core/Src/freertos.c **** 	    	m_mode = 1;
 827:Core/Src/freertos.c **** 	    }
 828:Core/Src/freertos.c **** 	    else{
 829:Core/Src/freertos.c **** 	    	m_mode =0;
 830:Core/Src/freertos.c **** 	    }*/
 831:Core/Src/freertos.c **** 
 832:Core/Src/freertos.c **** 	    // 선속도와 각속도의 모든 값을 변수에 저장
 833:Core/Src/freertos.c **** /*	    float linear_velocity_x = msg->linear.x;
 834:Core/Src/freertos.c **** 	    float linear_velocity_y = msg->linear.y;
 835:Core/Src/freertos.c **** 	    float linear_velocity_z = msg->linear.z;
 836:Core/Src/freertos.c **** 
 837:Core/Src/freertos.c **** 	    float angular_velocity_x = msg->angular.x;
 838:Core/Src/freertos.c **** 	    float angular_velocity_y = msg->angular.y;
 839:Core/Src/freertos.c **** 	    float angular_velocity_z = msg->angular.z;*/
 840:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 19


 841:Core/Src/freertos.c **** 
 842:Core/Src/freertos.c **** /*		Linear.vx = submsg_2.linear.x;
 843:Core/Src/freertos.c **** 		Linear.vy = submsg_2.linear.y;
 844:Core/Src/freertos.c **** 		Linear.vz = submsg_2.linear.z;
 845:Core/Src/freertos.c **** 
 846:Core/Src/freertos.c **** 		Angular.vx = submsg_2.angular.x;
 847:Core/Src/freertos.c **** 		Angular.vy = submsg_2.angular.y;
 848:Core/Src/freertos.c **** 		Angular.vz = submsg_2.angular.z;*/
 849:Core/Src/freertos.c **** 
 850:Core/Src/freertos.c **** 	    // 선속도와 각속도의 모든 값을 변수에 저장
 851:Core/Src/freertos.c **** /*	    linear_velocity_x = msg->linear.x;
 852:Core/Src/freertos.c **** 	    linear_velocity_y = msg->linear.y;
 853:Core/Src/freertos.c **** 	    linear_velocity_z = msg->linear.z;
 854:Core/Src/freertos.c **** 
 855:Core/Src/freertos.c **** 	    angular_velocity_x = msg->angular.x;
 856:Core/Src/freertos.c **** 	    angular_velocity_y = msg->angular.y;
 857:Core/Src/freertos.c **** 	    angular_velocity_z = msg->angular.z;*/
 858:Core/Src/freertos.c **** 
 859:Core/Src/freertos.c **** 
 860:Core/Src/freertos.c **** 		Linear.vx = msg->linear.x;
 861:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 862:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 863:Core/Src/freertos.c **** 
 864:Core/Src/freertos.c **** 		Angular.vx = msg->angular.x;
 865:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 866:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 867:Core/Src/freertos.c **** 
 868:Core/Src/freertos.c **** 		MOTION_MODE(Linear.vx, Linear.vy, Linear.vz, Angular.vx, Angular.vy, Angular.vz);
 869:Core/Src/freertos.c **** /*		if(Linear.vy != 0)	m_mode = 2;
 870:Core/Src/freertos.c **** 		else if(Linear.vy == 0){
 871:Core/Src/freertos.c **** 			if(Linear.vx == 0)	m_mode = 0;
 872:Core/Src/freertos.c **** 			else		m_mode = 1;
 873:Core/Src/freertos.c **** 		}*/
 874:Core/Src/freertos.c **** 
 875:Core/Src/freertos.c **** 
 876:Core/Src/freertos.c **** 
 877:Core/Src/freertos.c **** 
 878:Core/Src/freertos.c **** 	    // 저장된 값을 출력
 879:Core/Src/freertos.c **** /*	    printf("Received Twist - Linear Velocity (X: %f, Y: %f, Z: %f), Angular Velocity (X: %f, Y: 
 880:Core/Src/freertos.c **** 	           linear_velocity_x, linear_velocity_y, linear_velocity_z,
 881:Core/Src/freertos.c **** 	           angular_velocity_x, angular_velocity_y, angular_velocity_z);*/
 882:Core/Src/freertos.c **** 
 883:Core/Src/freertos.c **** 	    // MOTION_MODE 함수를 호출하여 m_mode 설정
 884:Core/Src/freertos.c **** //		m_mode = MOTION_MODE(linear_velocity_x, linear_velocity_y, linear_velocity_z);
 885:Core/Src/freertos.c **** //		MOTION_MODE(Linear.vx, Linear.vy, Linear.vz);
 886:Core/Src/freertos.c **** //		m_mode = MOTION_MODE(Linear.vx, Linear.vy, Linear.vz);
 887:Core/Src/freertos.c **** //		m_mode = 1;
 888:Core/Src/freertos.c **** 	}
 889:Core/Src/freertos.c **** 
 890:Core/Src/freertos.c **** 	// Motor function
 891:Core/Src/freertos.c **** 	void RUN_INIT(void){
 190              		.loc 1 891 21 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 10B5     		push	{r4, lr}
 195              	.LCFI4:
ARM GAS  /tmp/ccDBp1of.s 			page 20


 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 14, -4
 892:Core/Src/freertos.c **** 		  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 199              		.loc 1 892 5 view .LVU24
 200 0002 0C4C     		ldr	r4, .L19
 201 0004 0122     		movs	r2, #1
 202 0006 4FF40051 		mov	r1, #8192
 203 000a 2046     		mov	r0, r4
 204 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 205              	.LVL13:
 893:Core/Src/freertos.c **** 		  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 206              		.loc 1 893 5 view .LVU25
 207 0010 0122     		movs	r2, #1
 208 0012 4FF48041 		mov	r1, #16384
 209 0016 2046     		mov	r0, r4
 210 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 211              	.LVL14:
 894:Core/Src/freertos.c **** 	  	  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, SET);	// Motor2 RUN/BRK - BRK
 212              		.loc 1 894 7 view .LVU26
 213 001c 0122     		movs	r2, #1
 214 001e 8021     		movs	r1, #128
 215 0020 0548     		ldr	r0, .L19+4
 216 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL15:
 895:Core/Src/freertos.c **** 	  	  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, SET);	// Motor2 START/STOP - STOP
 218              		.loc 1 895 7 view .LVU27
 219 0026 0122     		movs	r2, #1
 220 0028 0821     		movs	r1, #8
 221 002a 0448     		ldr	r0, .L19+8
 222 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL16:
 896:Core/Src/freertos.c **** 	}
 224              		.loc 1 896 2 is_stmt 0 view .LVU28
 225 0030 10BD     		pop	{r4, pc}
 226              	.L20:
 227 0032 00BF     		.align	2
 228              	.L19:
 229 0034 00140240 		.word	1073878016
 230 0038 000C0240 		.word	1073875968
 231 003c 00100240 		.word	1073876992
 232              		.cfi_endproc
 233              	.LFE148:
 235              		.section	.text.RUN_DIR,"ax",%progbits
 236              		.align	1
 237              		.global	RUN_DIR
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	RUN_DIR:
 243              	.LVL17:
 244              	.LFB149:
 897:Core/Src/freertos.c **** 
 898:Core/Src/freertos.c **** 
 899:Core/Src/freertos.c **** 	void RUN_DIR(char dir){
 245              		.loc 1 899 24 is_stmt 1 view -0
 246              		.cfi_startproc
ARM GAS  /tmp/ccDBp1of.s 			page 21


 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		.loc 1 899 24 is_stmt 0 view .LVU30
 250 0000 10B5     		push	{r4, lr}
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 900:Core/Src/freertos.c **** 
 901:Core/Src/freertos.c **** 		if(dir == 'F'){			// Front
 255              		.loc 1 901 3 is_stmt 1 view .LVU31
 256 0002 4638     		subs	r0, r0, #70
 257              	.LVL18:
 258              		.loc 1 901 3 is_stmt 0 view .LVU32
 259 0004 0C28     		cmp	r0, #12
 260 0006 14D8     		bhi	.L21
 261 0008 DFE800F0 		tbb	[pc, r0]
 262              	.L24:
 263 000c 07       		.byte	(.L27-.L24)/2
 264 000d 13       		.byte	(.L21-.L24)/2
 265 000e 13       		.byte	(.L21-.L24)/2
 266 000f 13       		.byte	(.L21-.L24)/2
 267 0010 13       		.byte	(.L21-.L24)/2
 268 0011 13       		.byte	(.L21-.L24)/2
 269 0012 21       		.byte	(.L26-.L24)/2
 270 0013 13       		.byte	(.L21-.L24)/2
 271 0014 13       		.byte	(.L21-.L24)/2
 272 0015 14       		.byte	(.L25-.L24)/2
 273 0016 13       		.byte	(.L21-.L24)/2
 274 0017 13       		.byte	(.L21-.L24)/2
 275 0018 2E       		.byte	(.L23-.L24)/2
 276 0019 00       		.p2align 1
 277              	.L27:
 902:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, SET);		// Motor1 DIR - CW
 278              		.loc 1 902 4 is_stmt 1 view .LVU33
 279 001a 1A4C     		ldr	r4, .L30
 280 001c 0122     		movs	r2, #1
 281 001e 4FF48051 		mov	r1, #4096
 282 0022 2046     		mov	r0, r4
 283 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL19:
 903:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, RESET);	// Motor2 DIR - CCW
 285              		.loc 1 903 7 view .LVU34
 286 0028 0022     		movs	r2, #0
 287 002a 0421     		movs	r1, #4
 288 002c 2046     		mov	r0, r4
 289 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL20:
 291              	.L21:
 904:Core/Src/freertos.c **** 		}
 905:Core/Src/freertos.c **** 		else if(dir == 'O'){	// Back
 906:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, RESET);		// Motor1 DIR - CCW
 907:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 908:Core/Src/freertos.c **** 		}
 909:Core/Src/freertos.c **** 		else if(dir == 'L'){	// Left
 910:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, SET);		// Motor1 DIR - CW
 911:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
ARM GAS  /tmp/ccDBp1of.s 			page 22


 912:Core/Src/freertos.c **** 		}
 913:Core/Src/freertos.c **** 		else if(dir == 'R'){	// Right
 914:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, RESET);		// Motor1 DIR - CCW
 915:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, RESET);	// Motor2 DIR - CCW
 916:Core/Src/freertos.c **** 		}
 917:Core/Src/freertos.c **** 	}
 292              		.loc 1 917 2 is_stmt 0 view .LVU35
 293 0032 10BD     		pop	{r4, pc}
 294              	.L25:
 906:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 295              		.loc 1 906 4 is_stmt 1 view .LVU36
 296 0034 134C     		ldr	r4, .L30
 297 0036 0022     		movs	r2, #0
 298 0038 4FF48051 		mov	r1, #4096
 299 003c 2046     		mov	r0, r4
 300 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 301              	.LVL21:
 907:Core/Src/freertos.c **** 		}
 302              		.loc 1 907 7 view .LVU37
 303 0042 0122     		movs	r2, #1
 304 0044 0421     		movs	r1, #4
 305 0046 2046     		mov	r0, r4
 306 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL22:
 308 004c F1E7     		b	.L21
 309              	.L26:
 910:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 310              		.loc 1 910 4 view .LVU38
 311 004e 0D4C     		ldr	r4, .L30
 312 0050 0122     		movs	r2, #1
 313 0052 4FF48051 		mov	r1, #4096
 314 0056 2046     		mov	r0, r4
 315 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 316              	.LVL23:
 911:Core/Src/freertos.c **** 		}
 317              		.loc 1 911 7 view .LVU39
 318 005c 0122     		movs	r2, #1
 319 005e 0421     		movs	r1, #4
 320 0060 2046     		mov	r0, r4
 321 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 322              	.LVL24:
 323 0066 E4E7     		b	.L21
 324              	.L23:
 914:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, RESET);	// Motor2 DIR - CCW
 325              		.loc 1 914 4 view .LVU40
 326 0068 064C     		ldr	r4, .L30
 327 006a 0022     		movs	r2, #0
 328 006c 4FF48051 		mov	r1, #4096
 329 0070 2046     		mov	r0, r4
 330 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 331              	.LVL25:
 915:Core/Src/freertos.c **** 		}
 332              		.loc 1 915 7 view .LVU41
 333 0076 0022     		movs	r2, #0
 334 0078 0421     		movs	r1, #4
 335 007a 2046     		mov	r0, r4
 336 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccDBp1of.s 			page 23


 337              	.LVL26:
 338              		.loc 1 917 2 is_stmt 0 view .LVU42
 339 0080 D7E7     		b	.L21
 340              	.L31:
 341 0082 00BF     		.align	2
 342              	.L30:
 343 0084 00140240 		.word	1073878016
 344              		.cfi_endproc
 345              	.LFE149:
 347              		.section	.text.RUN_RB,"ax",%progbits
 348              		.align	1
 349              		.global	RUN_RB
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	RUN_RB:
 355              	.LVL27:
 356              	.LFB150:
 918:Core/Src/freertos.c **** 
 919:Core/Src/freertos.c **** 	void RUN_RB(char runstate){
 357              		.loc 1 919 28 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		.loc 1 919 28 is_stmt 0 view .LVU44
 362 0000 08B5     		push	{r3, lr}
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 3, -8
 366              		.cfi_offset 14, -4
 920:Core/Src/freertos.c **** 
 921:Core/Src/freertos.c **** 		if(runstate == 'U'){
 367              		.loc 1 921 3 is_stmt 1 view .LVU45
 368              		.loc 1 921 5 is_stmt 0 view .LVU46
 369 0002 5528     		cmp	r0, #85
 370 0004 02D0     		beq	.L36
 922:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, RESET);	// Motor1 RUN/BRK - RUN
 923:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, RESET);	// Motor2 RUN/BRK - RUN
 924:Core/Src/freertos.c **** 		}
 925:Core/Src/freertos.c **** 		else if(runstate == 'B'){
 371              		.loc 1 925 8 is_stmt 1 view .LVU47
 372              		.loc 1 925 10 is_stmt 0 view .LVU48
 373 0006 4228     		cmp	r0, #66
 374 0008 0CD0     		beq	.L37
 375              	.LVL28:
 376              	.L32:
 926:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 927:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, SET);	// Motor2 RUN/BRK - BRK
 928:Core/Src/freertos.c **** 		}
 929:Core/Src/freertos.c **** 	}
 377              		.loc 1 929 2 view .LVU49
 378 000a 08BD     		pop	{r3, pc}
 379              	.LVL29:
 380              	.L36:
 922:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, RESET);	// Motor1 RUN/BRK - RUN
 381              		.loc 1 922 4 is_stmt 1 view .LVU50
 382 000c 0022     		movs	r2, #0
ARM GAS  /tmp/ccDBp1of.s 			page 24


 383 000e 4FF40051 		mov	r1, #8192
 384 0012 0A48     		ldr	r0, .L38
 385              	.LVL30:
 922:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, RESET);	// Motor1 RUN/BRK - RUN
 386              		.loc 1 922 4 is_stmt 0 view .LVU51
 387 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 388              	.LVL31:
 923:Core/Src/freertos.c **** 		}
 389              		.loc 1 923 4 is_stmt 1 view .LVU52
 390 0018 0022     		movs	r2, #0
 391 001a 8021     		movs	r1, #128
 392 001c 0848     		ldr	r0, .L38+4
 393 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 394              	.LVL32:
 395 0022 F2E7     		b	.L32
 396              	.LVL33:
 397              	.L37:
 926:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 398              		.loc 1 926 8 view .LVU53
 399 0024 0122     		movs	r2, #1
 400 0026 4FF40051 		mov	r1, #8192
 401 002a 0448     		ldr	r0, .L38
 402              	.LVL34:
 926:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 403              		.loc 1 926 8 is_stmt 0 view .LVU54
 404 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 405              	.LVL35:
 927:Core/Src/freertos.c **** 		}
 406              		.loc 1 927 8 is_stmt 1 view .LVU55
 407 0030 0122     		movs	r2, #1
 408 0032 8021     		movs	r1, #128
 409 0034 0248     		ldr	r0, .L38+4
 410 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 411              	.LVL36:
 412              		.loc 1 929 2 is_stmt 0 view .LVU56
 413 003a E6E7     		b	.L32
 414              	.L39:
 415              		.align	2
 416              	.L38:
 417 003c 00140240 		.word	1073878016
 418 0040 000C0240 		.word	1073875968
 419              		.cfi_endproc
 420              	.LFE150:
 422              		.section	.text.MOTOR_SS,"ax",%progbits
 423              		.align	1
 424              		.global	MOTOR_SS
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	MOTOR_SS:
 430              	.LVL37:
 431              	.LFB151:
 930:Core/Src/freertos.c **** 
 931:Core/Src/freertos.c **** 	void MOTOR_SS(char motorstate){
 432              		.loc 1 931 32 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccDBp1of.s 			page 25


 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		.loc 1 931 32 is_stmt 0 view .LVU58
 437 0000 08B5     		push	{r3, lr}
 438              	.LCFI7:
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 932:Core/Src/freertos.c **** 
 933:Core/Src/freertos.c **** 		if(motorstate == 'T'){
 442              		.loc 1 933 3 is_stmt 1 view .LVU59
 443              		.loc 1 933 5 is_stmt 0 view .LVU60
 444 0002 5428     		cmp	r0, #84
 445 0004 02D0     		beq	.L44
 934:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, RESET);	// Motor1 START/STOP - START
 935:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, RESET);	// Motor2 START/STOP - START
 936:Core/Src/freertos.c **** 		}
 937:Core/Src/freertos.c **** 		else if(motorstate == 'P'){
 446              		.loc 1 937 8 is_stmt 1 view .LVU61
 447              		.loc 1 937 10 is_stmt 0 view .LVU62
 448 0006 5028     		cmp	r0, #80
 449 0008 0CD0     		beq	.L45
 450              	.LVL38:
 451              	.L40:
 938:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 939:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, SET);	// Motor2 START/STOP - STOP
 940:Core/Src/freertos.c **** 		}
 941:Core/Src/freertos.c **** 	}
 452              		.loc 1 941 2 view .LVU63
 453 000a 08BD     		pop	{r3, pc}
 454              	.LVL39:
 455              	.L44:
 934:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, RESET);	// Motor1 START/STOP - START
 456              		.loc 1 934 7 is_stmt 1 view .LVU64
 457 000c 0022     		movs	r2, #0
 458 000e 4FF48041 		mov	r1, #16384
 459 0012 0A48     		ldr	r0, .L46
 460              	.LVL40:
 934:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, RESET);	// Motor1 START/STOP - START
 461              		.loc 1 934 7 is_stmt 0 view .LVU65
 462 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 463              	.LVL41:
 935:Core/Src/freertos.c **** 		}
 464              		.loc 1 935 7 is_stmt 1 view .LVU66
 465 0018 0022     		movs	r2, #0
 466 001a 0821     		movs	r1, #8
 467 001c 0848     		ldr	r0, .L46+4
 468 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 469              	.LVL42:
 470 0022 F2E7     		b	.L40
 471              	.LVL43:
 472              	.L45:
 938:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 473              		.loc 1 938 8 view .LVU67
 474 0024 0122     		movs	r2, #1
 475 0026 4FF48041 		mov	r1, #16384
 476 002a 0448     		ldr	r0, .L46
 477              	.LVL44:
ARM GAS  /tmp/ccDBp1of.s 			page 26


 938:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 478              		.loc 1 938 8 is_stmt 0 view .LVU68
 479 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 480              	.LVL45:
 939:Core/Src/freertos.c **** 		}
 481              		.loc 1 939 8 is_stmt 1 view .LVU69
 482 0030 0122     		movs	r2, #1
 483 0032 0821     		movs	r1, #8
 484 0034 0248     		ldr	r0, .L46+4
 485 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 486              	.LVL46:
 487              		.loc 1 941 2 is_stmt 0 view .LVU70
 488 003a E6E7     		b	.L40
 489              	.L47:
 490              		.align	2
 491              	.L46:
 492 003c 00140240 		.word	1073878016
 493 0040 00100240 		.word	1073876992
 494              		.cfi_endproc
 495              	.LFE151:
 497              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 498              		.align	1
 499              		.global	HAL_TIM_IC_CaptureCallback
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 504              	HAL_TIM_IC_CaptureCallback:
 505              	.LVL47:
 506              	.LFB152:
 942:Core/Src/freertos.c **** 
 943:Core/Src/freertos.c **** 	void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 944:Core/Src/freertos.c **** 	{
 507              		.loc 1 944 2 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		.loc 1 944 2 is_stmt 0 view .LVU72
 512 0000 10B5     		push	{r4, lr}
 513              	.LCFI8:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 4, -8
 516              		.cfi_offset 14, -4
 517 0002 0446     		mov	r4, r0
 945:Core/Src/freertos.c **** 		if ( htim->Instance == TIM2){
 518              		.loc 1 945 3 is_stmt 1 view .LVU73
 519              		.loc 1 945 12 is_stmt 0 view .LVU74
 520 0004 0368     		ldr	r3, [r0]
 521              		.loc 1 945 6 view .LVU75
 522 0006 B3F1804F 		cmp	r3, #1073741824
 523 000a 04D0     		beq	.L54
 524              	.LVL48:
 525              	.L49:
 946:Core/Src/freertos.c **** 
 947:Core/Src/freertos.c **** 			// Motor1
 948:Core/Src/freertos.c **** 			if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 949:Core/Src/freertos.c **** 			{
 950:Core/Src/freertos.c **** 				// - CW
ARM GAS  /tmp/ccDBp1of.s 			page 27


 951:Core/Src/freertos.c **** 				if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_12) == 1){
 952:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 953:Core/Src/freertos.c **** 				}
 954:Core/Src/freertos.c **** 				// - CCW
 955:Core/Src/freertos.c **** 				else if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_12) == 0){
 956:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 957:Core/Src/freertos.c **** 				}
 958:Core/Src/freertos.c **** 			}
 959:Core/Src/freertos.c **** 		}
 960:Core/Src/freertos.c **** 
 961:Core/Src/freertos.c **** 		if ( htim->Instance == TIM5){
 526              		.loc 1 961 3 is_stmt 1 view .LVU76
 527              		.loc 1 961 12 is_stmt 0 view .LVU77
 528 000c 2268     		ldr	r2, [r4]
 529              		.loc 1 961 6 view .LVU78
 530 000e 1C4B     		ldr	r3, .L56
 531 0010 9A42     		cmp	r2, r3
 532 0012 1BD0     		beq	.L55
 533              	.L48:
 962:Core/Src/freertos.c **** 
 963:Core/Src/freertos.c **** 					// Motor2
 964:Core/Src/freertos.c **** 			if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 965:Core/Src/freertos.c **** 			{
 966:Core/Src/freertos.c **** 				// - CW
 967:Core/Src/freertos.c **** 				if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 1){
 968:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 969:Core/Src/freertos.c **** 				}
 970:Core/Src/freertos.c **** 				// - CCW
 971:Core/Src/freertos.c **** 				else if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 0){
 972:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 973:Core/Src/freertos.c **** 				}
 974:Core/Src/freertos.c **** 			}
 975:Core/Src/freertos.c **** 		}
 976:Core/Src/freertos.c **** 
 977:Core/Src/freertos.c **** 
 978:Core/Src/freertos.c **** 
 979:Core/Src/freertos.c **** 
 980:Core/Src/freertos.c **** 
 981:Core/Src/freertos.c **** 
 982:Core/Src/freertos.c **** 	}
 534              		.loc 1 982 2 view .LVU79
 535 0014 10BD     		pop	{r4, pc}
 536              	.LVL49:
 537              	.L54:
 948:Core/Src/freertos.c **** 			{
 538              		.loc 1 948 4 is_stmt 1 view .LVU80
 948:Core/Src/freertos.c **** 			{
 539              		.loc 1 948 11 is_stmt 0 view .LVU81
 540 0016 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 948:Core/Src/freertos.c **** 			{
 541              		.loc 1 948 6 view .LVU82
 542 0018 012B     		cmp	r3, #1
 543 001a F7D1     		bne	.L49
 951:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 544              		.loc 1 951 5 is_stmt 1 view .LVU83
 951:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 545              		.loc 1 951 8 is_stmt 0 view .LVU84
ARM GAS  /tmp/ccDBp1of.s 			page 28


 546 001c 4FF48051 		mov	r1, #4096
 547 0020 1848     		ldr	r0, .L56+4
 548              	.LVL50:
 951:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 549              		.loc 1 951 8 view .LVU85
 550 0022 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 551              	.LVL51:
 951:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 552              		.loc 1 951 7 view .LVU86
 553 0026 0128     		cmp	r0, #1
 554 0028 04D1     		bne	.L50
 952:Core/Src/freertos.c **** 				}
 555              		.loc 1 952 6 is_stmt 1 view .LVU87
 952:Core/Src/freertos.c **** 				}
 556              		.loc 1 952 20 is_stmt 0 view .LVU88
 557 002a 174A     		ldr	r2, .L56+8
 558 002c 1368     		ldr	r3, [r2]
 559 002e 0133     		adds	r3, r3, #1
 952:Core/Src/freertos.c **** 				}
 560              		.loc 1 952 12 view .LVU89
 561 0030 1360     		str	r3, [r2]
 562 0032 EBE7     		b	.L49
 563              	.L50:
 955:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 564              		.loc 1 955 10 is_stmt 1 view .LVU90
 955:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 565              		.loc 1 955 13 is_stmt 0 view .LVU91
 566 0034 4FF48051 		mov	r1, #4096
 567 0038 1248     		ldr	r0, .L56+4
 568 003a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 569              	.LVL52:
 955:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 570              		.loc 1 955 12 view .LVU92
 571 003e 0028     		cmp	r0, #0
 572 0040 E4D1     		bne	.L49
 956:Core/Src/freertos.c **** 				}
 573              		.loc 1 956 6 is_stmt 1 view .LVU93
 956:Core/Src/freertos.c **** 				}
 574              		.loc 1 956 20 is_stmt 0 view .LVU94
 575 0042 114A     		ldr	r2, .L56+8
 576 0044 1368     		ldr	r3, [r2]
 577 0046 013B     		subs	r3, r3, #1
 956:Core/Src/freertos.c **** 				}
 578              		.loc 1 956 12 view .LVU95
 579 0048 1360     		str	r3, [r2]
 580 004a DFE7     		b	.L49
 581              	.L55:
 964:Core/Src/freertos.c **** 			{
 582              		.loc 1 964 4 is_stmt 1 view .LVU96
 964:Core/Src/freertos.c **** 			{
 583              		.loc 1 964 11 is_stmt 0 view .LVU97
 584 004c 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 964:Core/Src/freertos.c **** 			{
 585              		.loc 1 964 6 view .LVU98
 586 004e 012B     		cmp	r3, #1
 587 0050 E0D1     		bne	.L48
 967:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
ARM GAS  /tmp/ccDBp1of.s 			page 29


 588              		.loc 1 967 5 is_stmt 1 view .LVU99
 967:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 589              		.loc 1 967 8 is_stmt 0 view .LVU100
 590 0052 0421     		movs	r1, #4
 591 0054 0B48     		ldr	r0, .L56+4
 592 0056 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 593              	.LVL53:
 967:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 594              		.loc 1 967 7 view .LVU101
 595 005a 0128     		cmp	r0, #1
 596 005c 04D1     		bne	.L52
 968:Core/Src/freertos.c **** 				}
 597              		.loc 1 968 6 is_stmt 1 view .LVU102
 968:Core/Src/freertos.c **** 				}
 598              		.loc 1 968 20 is_stmt 0 view .LVU103
 599 005e 0B4A     		ldr	r2, .L56+12
 600 0060 1368     		ldr	r3, [r2]
 601 0062 013B     		subs	r3, r3, #1
 968:Core/Src/freertos.c **** 				}
 602              		.loc 1 968 12 view .LVU104
 603 0064 1360     		str	r3, [r2]
 604 0066 D5E7     		b	.L48
 605              	.L52:
 971:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 606              		.loc 1 971 10 is_stmt 1 view .LVU105
 971:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 607              		.loc 1 971 13 is_stmt 0 view .LVU106
 608 0068 0421     		movs	r1, #4
 609 006a 0648     		ldr	r0, .L56+4
 610 006c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 611              	.LVL54:
 971:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 612              		.loc 1 971 12 view .LVU107
 613 0070 0028     		cmp	r0, #0
 614 0072 CFD1     		bne	.L48
 972:Core/Src/freertos.c **** 				}
 615              		.loc 1 972 6 is_stmt 1 view .LVU108
 972:Core/Src/freertos.c **** 				}
 616              		.loc 1 972 20 is_stmt 0 view .LVU109
 617 0074 054A     		ldr	r2, .L56+12
 618 0076 1368     		ldr	r3, [r2]
 619 0078 0133     		adds	r3, r3, #1
 972:Core/Src/freertos.c **** 				}
 620              		.loc 1 972 12 view .LVU110
 621 007a 1360     		str	r3, [r2]
 622              		.loc 1 982 2 view .LVU111
 623 007c CAE7     		b	.L48
 624              	.L57:
 625 007e 00BF     		.align	2
 626              	.L56:
 627 0080 000C0040 		.word	1073744896
 628 0084 00140240 		.word	1073878016
 629 0088 00000000 		.word	.LANCHOR2
 630 008c 00000000 		.word	.LANCHOR3
 631              		.cfi_endproc
 632              	.LFE152:
 634              		.global	__aeabi_dcmple
ARM GAS  /tmp/ccDBp1of.s 			page 30


 635              		.global	__aeabi_dcmpge
 636              		.global	__aeabi_d2iz
 637              		.section	.text.PWM_R,"ax",%progbits
 638              		.align	1
 639              		.global	PWM_R
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 644              	PWM_R:
 645              	.LVL55:
 646              	.LFB153:
 983:Core/Src/freertos.c **** 
 984:Core/Src/freertos.c **** /*	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 985:Core/Src/freertos.c **** 	{
 986:Core/Src/freertos.c **** 		if( htim->Instance == TIM3 ){
 987:Core/Src/freertos.c **** 			if(turn_flag == 1){
 988:Core/Src/freertos.c **** 				count_sec++;
 989:Core/Src/freertos.c **** 			}
 990:Core/Src/freertos.c **** 		}
 991:Core/Src/freertos.c **** */
 992:Core/Src/freertos.c **** 
 993:Core/Src/freertos.c **** 	void PWM_R(double duty){
 647              		.loc 1 993 25 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		.loc 1 993 25 is_stmt 0 view .LVU113
 652 0000 38B5     		push	{r3, r4, r5, lr}
 653              	.LCFI9:
 654              		.cfi_def_cfa_offset 16
 655              		.cfi_offset 3, -16
 656              		.cfi_offset 4, -12
 657              		.cfi_offset 5, -8
 658              		.cfi_offset 14, -4
 659 0002 55EC104B 		vmov	r4, r5, d0
 994:Core/Src/freertos.c **** 		if(duty<=0){
 660              		.loc 1 994 3 is_stmt 1 view .LVU114
 661              		.loc 1 994 5 is_stmt 0 view .LVU115
 662 0006 0022     		movs	r2, #0
 663 0008 0023     		movs	r3, #0
 664 000a 10EE100A 		vmov	r0, s0	@ int
 665 000e 2946     		mov	r1, r5
 666 0010 FFF7FEFF 		bl	__aeabi_dcmple
 667              	.LVL56:
 668              		.loc 1 994 5 view .LVU116
 669 0014 48B9     		cbnz	r0, .L60
 995:Core/Src/freertos.c **** 			duty = 0;
 996:Core/Src/freertos.c **** 		}
 997:Core/Src/freertos.c **** 		else if(duty>=100){
 670              		.loc 1 997 8 is_stmt 1 view .LVU117
 671              		.loc 1 997 10 is_stmt 0 view .LVU118
 672 0016 0022     		movs	r2, #0
 673 0018 094B     		ldr	r3, .L63
 674 001a 2046     		mov	r0, r4
 675 001c 2946     		mov	r1, r5
 676 001e FFF7FEFF 		bl	__aeabi_dcmpge
 677              	.LVL57:
ARM GAS  /tmp/ccDBp1of.s 			page 31


 678 0022 20B1     		cbz	r0, .L59
 998:Core/Src/freertos.c **** 			duty = 100;
 679              		.loc 1 998 9 view .LVU119
 680 0024 0024     		movs	r4, #0
 681              	.LVL58:
 682              		.loc 1 998 9 view .LVU120
 683 0026 064D     		ldr	r5, .L63
 684 0028 01E0     		b	.L59
 685              	.LVL59:
 686              	.L60:
 995:Core/Src/freertos.c **** 			duty = 0;
 687              		.loc 1 995 9 view .LVU121
 688 002a 0024     		movs	r4, #0
 689              	.LVL60:
 995:Core/Src/freertos.c **** 			duty = 0;
 690              		.loc 1 995 9 view .LVU122
 691 002c 0025     		movs	r5, #0
 692              	.L59:
 693              	.LVL61:
 999:Core/Src/freertos.c **** 		}
1000:Core/Src/freertos.c **** 		__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, (int)duty-1);
 694              		.loc 1 1000 3 is_stmt 1 view .LVU123
 695 002e 2046     		mov	r0, r4
 696 0030 2946     		mov	r1, r5
 697 0032 FFF7FEFF 		bl	__aeabi_d2iz
 698              	.LVL62:
 699 0036 034B     		ldr	r3, .L63+4
 700 0038 1B68     		ldr	r3, [r3]
 701 003a 0138     		subs	r0, r0, #1
 702 003c 5863     		str	r0, [r3, #52]
1001:Core/Src/freertos.c **** 	}
 703              		.loc 1 1001 2 is_stmt 0 view .LVU124
 704 003e 38BD     		pop	{r3, r4, r5, pc}
 705              	.LVL63:
 706              	.L64:
 707              		.loc 1 1001 2 view .LVU125
 708              		.align	2
 709              	.L63:
 710 0040 00005940 		.word	1079574528
 711 0044 00000000 		.word	htim4
 712              		.cfi_endproc
 713              	.LFE153:
 715              		.section	.text.PWM_L,"ax",%progbits
 716              		.align	1
 717              		.global	PWM_L
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	PWM_L:
 723              	.LVL64:
 724              	.LFB154:
1002:Core/Src/freertos.c **** 	void PWM_L(double duty){
 725              		.loc 1 1002 25 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		.loc 1 1002 25 is_stmt 0 view .LVU127
ARM GAS  /tmp/ccDBp1of.s 			page 32


 730 0000 38B5     		push	{r3, r4, r5, lr}
 731              	.LCFI10:
 732              		.cfi_def_cfa_offset 16
 733              		.cfi_offset 3, -16
 734              		.cfi_offset 4, -12
 735              		.cfi_offset 5, -8
 736              		.cfi_offset 14, -4
 737 0002 55EC104B 		vmov	r4, r5, d0
1003:Core/Src/freertos.c **** 		if(duty<=0){
 738              		.loc 1 1003 3 is_stmt 1 view .LVU128
 739              		.loc 1 1003 5 is_stmt 0 view .LVU129
 740 0006 0022     		movs	r2, #0
 741 0008 0023     		movs	r3, #0
 742 000a 10EE100A 		vmov	r0, s0	@ int
 743 000e 2946     		mov	r1, r5
 744 0010 FFF7FEFF 		bl	__aeabi_dcmple
 745              	.LVL65:
 746              		.loc 1 1003 5 view .LVU130
 747 0014 48B9     		cbnz	r0, .L67
1004:Core/Src/freertos.c **** 			duty = 0;
1005:Core/Src/freertos.c **** 		}
1006:Core/Src/freertos.c **** 		else if(duty>=100){
 748              		.loc 1 1006 8 is_stmt 1 view .LVU131
 749              		.loc 1 1006 10 is_stmt 0 view .LVU132
 750 0016 0022     		movs	r2, #0
 751 0018 094B     		ldr	r3, .L70
 752 001a 2046     		mov	r0, r4
 753 001c 2946     		mov	r1, r5
 754 001e FFF7FEFF 		bl	__aeabi_dcmpge
 755              	.LVL66:
 756 0022 20B1     		cbz	r0, .L66
1007:Core/Src/freertos.c **** 			duty = 100;
 757              		.loc 1 1007 9 view .LVU133
 758 0024 0024     		movs	r4, #0
 759              	.LVL67:
 760              		.loc 1 1007 9 view .LVU134
 761 0026 064D     		ldr	r5, .L70
 762 0028 01E0     		b	.L66
 763              	.LVL68:
 764              	.L67:
1004:Core/Src/freertos.c **** 			duty = 0;
 765              		.loc 1 1004 9 view .LVU135
 766 002a 0024     		movs	r4, #0
 767              	.LVL69:
1004:Core/Src/freertos.c **** 			duty = 0;
 768              		.loc 1 1004 9 view .LVU136
 769 002c 0025     		movs	r5, #0
 770              	.L66:
 771              	.LVL70:
1008:Core/Src/freertos.c **** 		}
1009:Core/Src/freertos.c **** 		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, (int)duty-1);
 772              		.loc 1 1009 3 is_stmt 1 view .LVU137
 773 002e 2046     		mov	r0, r4
 774 0030 2946     		mov	r1, r5
 775 0032 FFF7FEFF 		bl	__aeabi_d2iz
 776              	.LVL71:
 777 0036 034B     		ldr	r3, .L70+4
ARM GAS  /tmp/ccDBp1of.s 			page 33


 778 0038 1B68     		ldr	r3, [r3]
 779 003a 0138     		subs	r0, r0, #1
 780 003c 5863     		str	r0, [r3, #52]
1010:Core/Src/freertos.c **** 	}
 781              		.loc 1 1010 2 is_stmt 0 view .LVU138
 782 003e 38BD     		pop	{r3, r4, r5, pc}
 783              	.LVL72:
 784              	.L71:
 785              		.loc 1 1010 2 view .LVU139
 786              		.align	2
 787              	.L70:
 788 0040 00005940 		.word	1079574528
 789 0044 00000000 		.word	htim3
 790              		.cfi_endproc
 791              	.LFE154:
 793              		.global	__aeabi_dcmplt
 794              		.global	__aeabi_dmul
 795              		.section	.text.CAL_LinearSpeed,"ax",%progbits
 796              		.align	1
 797              		.global	CAL_LinearSpeed
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 802              	CAL_LinearSpeed:
 803              	.LVL73:
 804              	.LFB155:
1011:Core/Src/freertos.c **** 
1012:Core/Src/freertos.c **** 	// Calculate the final speed.
1013:Core/Src/freertos.c **** 	double CAL_LinearSpeed(double x, double y, double z)
1014:Core/Src/freertos.c **** 	{
 805              		.loc 1 1014 2 is_stmt 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		.loc 1 1014 2 is_stmt 0 view .LVU141
 810 0000 38B5     		push	{r3, r4, r5, lr}
 811              	.LCFI11:
 812              		.cfi_def_cfa_offset 16
 813              		.cfi_offset 3, -16
 814              		.cfi_offset 4, -12
 815              		.cfi_offset 5, -8
 816              		.cfi_offset 14, -4
 817 0002 55EC104B 		vmov	r4, r5, d0
1015:Core/Src/freertos.c **** 		double distance = 0;
 818              		.loc 1 1015 3 is_stmt 1 view .LVU142
 819              	.LVL74:
1016:Core/Src/freertos.c **** 		double duty_percent = 0;
 820              		.loc 1 1016 3 view .LVU143
1017:Core/Src/freertos.c **** 
1018:Core/Src/freertos.c **** 		if(x < 0){
 821              		.loc 1 1018 3 view .LVU144
 822              		.loc 1 1018 5 is_stmt 0 view .LVU145
 823 0006 0022     		movs	r2, #0
 824 0008 0023     		movs	r3, #0
 825 000a 10EE100A 		vmov	r0, s0	@ int
 826 000e 2946     		mov	r1, r5
 827 0010 FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  /tmp/ccDBp1of.s 			page 34


 828              	.LVL75:
 829              		.loc 1 1018 5 view .LVU146
 830 0014 48B9     		cbnz	r0, .L77
 831              	.LVL76:
 832              	.L73:
1019:Core/Src/freertos.c **** 			distance = -x;
1020:Core/Src/freertos.c **** 		}
1021:Core/Src/freertos.c **** 		else{
1022:Core/Src/freertos.c **** 			distance = x;
1023:Core/Src/freertos.c **** 		}
1024:Core/Src/freertos.c **** 
1025:Core/Src/freertos.c **** 		duty_percent = distance * (20.0/(0.0965*M_PI));
 833              		.loc 1 1025 3 is_stmt 1 view .LVU147
 834              		.loc 1 1025 16 is_stmt 0 view .LVU148
 835 0016 08A3     		adr	r3, .L78
 836 0018 D3E90023 		ldrd	r2, [r3]
 837 001c 2046     		mov	r0, r4
 838 001e 2946     		mov	r1, r5
 839 0020 FFF7FEFF 		bl	__aeabi_dmul
 840              	.LVL77:
1026:Core/Src/freertos.c **** 
1027:Core/Src/freertos.c **** 		return duty_percent;
 841              		.loc 1 1027 3 is_stmt 1 view .LVU149
1028:Core/Src/freertos.c **** 	}
 842              		.loc 1 1028 2 is_stmt 0 view .LVU150
 843 0024 41EC100B 		vmov	d0, r0, r1
 844 0028 38BD     		pop	{r3, r4, r5, pc}
 845              	.LVL78:
 846              	.L77:
1019:Core/Src/freertos.c **** 			distance = -x;
 847              		.loc 1 1019 4 is_stmt 1 view .LVU151
1019:Core/Src/freertos.c **** 			distance = -x;
 848              		.loc 1 1019 13 is_stmt 0 view .LVU152
 849 002a 05F10043 		add	r3, r5, #-2147483648
 850 002e 1D46     		mov	r5, r3
 851              	.LVL79:
1019:Core/Src/freertos.c **** 			distance = -x;
 852              		.loc 1 1019 13 view .LVU153
 853 0030 F1E7     		b	.L73
 854              	.L79:
 855 0032 00BFAFF3 		.align	3
 855      0080
 856              	.L78:
 857 0038 DE7A0C39 		.word	957119198
 858 003c 247E5040 		.word	1079016996
 859              		.cfi_endproc
 860              	.LFE155:
 862              		.global	__aeabi_ddiv
 863              		.section	.text.CAL_AngularSpeed,"ax",%progbits
 864              		.align	1
 865              		.global	CAL_AngularSpeed
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 870              	CAL_AngularSpeed:
 871              	.LVL80:
 872              	.LFB156:
ARM GAS  /tmp/ccDBp1of.s 			page 35


1029:Core/Src/freertos.c **** 
1030:Core/Src/freertos.c **** 	// Calculate the angle at which the robot should turn.
1031:Core/Src/freertos.c **** 
1032:Core/Src/freertos.c **** 	double CAL_AngularSpeed(double x, double y, double z)
1033:Core/Src/freertos.c **** 	{
 873              		.loc 1 1033 2 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		.loc 1 1033 2 is_stmt 0 view .LVU155
 878 0000 38B5     		push	{r3, r4, r5, lr}
 879              	.LCFI12:
 880              		.cfi_def_cfa_offset 16
 881              		.cfi_offset 3, -16
 882              		.cfi_offset 4, -12
 883              		.cfi_offset 5, -8
 884              		.cfi_offset 14, -4
 885 0002 55EC124B 		vmov	r4, r5, d2
1034:Core/Src/freertos.c **** 		double wheel_pwm = 0;
 886              		.loc 1 1034 3 is_stmt 1 view .LVU156
 887              	.LVL81:
1035:Core/Src/freertos.c **** 		double angular = 0;
 888              		.loc 1 1035 3 view .LVU157
1036:Core/Src/freertos.c **** 
1037:Core/Src/freertos.c **** 		if(z < 0){
 889              		.loc 1 1037 3 view .LVU158
 890              		.loc 1 1037 5 is_stmt 0 view .LVU159
 891 0006 0022     		movs	r2, #0
 892 0008 0023     		movs	r3, #0
 893 000a 12EE100A 		vmov	r0, s4	@ int
 894 000e 2946     		mov	r1, r5
 895 0010 FFF7FEFF 		bl	__aeabi_dcmplt
 896              	.LVL82:
 897              		.loc 1 1037 5 view .LVU160
 898 0014 68B9     		cbnz	r0, .L85
 899              	.LVL83:
 900              	.L81:
1038:Core/Src/freertos.c **** 					angular = -z;
1039:Core/Src/freertos.c **** 				}
1040:Core/Src/freertos.c **** 		else{
1041:Core/Src/freertos.c **** 			angular = z;
1042:Core/Src/freertos.c **** 		}
1043:Core/Src/freertos.c **** 
1044:Core/Src/freertos.c **** 		wheel_pwm = (100*0.38*angular)/(5*M_PI*0.0965*2);
 901              		.loc 1 1044 3 is_stmt 1 view .LVU161
 902              		.loc 1 1044 24 is_stmt 0 view .LVU162
 903 0016 0022     		movs	r2, #0
 904 0018 0B4B     		ldr	r3, .L86+8
 905 001a 2046     		mov	r0, r4
 906 001c 2946     		mov	r1, r5
 907 001e FFF7FEFF 		bl	__aeabi_dmul
 908              	.LVL84:
 909              		.loc 1 1044 13 view .LVU163
 910 0022 07A3     		adr	r3, .L86
 911 0024 D3E90023 		ldrd	r2, [r3]
 912 0028 FFF7FEFF 		bl	__aeabi_ddiv
 913              	.LVL85:
ARM GAS  /tmp/ccDBp1of.s 			page 36


1045:Core/Src/freertos.c **** 
1046:Core/Src/freertos.c **** 		return wheel_pwm;
 914              		.loc 1 1046 3 is_stmt 1 view .LVU164
1047:Core/Src/freertos.c **** 	}
 915              		.loc 1 1047 2 is_stmt 0 view .LVU165
 916 002c 41EC100B 		vmov	d0, r0, r1
 917 0030 38BD     		pop	{r3, r4, r5, pc}
 918              	.LVL86:
 919              	.L85:
1038:Core/Src/freertos.c **** 					angular = -z;
 920              		.loc 1 1038 6 is_stmt 1 view .LVU166
1038:Core/Src/freertos.c **** 					angular = -z;
 921              		.loc 1 1038 14 is_stmt 0 view .LVU167
 922 0032 05F10043 		add	r3, r5, #-2147483648
 923 0036 1D46     		mov	r5, r3
 924              	.LVL87:
1038:Core/Src/freertos.c **** 					angular = -z;
 925              		.loc 1 1038 14 view .LVU168
 926 0038 EDE7     		b	.L81
 927              	.L87:
 928 003a 00BFAFF3 		.align	3
 928      0080
 929              	.L86:
 930 0040 F5E846DA 		.word	-632887051
 931 0044 CA400840 		.word	1074282698
 932 0048 00004340 		.word	1078132736
 933              		.cfi_endproc
 934              	.LFE156:
 936              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 937              		.align	2
 938              	.LC2:
 939 0000 4572726F 		.ascii	"Error on default allocators (line %d)\012\000"
 939      72206F6E 
 939      20646566 
 939      61756C74 
 939      20616C6C 
 940 0027 00       		.align	2
 941              	.LC3:
 942 0028 00       		.ascii	"\000"
 943 0029 000000   		.align	2
 944              	.LC4:
 945 002c 63756265 		.ascii	"cubemx_node\000"
 945      6D785F6E 
 945      6F646500 
 946              		.align	2
 947              	.LC5:
 948 0038 63756265 		.ascii	"cubemx_publisher\000"
 948      6D785F70 
 948      75626C69 
 948      73686572 
 948      00
 949 0049 000000   		.align	2
 950              	.LC6:
 951 004c 656E6300 		.ascii	"enc\000"
 952              		.align	2
 953              	.LC7:
 954 0050 63756265 		.ascii	"cubemx_publisher_test\000"
ARM GAS  /tmp/ccDBp1of.s 			page 37


 954      6D785F70 
 954      75626C69 
 954      73686572 
 954      5F746573 
 955 0066 0000     		.align	2
 956              	.LC8:
 957 0068 636D645F 		.ascii	"cmd_vel\000"
 957      76656C00 
 958              		.global	__aeabi_dadd
 959              		.global	__aeabi_dsub
 960              		.section	.text.StartDefaultTask,"ax",%progbits
 961              		.align	1
 962              		.global	StartDefaultTask
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 967              	StartDefaultTask:
 968              	.LVL88:
 969              	.LFB143:
 273:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 970              		.loc 1 273 1 is_stmt 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 352
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 273:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 974              		.loc 1 273 1 is_stmt 0 view .LVU170
 975 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 976              	.LCFI13:
 977              		.cfi_def_cfa_offset 36
 978              		.cfi_offset 4, -36
 979              		.cfi_offset 5, -32
 980              		.cfi_offset 6, -28
 981              		.cfi_offset 7, -24
 982              		.cfi_offset 8, -20
 983              		.cfi_offset 9, -16
 984              		.cfi_offset 10, -12
 985              		.cfi_offset 11, -8
 986              		.cfi_offset 14, -4
 987 0004 2DED028B 		vpush.64	{d8}
 988              	.LCFI14:
 989              		.cfi_def_cfa_offset 44
 990              		.cfi_offset 80, -44
 991              		.cfi_offset 81, -40
 992 0008 DBB0     		sub	sp, sp, #364
 993              	.LCFI15:
 994              		.cfi_def_cfa_offset 408
 279:Core/Src/freertos.c ****     true,
 995              		.loc 1 279 3 is_stmt 1 view .LVU171
 996 000a 384B     		ldr	r3, .L146
 997 000c 0193     		str	r3, [sp, #4]
 998 000e 384B     		ldr	r3, .L146+4
 999 0010 0093     		str	r3, [sp]
 1000 0012 384B     		ldr	r3, .L146+8
 1001 0014 384A     		ldr	r2, .L146+12
 1002 0016 3949     		ldr	r1, .L146+16
 1003 0018 0120     		movs	r0, #1
 1004              	.LVL89:
ARM GAS  /tmp/ccDBp1of.s 			page 38


 279:Core/Src/freertos.c ****     true,
 1005              		.loc 1 279 3 is_stmt 0 view .LVU172
 1006 001a FFF7FEFF 		bl	rmw_uros_set_custom_transport
 1007              	.LVL90:
 287:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 1008              		.loc 1 287 3 is_stmt 1 view .LVU173
 287:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 1009              		.loc 1 287 40 is_stmt 0 view .LVU174
 1010 001e 55A8     		add	r0, sp, #340
 1011 0020 FFF7FEFF 		bl	rcutils_get_zero_initialized_allocator
 1012              	.LVL91:
 288:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 1013              		.loc 1 288 3 is_stmt 1 view .LVU175
 288:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 1014              		.loc 1 288 31 is_stmt 0 view .LVU176
 1015 0024 364B     		ldr	r3, .L146+20
 1016 0026 5593     		str	r3, [sp, #340]
 289:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 1017              		.loc 1 289 3 is_stmt 1 view .LVU177
 289:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 1018              		.loc 1 289 33 is_stmt 0 view .LVU178
 1019 0028 364B     		ldr	r3, .L146+24
 1020 002a 5693     		str	r3, [sp, #344]
 290:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 1021              		.loc 1 290 3 is_stmt 1 view .LVU179
 290:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 1022              		.loc 1 290 33 is_stmt 0 view .LVU180
 1023 002c 364B     		ldr	r3, .L146+28
 1024 002e 5793     		str	r3, [sp, #348]
 291:Core/Src/freertos.c **** 
 1025              		.loc 1 291 3 is_stmt 1 view .LVU181
 291:Core/Src/freertos.c **** 
 1026              		.loc 1 291 36 is_stmt 0 view .LVU182
 1027 0030 364B     		ldr	r3, .L146+32
 1028 0032 5893     		str	r3, [sp, #352]
 293:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 1029              		.loc 1 293 3 is_stmt 1 view .LVU183
 293:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 1030              		.loc 1 293 8 is_stmt 0 view .LVU184
 1031 0034 55A8     		add	r0, sp, #340
 1032 0036 FFF7FEFF 		bl	rcutils_set_default_allocator
 1033              	.LVL92:
 293:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 1034              		.loc 1 293 6 view .LVU185
 1035 003a 0028     		cmp	r0, #0
 1036 003c 47D0     		beq	.L141
 1037              	.L89:
 298:Core/Src/freertos.c **** 	motor1.position_p = 0;
 1038              		.loc 1 298 2 is_stmt 1 view .LVU186
 299:Core/Src/freertos.c **** 	motor2.position_p = 0;
 1039              		.loc 1 299 2 view .LVU187
 299:Core/Src/freertos.c **** 	motor2.position_p = 0;
 1040              		.loc 1 299 20 is_stmt 0 view .LVU188
 1041 003e 0024     		movs	r4, #0
 1042 0040 334B     		ldr	r3, .L146+36
 1043 0042 DC60     		str	r4, [r3, #12]
 300:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 39


 1044              		.loc 1 300 2 is_stmt 1 view .LVU189
 300:Core/Src/freertos.c **** 
 1045              		.loc 1 300 20 is_stmt 0 view .LVU190
 1046 0044 334B     		ldr	r3, .L146+40
 1047 0046 DC60     		str	r4, [r3, #12]
 309:Core/Src/freertos.c ****   std_msgs__msg__Int32 msg;
 1048              		.loc 1 309 3 is_stmt 1 view .LVU191
 310:Core/Src/freertos.c **** //test
 1049              		.loc 1 310 3 view .LVU192
 312:Core/Src/freertos.c ****   std_msgs__msg__Int32_test1 msg_test;
 1050              		.loc 1 312 3 view .LVU193
 313:Core/Src/freertos.c **** 
 1051              		.loc 1 313 3 view .LVU194
 315:Core/Src/freertos.c ****   std_msgs__msg__Int32_test2 submsg_test1;
 1052              		.loc 1 315 3 view .LVU195
 316:Core/Src/freertos.c **** 
 1053              		.loc 1 316 3 view .LVU196
 318:Core/Src/freertos.c ****   std_msgs__msg__Int32_test3 submsg_test2;
 1054              		.loc 1 318 3 view .LVU197
 319:Core/Src/freertos.c **** //
 1055              		.loc 1 319 3 view .LVU198
 321:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_1;
 1056              		.loc 1 321 3 view .LVU199
 322:Core/Src/freertos.c **** 
 1057              		.loc 1 322 3 view .LVU200
 324:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub2 pubmsg_2;
 1058              		.loc 1 324 3 view .LVU201
 325:Core/Src/freertos.c **** 
 1059              		.loc 1 325 3 view .LVU202
 328:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_3;
 1060              		.loc 1 328 3 view .LVU203
 329:Core/Src/freertos.c **** 
 1061              		.loc 1 329 3 view .LVU204
 332:Core/Src/freertos.c **** //  std_msgs__msg__String_sub1 submsg_1;
 1062              		.loc 1 332 3 view .LVU205
 334:Core/Src/freertos.c **** //  geometry_msgs__msg__Twist * submsg_2_1;
 1063              		.loc 1 334 3 view .LVU206
 337:Core/Src/freertos.c ****   rcl_allocator_t allocator;
 1064              		.loc 1 337 3 view .LVU207
 338:Core/Src/freertos.c ****   rcl_node_t node;
 1065              		.loc 1 338 3 view .LVU208
 339:Core/Src/freertos.c **** 
 1066              		.loc 1 339 3 view .LVU209
 341:Core/Src/freertos.c **** 
 1067              		.loc 1 341 3 view .LVU210
 341:Core/Src/freertos.c **** 
 1068              		.loc 1 341 15 is_stmt 0 view .LVU211
 1069 0048 06A8     		add	r0, sp, #24
 1070 004a FFF7FEFF 		bl	rcutils_get_default_allocator
 1071              	.LVL93:
 1072 004e 2FAE     		add	r6, sp, #188
 1073 0050 06AD     		add	r5, sp, #24
 1074 0052 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1075 0054 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1076 0056 2B68     		ldr	r3, [r5]
 1077 0058 3360     		str	r3, [r6]
 344:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 40


 1078              		.loc 1 344 3 is_stmt 1 view .LVU212
 1079 005a 2FAB     		add	r3, sp, #188
 1080 005c 2246     		mov	r2, r4
 1081 005e 2146     		mov	r1, r4
 1082 0060 34A8     		add	r0, sp, #208
 1083 0062 FFF7FEFF 		bl	rclc_support_init
 1084              	.LVL94:
 349:Core/Src/freertos.c **** 
 1085              		.loc 1 349 3 view .LVU213
 1086 0066 34AB     		add	r3, sp, #208
 1087 0068 2B4A     		ldr	r2, .L146+44
 1088 006a 2C49     		ldr	r1, .L146+48
 1089 006c 2DA8     		add	r0, sp, #180
 1090 006e FFF7FEFF 		bl	rclc_node_init_default
 1091              	.LVL95:
 352:Core/Src/freertos.c ****     &publisher,
 1092              		.loc 1 352 3 view .LVU214
 1093 0072 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 1094              	.LVL96:
 1095 0076 0246     		mov	r2, r0
 1096 0078 294B     		ldr	r3, .L146+52
 1097 007a 2DA9     		add	r1, sp, #180
 1098 007c 54A8     		add	r0, sp, #336
 1099 007e FFF7FEFF 		bl	rclc_publisher_init_default
 1100              	.LVL97:
 376:Core/Src/freertos.c ****     &publisher_3,
 1101              		.loc 1 376 3 view .LVU215
 1102 0082 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 1103              	.LVL98:
 1104 0086 0246     		mov	r2, r0
 1105 0088 264B     		ldr	r3, .L146+56
 1106 008a 2DA9     		add	r1, sp, #180
 1107 008c 51A8     		add	r0, sp, #324
 1108 008e FFF7FEFF 		bl	rclc_publisher_init_default
 1109              	.LVL99:
 385:Core/Src/freertos.c ****     &publisher_test,
 1110              		.loc 1 385 3 view .LVU216
 1111 0092 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 1112              	.LVL100:
 1113 0096 0246     		mov	r2, r0
 1114 0098 234B     		ldr	r3, .L146+60
 1115 009a 2DA9     		add	r1, sp, #180
 1116 009c 53A8     		add	r0, sp, #332
 1117 009e FFF7FEFF 		bl	rclc_publisher_init_default
 1118              	.LVL101:
 392:Core/Src/freertos.c ****       &subscriber_2,
 1119              		.loc 1 392 3 view .LVU217
 1120 00a2 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__geometry_msgs__msg__Twist
 1121              	.LVL102:
 1122 00a6 0246     		mov	r2, r0
 1123 00a8 204B     		ldr	r3, .L146+64
 1124 00aa 2DA9     		add	r1, sp, #180
 1125 00ac 4FA8     		add	r0, sp, #316
 1126 00ae FFF7FEFF 		bl	rclc_subscription_init_default
 1127              	.LVL103:
 419:Core/Src/freertos.c ****   rclc_executor_init(&executor, &support.context, 1, &allocator);
 1128              		.loc 1 419 3 view .LVU218
ARM GAS  /tmp/ccDBp1of.s 			page 41


 420:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_1, &submsg_1, &messageCallback, ON_NEW_DA
 1129              		.loc 1 420 3 view .LVU219
 1130 00b2 2FAB     		add	r3, sp, #188
 1131 00b4 0122     		movs	r2, #1
 1132 00b6 35A9     		add	r1, sp, #212
 1133 00b8 0CA8     		add	r0, sp, #48
 1134 00ba FFF7FEFF 		bl	rclc_executor_init
 1135              	.LVL104:
 425:Core/Src/freertos.c **** 
 1136              		.loc 1 425 3 view .LVU220
 1137 00be 0094     		str	r4, [sp]
 1138 00c0 1B4B     		ldr	r3, .L146+68
 1139 00c2 42AA     		add	r2, sp, #264
 1140 00c4 4FA9     		add	r1, sp, #316
 1141 00c6 0CA8     		add	r0, sp, #48
 1142 00c8 FFF7FEFF 		bl	rclc_executor_add_subscription
 1143              	.LVL105:
 427:Core/Src/freertos.c ****   pubmsg_1.hall_1 = 0;
 1144              		.loc 1 427 3 view .LVU221
 428:Core/Src/freertos.c ****   pubmsg_2.hall_2 = 0;
 1145              		.loc 1 428 3 view .LVU222
 429:Core/Src/freertos.c **** 
 1146              		.loc 1 429 3 view .LVU223
 1147 00cc E1E0     		b	.L125
 1148              	.L141:
 294:Core/Src/freertos.c ****   }
 1149              		.loc 1 294 7 view .LVU224
 1150 00ce 4FF49371 		mov	r1, #294
 1151 00d2 1848     		ldr	r0, .L146+72
 1152 00d4 FFF7FEFF 		bl	printf
 1153              	.LVL106:
 1154 00d8 B1E7     		b	.L89
 1155              	.L90:
 1156              	.LBB2:
 463:Core/Src/freertos.c **** 	  }
 1157              		.loc 1 463 5 view .LVU225
 463:Core/Src/freertos.c **** 	  }
 1158              		.loc 1 463 14 is_stmt 0 view .LVU226
 1159 00da 174B     		ldr	r3, .L146+76
 1160 00dc 0120     		movs	r0, #1
 1161 00de 1860     		str	r0, [r3]
 1162 00e0 E3E0     		b	.L91
 1163              	.L92:
 470:Core/Src/freertos.c **** 	  }
 1164              		.loc 1 470 5 is_stmt 1 view .LVU227
 470:Core/Src/freertos.c **** 	  }
 1165              		.loc 1 470 14 is_stmt 0 view .LVU228
 1166 00e2 164B     		ldr	r3, .L146+80
 1167 00e4 0A20     		movs	r0, #10
 1168 00e6 1860     		str	r0, [r3]
 1169 00e8 E5E0     		b	.L93
 1170              	.L147:
 1171 00ea 00BF     		.align	2
 1172              	.L146:
 1173 00ec 00000000 		.word	cubemx_transport_read
 1174 00f0 00000000 		.word	cubemx_transport_write
 1175 00f4 00000000 		.word	cubemx_transport_close
ARM GAS  /tmp/ccDBp1of.s 			page 42


 1176 00f8 00000000 		.word	cubemx_transport_open
 1177 00fc 00000000 		.word	huart3
 1178 0100 00000000 		.word	microros_allocate
 1179 0104 00000000 		.word	microros_deallocate
 1180 0108 00000000 		.word	microros_reallocate
 1181 010c 00000000 		.word	microros_zero_allocate
 1182 0110 00000000 		.word	.LANCHOR4
 1183 0114 00000000 		.word	.LANCHOR5
 1184 0118 28000000 		.word	.LC3
 1185 011c 2C000000 		.word	.LC4
 1186 0120 38000000 		.word	.LC5
 1187 0124 4C000000 		.word	.LC6
 1188 0128 50000000 		.word	.LC7
 1189 012c 68000000 		.word	.LC8
 1190 0130 00000000 		.word	twist_subscription_callback
 1191 0134 00000000 		.word	.LC2
 1192 0138 00000000 		.word	.LANCHOR6
 1193 013c 00000000 		.word	.LANCHOR7
 1194              	.LVL107:
 1195              	.L97:
 1196              	.LBB3:
 1197              	.LBB4:
 529:Core/Src/freertos.c ****   	    		          i++;
 1198              		.loc 1 529 20 is_stmt 1 discriminator 3 view .LVU229
 529:Core/Src/freertos.c ****   	    		          i++;
 1199              		.loc 1 529 60 is_stmt 0 discriminator 3 view .LVU230
 1200 0140 A949     		ldr	r1, .L148+8
 1201 0142 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 529:Core/Src/freertos.c ****   	    		          i++;
 1202              		.loc 1 529 41 discriminator 3 view .LVU231
 1203 0144 A949     		ldr	r1, .L148+12
 1204 0146 8854     		strb	r0, [r1, r2]
 530:Core/Src/freertos.c **** 					  }
 1205              		.loc 1 530 20 is_stmt 1 discriminator 3 view .LVU232
 530:Core/Src/freertos.c **** 					  }
 1206              		.loc 1 530 21 is_stmt 0 discriminator 3 view .LVU233
 1207 0148 0133     		adds	r3, r3, #1
 1208              	.LVL108:
 528:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1209              		.loc 1 528 44 is_stmt 1 discriminator 3 view .LVU234
 1210 014a 0132     		adds	r2, r2, #1
 1211              	.LVL109:
 1212              	.L96:
 528:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1213              		.loc 1 528 30 discriminator 1 view .LVU235
 1214 014c 172A     		cmp	r2, #23
 1215 014e F7DD     		ble	.L97
 528:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1216              		.loc 1 528 30 is_stmt 0 discriminator 1 view .LVU236
 1217              	.LBE4:
 534:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1218              		.loc 1 534 12 is_stmt 1 view .LVU237
 534:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1219              		.loc 1 534 42 is_stmt 0 view .LVU238
 1220 0150 A64B     		ldr	r3, .L148+12
 1221              	.LVL110:
 534:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
ARM GAS  /tmp/ccDBp1of.s 			page 43


 1222              		.loc 1 534 42 view .LVU239
 1223 0152 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1224              	.LVL111:
 534:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1225              		.loc 1 534 65 view .LVU240
 1226 0154 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 534:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1227              		.loc 1 534 46 view .LVU241
 1228 0156 42EA0122 		orr	r2, r2, r1, lsl #8
 534:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1229              		.loc 1 534 23 view .LVU242
 1230 015a A549     		ldr	r1, .L148+16
 1231 015c 8A80     		strh	r2, [r1, #4]	@ movhi
 535:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1232              		.loc 1 535 12 is_stmt 1 view .LVU243
 535:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1233              		.loc 1 535 46 is_stmt 0 view .LVU244
 1234 015e DA79     		ldrb	r2, [r3, #7]	@ zero_extendqisi2
 535:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1235              		.loc 1 535 69 view .LVU245
 1236 0160 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 535:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1237              		.loc 1 535 50 view .LVU246
 1238 0162 42EA0022 		orr	r2, r2, r0, lsl #8
 535:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1239              		.loc 1 535 27 view .LVU247
 1240 0166 4A80     		strh	r2, [r1, #2]	@ movhi
 536:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 1241              		.loc 1 536 12 is_stmt 1 view .LVU248
 536:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 1242              		.loc 1 536 44 is_stmt 0 view .LVU249
 1243 0168 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
 536:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 1244              		.loc 1 536 25 view .LVU250
 1245 016a 0A80     		strh	r2, [r1]	@ movhi
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1246              		.loc 1 537 12 is_stmt 1 view .LVU251
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1247              		.loc 1 537 47 is_stmt 0 view .LVU252
 1248 016c 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1249              		.loc 1 537 71 view .LVU253
 1250 016e D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1251              		.loc 1 537 52 view .LVU254
 1252 0170 42EA0022 		orr	r2, r2, r0, lsl #8
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1253              		.loc 1 537 98 view .LVU255
 1254 0174 187B     		ldrb	r0, [r3, #12]	@ zero_extendqisi2
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1255              		.loc 1 537 79 view .LVU256
 1256 0176 42EA0042 		orr	r2, r2, r0, lsl #16
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1257              		.loc 1 537 126 view .LVU257
 1258 017a 587B     		ldrb	r0, [r3, #13]	@ zero_extendqisi2
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1259              		.loc 1 537 107 view .LVU258
ARM GAS  /tmp/ccDBp1of.s 			page 44


 1260 017c 42EA0062 		orr	r2, r2, r0, lsl #24
 537:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1261              		.loc 1 537 28 view .LVU259
 1262 0180 8A60     		str	r2, [r1, #8]
 538:Core/Src/freertos.c **** 
 1263              		.loc 1 538 12 is_stmt 1 view .LVU260
 538:Core/Src/freertos.c **** 
 1264              		.loc 1 538 53 is_stmt 0 view .LVU261
 1265 0182 C868     		ldr	r0, [r1, #12]
 538:Core/Src/freertos.c **** 
 1266              		.loc 1 538 45 view .LVU262
 1267 0184 121A     		subs	r2, r2, r0
 538:Core/Src/freertos.c **** 
 1268              		.loc 1 538 27 view .LVU263
 1269 0186 0A61     		str	r2, [r1, #16]
 540:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1270              		.loc 1 540 12 is_stmt 1 view .LVU264
 540:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1271              		.loc 1 540 42 is_stmt 0 view .LVU265
 1272 0188 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 540:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1273              		.loc 1 540 66 view .LVU266
 1274 018a D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 540:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1275              		.loc 1 540 47 view .LVU267
 1276 018c 42EA0122 		orr	r2, r2, r1, lsl #8
 540:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1277              		.loc 1 540 23 view .LVU268
 1278 0190 9849     		ldr	r1, .L148+20
 1279 0192 8A80     		strh	r2, [r1, #4]	@ movhi
 541:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1280              		.loc 1 541 12 is_stmt 1 view .LVU269
 541:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1281              		.loc 1 541 46 is_stmt 0 view .LVU270
 1282 0194 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 541:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1283              		.loc 1 541 70 view .LVU271
 1284 0196 587C     		ldrb	r0, [r3, #17]	@ zero_extendqisi2
 541:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1285              		.loc 1 541 51 view .LVU272
 1286 0198 42EA0022 		orr	r2, r2, r0, lsl #8
 541:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1287              		.loc 1 541 27 view .LVU273
 1288 019c 4A80     		strh	r2, [r1, #2]	@ movhi
 542:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 1289              		.loc 1 542 12 is_stmt 1 view .LVU274
 542:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 1290              		.loc 1 542 44 is_stmt 0 view .LVU275
 1291 019e 9A7C     		ldrb	r2, [r3, #18]	@ zero_extendqisi2
 542:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 1292              		.loc 1 542 25 view .LVU276
 1293 01a0 0A80     		strh	r2, [r1]	@ movhi
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1294              		.loc 1 543 12 is_stmt 1 view .LVU277
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1295              		.loc 1 543 47 is_stmt 0 view .LVU278
 1296 01a2 DA7C     		ldrb	r2, [r3, #19]	@ zero_extendqisi2
ARM GAS  /tmp/ccDBp1of.s 			page 45


 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1297              		.loc 1 543 71 view .LVU279
 1298 01a4 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1299              		.loc 1 543 52 view .LVU280
 1300 01a6 42EA0022 		orr	r2, r2, r0, lsl #8
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1301              		.loc 1 543 98 view .LVU281
 1302 01aa 587D     		ldrb	r0, [r3, #21]	@ zero_extendqisi2
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1303              		.loc 1 543 79 view .LVU282
 1304 01ac 42EA0042 		orr	r2, r2, r0, lsl #16
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1305              		.loc 1 543 126 view .LVU283
 1306 01b0 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1307              		.loc 1 543 107 view .LVU284
 1308 01b2 42EA0363 		orr	r3, r2, r3, lsl #24
 543:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1309              		.loc 1 543 28 view .LVU285
 1310 01b6 8B60     		str	r3, [r1, #8]
 545:Core/Src/freertos.c **** 
 1311              		.loc 1 545 12 is_stmt 1 view .LVU286
 545:Core/Src/freertos.c **** 
 1312              		.loc 1 545 55 is_stmt 0 view .LVU287
 1313 01b8 CA68     		ldr	r2, [r1, #12]
 545:Core/Src/freertos.c **** 
 1314              		.loc 1 545 29 view .LVU288
 1315 01ba D21A     		subs	r2, r2, r3
 545:Core/Src/freertos.c **** 
 1316              		.loc 1 545 27 view .LVU289
 1317 01bc 0A61     		str	r2, [r1, #16]
 548:Core/Src/freertos.c ****       	    	  }
 1318              		.loc 1 548 12 is_stmt 1 view .LVU290
 1319              	.L98:
 548:Core/Src/freertos.c ****       	    	  }
 1320              		.loc 1 548 12 is_stmt 0 view .LVU291
 1321              	.LBE3:
 559:Core/Src/freertos.c ****     memset(Command_Response2, 0, sizeof(Command_Response2)); // 버퍼 초기화
 1322              		.loc 1 559 5 is_stmt 1 view .LVU292
 1323 01be 3222     		movs	r2, #50
 1324 01c0 0021     		movs	r1, #0
 1325 01c2 8948     		ldr	r0, .L148+8
 1326 01c4 FFF7FEFF 		bl	memset
 1327              	.LVL112:
 560:Core/Src/freertos.c **** 
 1328              		.loc 1 560 5 view .LVU293
 1329 01c8 884B     		ldr	r3, .L148+12
 1330 01ca 0022     		movs	r2, #0
 1331 01cc 1A60     		str	r2, [r3]
 1332 01ce 5A60     		str	r2, [r3, #4]
 1333 01d0 9A60     		str	r2, [r3, #8]
 1334 01d2 DA60     		str	r2, [r3, #12]
 1335 01d4 1A61     		str	r2, [r3, #16]
 1336 01d6 5A61     		str	r2, [r3, #20]
 691:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1337              		.loc 1 691 2 view .LVU294
ARM GAS  /tmp/ccDBp1of.s 			page 46


 691:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1338              		.loc 1 691 10 is_stmt 0 view .LVU295
 1339 01d8 874B     		ldr	r3, .L148+24
 1340 01da 93ED042B 		vldr.64	d2, [r3, #16]
 1341 01de 93ED021B 		vldr.64	d1, [r3, #8]
 1342 01e2 93ED000B 		vldr.64	d0, [r3]
 1343 01e6 FFF7FEFF 		bl	CAL_LinearSpeed
 1344              	.LVL113:
 1345 01ea 57EC106B 		vmov	r6, r7, d0
 691:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1346              		.loc 1 691 61 view .LVU296
 1347 01ee 834B     		ldr	r3, .L148+28
 1348 01f0 93ED042B 		vldr.64	d2, [r3, #16]
 1349 01f4 93ED021B 		vldr.64	d1, [r3, #8]
 1350 01f8 93ED000B 		vldr.64	d0, [r3]
 1351 01fc FFF7FEFF 		bl	CAL_AngularSpeed
 1352              	.LVL114:
 1353 0200 55EC104B 		vmov	r4, r5, d0
 691:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1354              		.loc 1 691 59 view .LVU297
 1355 0204 10EE102A 		vmov	r2, s0	@ int
 1356 0208 2B46     		mov	r3, r5
 1357 020a 3046     		mov	r0, r6
 1358 020c 3946     		mov	r1, r7
 1359 020e FFF7FEFF 		bl	__aeabi_dadd
 1360              	.LVL115:
 1361 0212 41EC180B 		vmov	d8, r0, r1
 691:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1362              		.loc 1 691 8 view .LVU298
 1363 0216 7A4B     		ldr	r3, .L148+32
 1364 0218 C3E90001 		strd	r0, [r3]
 692:Core/Src/freertos.c **** 
 1365              		.loc 1 692 2 is_stmt 1 view .LVU299
 692:Core/Src/freertos.c **** 
 1366              		.loc 1 692 59 is_stmt 0 view .LVU300
 1367 021c 2246     		mov	r2, r4
 1368 021e 2B46     		mov	r3, r5
 1369 0220 3046     		mov	r0, r6
 1370 0222 3946     		mov	r1, r7
 1371 0224 FFF7FEFF 		bl	__aeabi_dsub
 1372              	.LVL116:
 1373 0228 0446     		mov	r4, r0
 1374 022a 0D46     		mov	r5, r1
 692:Core/Src/freertos.c **** 
 1375              		.loc 1 692 8 view .LVU301
 1376 022c 754B     		ldr	r3, .L148+36
 1377 022e C3E90045 		strd	r4, [r3]
 695:Core/Src/freertos.c **** 		Run_State = 'B';
 1378              		.loc 1 695 2 is_stmt 1 view .LVU302
 695:Core/Src/freertos.c **** 		Run_State = 'B';
 1379              		.loc 1 695 12 is_stmt 0 view .LVU303
 1380 0232 754B     		ldr	r3, .L148+40
 1381 0234 1B68     		ldr	r3, [r3]
 695:Core/Src/freertos.c **** 		Run_State = 'B';
 1382              		.loc 1 695 4 view .LVU304
 1383 0236 002B     		cmp	r3, #0
 1384 0238 7CD1     		bne	.L100
ARM GAS  /tmp/ccDBp1of.s 			page 47


 696:Core/Src/freertos.c **** 		PWM_R(0);
 1385              		.loc 1 696 3 is_stmt 1 view .LVU305
 696:Core/Src/freertos.c **** 		PWM_R(0);
 1386              		.loc 1 696 13 is_stmt 0 view .LVU306
 1387 023a 744B     		ldr	r3, .L148+44
 1388 023c 4222     		movs	r2, #66
 1389 023e 1A70     		strb	r2, [r3]
 697:Core/Src/freertos.c **** 		PWM_L(0);
 1390              		.loc 1 697 3 is_stmt 1 view .LVU307
 1391 0240 9FED678B 		vldr.64	d8, .L148
 1392 0244 B0EE480A 		vmov.f32	s0, s16
 1393 0248 F0EE680A 		vmov.f32	s1, s17
 1394 024c FFF7FEFF 		bl	PWM_R
 1395              	.LVL117:
 698:Core/Src/freertos.c **** 	}
 1396              		.loc 1 698 3 view .LVU308
 1397 0250 B0EE480A 		vmov.f32	s0, s16
 1398 0254 F0EE680A 		vmov.f32	s1, s17
 1399 0258 FFF7FEFF 		bl	PWM_L
 1400              	.LVL118:
 1401              	.L101:
 778:Core/Src/freertos.c ****     MOTOR_SS(Motor_State);
 1402              		.loc 1 778 5 view .LVU309
 1403 025c 6B4B     		ldr	r3, .L148+44
 1404 025e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1405 0260 FFF7FEFF 		bl	RUN_RB
 1406              	.LVL119:
 779:Core/Src/freertos.c ****     RUN_DIR(Run_Dir);
 1407              		.loc 1 779 5 view .LVU310
 1408 0264 6A4B     		ldr	r3, .L148+48
 1409 0266 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1410 0268 FFF7FEFF 		bl	MOTOR_SS
 1411              	.LVL120:
 780:Core/Src/freertos.c **** 
 1412              		.loc 1 780 5 view .LVU311
 1413 026c 694B     		ldr	r3, .L148+52
 1414 026e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1415 0270 FFF7FEFF 		bl	RUN_DIR
 1416              	.LVL121:
 782:Core/Src/freertos.c **** 
 1417              		.loc 1 782 5 view .LVU312
 1418 0274 684B     		ldr	r3, .L148+56
 1419 0276 1A68     		ldr	r2, [r3]
 1420 0278 D317     		asrs	r3, r2, #31
 1421 027a 0CA8     		add	r0, sp, #48
 1422 027c FFF7FEFF 		bl	rclc_executor_spin_some
 1423              	.LVL122:
 785:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 1424              		.loc 1 785 4 view .LVU313
 785:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 1425              		.loc 1 785 30 is_stmt 0 view .LVU314
 1426 0280 5B4B     		ldr	r3, .L148+16
 1427 0282 9A68     		ldr	r2, [r3, #8]
 785:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 1428              		.loc 1 785 22 view .LVU315
 1429 0284 DA60     		str	r2, [r3, #12]
 786:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccDBp1of.s 			page 48


 1430              		.loc 1 786 4 is_stmt 1 view .LVU316
 786:Core/Src/freertos.c **** 
 1431              		.loc 1 786 30 is_stmt 0 view .LVU317
 1432 0286 5B4B     		ldr	r3, .L148+20
 1433 0288 9A68     		ldr	r2, [r3, #8]
 786:Core/Src/freertos.c **** 
 1434              		.loc 1 786 22 view .LVU318
 1435 028a DA60     		str	r2, [r3, #12]
 789:Core/Src/freertos.c ****       }
 1436              		.loc 1 789 9 is_stmt 1 view .LVU319
 1437 028c 0020     		movs	r0, #0
 1438 028e FFF7FEFF 		bl	osDelay
 1439              	.LVL123:
 1440              	.LBE2:
 435:Core/Src/freertos.c ****   {
 1441              		.loc 1 435 3 view .LVU320
 1442              	.L125:
 435:Core/Src/freertos.c ****   {
 1443              		.loc 1 435 3 view .LVU321
 1444              	.LBB7:
 441:Core/Src/freertos.c **** 		pubmsg_1.hall_1 = (int32_t)motor1.encoder_p;
 1445              		.loc 1 441 4 view .LVU322
 446:Core/Src/freertos.c **** 		motor1.encoder_p = motor1.encoder;
 1446              		.loc 1 446 3 view .LVU323
 446:Core/Src/freertos.c **** 		motor1.encoder_p = motor1.encoder;
 1447              		.loc 1 446 36 is_stmt 0 view .LVU324
 1448 0292 574B     		ldr	r3, .L148+16
 1449 0294 1969     		ldr	r1, [r3, #16]
 447:Core/Src/freertos.c **** 	  }
 1450              		.loc 1 447 3 is_stmt 1 view .LVU325
 447:Core/Src/freertos.c **** 	  }
 1451              		.loc 1 447 20 is_stmt 0 view .LVU326
 1452 0296 5961     		str	r1, [r3, #20]
 450:Core/Src/freertos.c **** 		pubmsg_2.hall_2 = (int32_t)motor2.encoder_p;
 1453              		.loc 1 450 4 is_stmt 1 view .LVU327
 455:Core/Src/freertos.c **** 		motor2.encoder_p = motor2.encoder;
 1454              		.loc 1 455 3 view .LVU328
 455:Core/Src/freertos.c **** 		motor2.encoder_p = motor2.encoder;
 1455              		.loc 1 455 36 is_stmt 0 view .LVU329
 1456 0298 564B     		ldr	r3, .L148+20
 1457 029a 1A69     		ldr	r2, [r3, #16]
 456:Core/Src/freertos.c **** 	  }
 1458              		.loc 1 456 3 is_stmt 1 view .LVU330
 456:Core/Src/freertos.c **** 	  }
 1459              		.loc 1 456 20 is_stmt 0 view .LVU331
 1460 029c 5A61     		str	r2, [r3, #20]
 459:Core/Src/freertos.c **** 		  r_enc_op = 0;
 1461              		.loc 1 459 4 is_stmt 1 view .LVU332
 459:Core/Src/freertos.c **** 		  r_enc_op = 0;
 1462              		.loc 1 459 6 is_stmt 0 view .LVU333
 1463 029e 0029     		cmp	r1, #0
 1464 02a0 FFF61BAF 		blt	.L90
 460:Core/Src/freertos.c **** 	  }
 1465              		.loc 1 460 5 is_stmt 1 view .LVU334
 460:Core/Src/freertos.c **** 	  }
 1466              		.loc 1 460 14 is_stmt 0 view .LVU335
 1467 02a4 5D4B     		ldr	r3, .L148+60
ARM GAS  /tmp/ccDBp1of.s 			page 49


 1468 02a6 0020     		movs	r0, #0
 1469 02a8 1860     		str	r0, [r3]
 1470              	.L91:
 466:Core/Src/freertos.c **** 		  l_enc_op = 0;
 1471              		.loc 1 466 4 is_stmt 1 view .LVU336
 466:Core/Src/freertos.c **** 		  l_enc_op = 0;
 1472              		.loc 1 466 6 is_stmt 0 view .LVU337
 1473 02aa 002A     		cmp	r2, #0
 1474 02ac FFF619AF 		blt	.L92
 467:Core/Src/freertos.c **** 	  }
 1475              		.loc 1 467 5 is_stmt 1 view .LVU338
 467:Core/Src/freertos.c **** 	  }
 1476              		.loc 1 467 14 is_stmt 0 view .LVU339
 1477 02b0 5B4B     		ldr	r3, .L148+64
 1478 02b2 0020     		movs	r0, #0
 1479 02b4 1860     		str	r0, [r3]
 1480              	.L93:
 474:Core/Src/freertos.c **** 
 1481              		.loc 1 474 7 is_stmt 1 view .LVU340
 474:Core/Src/freertos.c **** 
 1482              		.loc 1 474 34 is_stmt 0 view .LVU341
 1483 02b6 5A4B     		ldr	r3, .L148+64
 1484 02b8 1B68     		ldr	r3, [r3]
 1485 02ba 5848     		ldr	r0, .L148+60
 1486 02bc 0068     		ldr	r0, [r0]
 1487 02be 0344     		add	r3, r3, r0
 474:Core/Src/freertos.c **** 
 1488              		.loc 1 474 51 view .LVU342
 1489 02c0 0029     		cmp	r1, #0
 1490 02c2 B8BF     		it	lt
 1491 02c4 4942     		rsblt	r1, r1, #0
 474:Core/Src/freertos.c **** 
 1492              		.loc 1 474 45 view .LVU343
 1493 02c6 6420     		movs	r0, #100
 1494 02c8 00FB0133 		mla	r3, r0, r1, r3
 474:Core/Src/freertos.c **** 
 1495              		.loc 1 474 84 view .LVU344
 1496 02cc 002A     		cmp	r2, #0
 1497 02ce B8BF     		it	lt
 1498 02d0 5242     		rsblt	r2, r2, #0
 474:Core/Src/freertos.c **** 
 1499              		.loc 1 474 72 view .LVU345
 1500 02d2 5449     		ldr	r1, .L148+68
 1501 02d4 01FB0233 		mla	r3, r1, r2, r3
 474:Core/Src/freertos.c **** 
 1502              		.loc 1 474 23 view .LVU346
 1503 02d8 5093     		str	r3, [sp, #320]
 479:Core/Src/freertos.c **** 
 1504              		.loc 1 479 4 is_stmt 1 view .LVU347
 479:Core/Src/freertos.c **** 
 1505              		.loc 1 479 22 is_stmt 0 view .LVU348
 1506 02da 0022     		movs	r2, #0
 1507 02dc 50A9     		add	r1, sp, #320
 1508 02de 51A8     		add	r0, sp, #324
 1509 02e0 FFF7FEFF 		bl	rcl_publish
 1510              	.LVL124:
 495:Core/Src/freertos.c **** /*    if (ret != RCL_RET_OK)
ARM GAS  /tmp/ccDBp1of.s 			page 50


 1511              		.loc 1 495 5 is_stmt 1 view .LVU349
 495:Core/Src/freertos.c **** /*    if (ret != RCL_RET_OK)
 1512              		.loc 1 495 26 is_stmt 0 view .LVU350
 1513 02e4 0022     		movs	r2, #0
 1514 02e6 52A9     		add	r1, sp, #328
 1515 02e8 53A8     		add	r0, sp, #332
 1516 02ea FFF7FEFF 		bl	rcl_publish
 1517              	.LVL125:
 512:Core/Src/freertos.c **** 	  HAL_UART_Transmit(&huart5, Command_Request_Data, length, 10);
 1518              		.loc 1 512 4 is_stmt 1 view .LVU351
 513:Core/Src/freertos.c **** 
 1519              		.loc 1 513 4 view .LVU352
 1520 02ee 4E4C     		ldr	r4, .L148+72
 1521 02f0 0A23     		movs	r3, #10
 1522 02f2 0722     		movs	r2, #7
 1523 02f4 4D49     		ldr	r1, .L148+76
 1524 02f6 2046     		mov	r0, r4
 1525 02f8 FFF7FEFF 		bl	HAL_UART_Transmit
 1526              	.LVL126:
 516:Core/Src/freertos.c **** //    if (HAL_UART_Receive(&huart5, Command_Response1, 50, 100) == HAL_OK) {
 1527              		.loc 1 516 5 view .LVU353
 519:Core/Src/freertos.c **** 
 1528              		.loc 1 519 6 view .LVU354
 1529 02fc 4FF4FA73 		mov	r3, #500
 1530 0300 3222     		movs	r2, #50
 1531 0302 3949     		ldr	r1, .L148+8
 1532 0304 2046     		mov	r0, r4
 1533 0306 FFF7FEFF 		bl	HAL_UART_Receive
 1534              	.LVL127:
 521:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1535              		.loc 1 521 6 view .LVU355
 1536              	.LBB6:
 521:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1537              		.loc 1 521 10 view .LVU356
 521:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1538              		.loc 1 521 14 is_stmt 0 view .LVU357
 1539 030a 0023     		movs	r3, #0
 521:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1540              		.loc 1 521 6 view .LVU358
 1541 030c 00E0     		b	.L94
 1542              	.LVL128:
 1543              	.L95:
 521:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1544              		.loc 1 521 40 is_stmt 1 discriminator 2 view .LVU359
 1545 030e 0133     		adds	r3, r3, #1
 1546              	.LVL129:
 1547              	.L94:
 521:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1548              		.loc 1 521 23 discriminator 1 view .LVU360
 1549 0310 192B     		cmp	r3, #25
 1550 0312 3FF754AF 		bgt	.L98
 522:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 1551              		.loc 1 522 7 view .LVU361
 522:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 1552              		.loc 1 522 27 is_stmt 0 view .LVU362
 1553 0316 344A     		ldr	r2, .L148+8
 1554 0318 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccDBp1of.s 			page 51


 522:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 1555              		.loc 1 522 9 view .LVU363
 1556 031a B82A     		cmp	r2, #184
 1557 031c F7D1     		bne	.L95
 525:Core/Src/freertos.c **** 
 1558              		.loc 1 525 13 is_stmt 1 discriminator 1 view .LVU364
 525:Core/Src/freertos.c **** 
 1559              		.loc 1 525 67 is_stmt 0 discriminator 1 view .LVU365
 1560 031e 5A1C     		adds	r2, r3, #1
 525:Core/Src/freertos.c **** 
 1561              		.loc 1 525 65 discriminator 1 view .LVU366
 1562 0320 3149     		ldr	r1, .L148+8
 1563 0322 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 525:Core/Src/freertos.c **** 
 1564              		.loc 1 525 45 discriminator 1 view .LVU367
 1565 0324 B72A     		cmp	r2, #183
 1566 0326 F2D1     		bne	.L95
 525:Core/Src/freertos.c **** 
 1567              		.loc 1 525 101 discriminator 2 view .LVU368
 1568 0328 9A1C     		adds	r2, r3, #2
 525:Core/Src/freertos.c **** 
 1569              		.loc 1 525 99 discriminator 2 view .LVU369
 1570 032a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 525:Core/Src/freertos.c **** 
 1571              		.loc 1 525 79 discriminator 2 view .LVU370
 1572 032c 012A     		cmp	r2, #1
 1573 032e EED1     		bne	.L95
 1574              	.LBB5:
 528:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1575              		.loc 1 528 21 view .LVU371
 1576 0330 0022     		movs	r2, #0
 1577 0332 0BE7     		b	.L96
 1578              	.LVL130:
 1579              	.L100:
 528:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1580              		.loc 1 528 21 view .LVU372
 1581              	.LBE5:
 1582              	.LBE6:
 701:Core/Src/freertos.c **** 		Run_State = 'U';
 1583              		.loc 1 701 7 is_stmt 1 view .LVU373
 1584 0334 013B     		subs	r3, r3, #1
 1585 0336 052B     		cmp	r3, #5
 1586 0338 90D8     		bhi	.L101
 1587 033a DFE803F0 		tbb	[pc, r3]
 1588              	.L103:
 1589 033e 03       		.byte	(.L108-.L103)/2
 1590 033f 27       		.byte	(.L107-.L103)/2
 1591 0340 79       		.byte	(.L106-.L103)/2
 1592 0341 A0       		.byte	(.L105-.L103)/2
 1593 0342 C4       		.byte	(.L104-.L103)/2
 1594 0343 DA       		.byte	(.L102-.L103)/2
 1595              		.p2align 1
 1596              	.L108:
 702:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1597              		.loc 1 702 3 view .LVU374
 702:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1598              		.loc 1 702 13 is_stmt 0 view .LVU375
ARM GAS  /tmp/ccDBp1of.s 			page 52


 1599 0344 314B     		ldr	r3, .L148+44
 1600 0346 5522     		movs	r2, #85
 1601 0348 1A70     		strb	r2, [r3]
 705:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1602              		.loc 1 705 3 is_stmt 1 view .LVU376
 705:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1603              		.loc 1 705 5 is_stmt 0 view .LVU377
 1604 034a 0022     		movs	r2, #0
 1605 034c 0023     		movs	r3, #0
 1606 034e FFF7FEFF 		bl	__aeabi_dcmplt
 1607              	.LVL131:
 1608 0352 50B9     		cbnz	r0, .L142
 708:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1609              		.loc 1 708 8 is_stmt 1 view .LVU378
 708:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1610              		.loc 1 708 10 is_stmt 0 view .LVU379
 1611 0354 0022     		movs	r2, #0
 1612 0356 0023     		movs	r3, #0
 1613 0358 2046     		mov	r0, r4
 1614 035a 2946     		mov	r1, r5
 1615 035c FFF7FEFF 		bl	__aeabi_dcmpge
 1616              	.LVL132:
 1617 0360 30B1     		cbz	r0, .L111
 709:Core/Src/freertos.c **** 		}
 1618              		.loc 1 709 4 is_stmt 1 view .LVU380
 709:Core/Src/freertos.c **** 		}
 1619              		.loc 1 709 12 is_stmt 0 view .LVU381
 1620 0362 2C4B     		ldr	r3, .L148+52
 1621 0364 4622     		movs	r2, #70
 1622 0366 1A70     		strb	r2, [r3]
 1623 0368 02E0     		b	.L111
 1624              	.L142:
 706:Core/Src/freertos.c **** 		}
 1625              		.loc 1 706 4 is_stmt 1 view .LVU382
 706:Core/Src/freertos.c **** 		}
 1626              		.loc 1 706 12 is_stmt 0 view .LVU383
 1627 036a 2A4B     		ldr	r3, .L148+52
 1628 036c 5222     		movs	r2, #82
 1629 036e 1A70     		strb	r2, [r3]
 1630              	.L111:
 711:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 1631              		.loc 1 711 3 is_stmt 1 view .LVU384
 1632 0370 0294     		str	r4, [sp, #8]
 1633 0372 25F00043 		bic	r3, r5, #-2147483648
 1634 0376 0393     		str	r3, [sp, #12]
 1635 0378 9DED020B 		vldr.64	d0, [sp, #8]
 1636 037c FFF7FEFF 		bl	PWM_R
 1637              	.LVL133:
 712:Core/Src/freertos.c **** 	}
 1638              		.loc 1 712 3 view .LVU385
 1639 0380 1F4B     		ldr	r3, .L148+32
 1640 0382 93ED000B 		vldr.64	d0, [r3]
 1641 0386 FFF7FEFF 		bl	PWM_L
 1642              	.LVL134:
 1643 038a 67E7     		b	.L101
 1644              	.L107:
 715:Core/Src/freertos.c **** //		Run_Dir = 'F';
ARM GAS  /tmp/ccDBp1of.s 			page 53


 1645              		.loc 1 715 3 view .LVU386
 715:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1646              		.loc 1 715 13 is_stmt 0 view .LVU387
 1647 038c 1F4B     		ldr	r3, .L148+44
 1648 038e 5522     		movs	r2, #85
 1649 0390 1A70     		strb	r2, [r3]
 717:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1650              		.loc 1 717 3 is_stmt 1 view .LVU388
 717:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1651              		.loc 1 717 5 is_stmt 0 view .LVU389
 1652 0392 0022     		movs	r2, #0
 1653 0394 0023     		movs	r3, #0
 1654 0396 FFF7FEFF 		bl	__aeabi_dcmplt
 1655              	.LVL135:
 1656 039a 50B9     		cbnz	r0, .L143
 720:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1657              		.loc 1 720 8 is_stmt 1 view .LVU390
 720:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1658              		.loc 1 720 10 is_stmt 0 view .LVU391
 1659 039c 0022     		movs	r2, #0
 1660 039e 0023     		movs	r3, #0
 1661 03a0 2046     		mov	r0, r4
 1662 03a2 2946     		mov	r1, r5
 1663 03a4 FFF7FEFF 		bl	__aeabi_dcmpge
 1664              	.LVL136:
 1665 03a8 30B1     		cbz	r0, .L115
 721:Core/Src/freertos.c **** 		}
 1666              		.loc 1 721 4 is_stmt 1 view .LVU392
 721:Core/Src/freertos.c **** 		}
 1667              		.loc 1 721 12 is_stmt 0 view .LVU393
 1668 03aa 1A4B     		ldr	r3, .L148+52
 1669 03ac 4622     		movs	r2, #70
 1670 03ae 1A70     		strb	r2, [r3]
 1671 03b0 02E0     		b	.L115
 1672              	.L143:
 718:Core/Src/freertos.c **** 		}
 1673              		.loc 1 718 4 is_stmt 1 view .LVU394
 718:Core/Src/freertos.c **** 		}
 1674              		.loc 1 718 12 is_stmt 0 view .LVU395
 1675 03b2 184B     		ldr	r3, .L148+52
 1676 03b4 4C22     		movs	r2, #76
 1677 03b6 1A70     		strb	r2, [r3]
 1678              	.L115:
 723:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 1679              		.loc 1 723 3 is_stmt 1 view .LVU396
 1680 03b8 B0EE480A 		vmov.f32	s0, s16
 1681 03bc F0EE680A 		vmov.f32	s1, s17
 1682 03c0 FFF7FEFF 		bl	PWM_R
 1683              	.LVL137:
 724:Core/Src/freertos.c **** 	}
 1684              		.loc 1 724 3 view .LVU397
 1685 03c4 0F4B     		ldr	r3, .L148+36
 1686 03c6 D3F800A0 		ldr	r10, [r3]
 1687 03ca 5B68     		ldr	r3, [r3, #4]
 1688 03cc 23F0004B 		bic	fp, r3, #-2147483648
 1689 03d0 4BEC10AB 		vmov	d0, r10, fp
 1690 03d4 FFF7FEFF 		bl	PWM_L
ARM GAS  /tmp/ccDBp1of.s 			page 54


 1691              	.LVL138:
 1692 03d8 40E7     		b	.L101
 1693              	.L149:
 1694 03da 00BFAFF3 		.align	3
 1694      0080
 1695              	.L148:
 1696 03e0 00000000 		.word	0
 1697 03e4 00000000 		.word	0
 1698 03e8 00000000 		.word	.LANCHOR9
 1699 03ec 00000000 		.word	.LANCHOR10
 1700 03f0 00000000 		.word	.LANCHOR4
 1701 03f4 00000000 		.word	.LANCHOR5
 1702 03f8 00000000 		.word	.LANCHOR11
 1703 03fc 00000000 		.word	.LANCHOR12
 1704 0400 00000000 		.word	.LANCHOR13
 1705 0404 00000000 		.word	.LANCHOR14
 1706 0408 00000000 		.word	.LANCHOR15
 1707 040c 00000000 		.word	.LANCHOR16
 1708 0410 00000000 		.word	.LANCHOR18
 1709 0414 00000000 		.word	.LANCHOR17
 1710 0418 00000000 		.word	.LANCHOR19
 1711 041c 00000000 		.word	.LANCHOR6
 1712 0420 00000000 		.word	.LANCHOR7
 1713 0424 40420F00 		.word	1000000
 1714 0428 00000000 		.word	huart5
 1715 042c 00000000 		.word	.LANCHOR8
 1716              	.L106:
 727:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1717              		.loc 1 727 3 view .LVU398
 727:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1718              		.loc 1 727 13 is_stmt 0 view .LVU399
 1719 0430 3B4B     		ldr	r3, .L150
 1720 0432 5522     		movs	r2, #85
 1721 0434 1A70     		strb	r2, [r3]
 729:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1722              		.loc 1 729 3 is_stmt 1 view .LVU400
 729:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1723              		.loc 1 729 5 is_stmt 0 view .LVU401
 1724 0436 0022     		movs	r2, #0
 1725 0438 0023     		movs	r3, #0
 1726 043a FFF7FEFF 		bl	__aeabi_dcmplt
 1727              	.LVL139:
 1728 043e 50B9     		cbnz	r0, .L144
 732:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1729              		.loc 1 732 8 is_stmt 1 view .LVU402
 732:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1730              		.loc 1 732 10 is_stmt 0 view .LVU403
 1731 0440 0022     		movs	r2, #0
 1732 0442 0023     		movs	r3, #0
 1733 0444 2046     		mov	r0, r4
 1734 0446 2946     		mov	r1, r5
 1735 0448 FFF7FEFF 		bl	__aeabi_dcmpge
 1736              	.LVL140:
 1737 044c 30B1     		cbz	r0, .L119
 733:Core/Src/freertos.c **** 		}
 1738              		.loc 1 733 4 is_stmt 1 view .LVU404
 733:Core/Src/freertos.c **** 		}
ARM GAS  /tmp/ccDBp1of.s 			page 55


 1739              		.loc 1 733 12 is_stmt 0 view .LVU405
 1740 044e 354B     		ldr	r3, .L150+4
 1741 0450 4F22     		movs	r2, #79
 1742 0452 1A70     		strb	r2, [r3]
 1743 0454 02E0     		b	.L119
 1744              	.L144:
 730:Core/Src/freertos.c **** 		}
 1745              		.loc 1 730 4 is_stmt 1 view .LVU406
 730:Core/Src/freertos.c **** 		}
 1746              		.loc 1 730 12 is_stmt 0 view .LVU407
 1747 0456 334B     		ldr	r3, .L150+4
 1748 0458 5222     		movs	r2, #82
 1749 045a 1A70     		strb	r2, [r3]
 1750              	.L119:
 735:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 1751              		.loc 1 735 3 is_stmt 1 view .LVU408
 1752 045c B0EE480A 		vmov.f32	s0, s16
 1753 0460 F0EE680A 		vmov.f32	s1, s17
 1754 0464 FFF7FEFF 		bl	PWM_R
 1755              	.LVL141:
 736:Core/Src/freertos.c **** 	}
 1756              		.loc 1 736 3 view .LVU409
 1757 0468 2F4B     		ldr	r3, .L150+8
 1758 046a D3F80080 		ldr	r8, [r3]
 1759 046e 5B68     		ldr	r3, [r3, #4]
 1760 0470 23F00049 		bic	r9, r3, #-2147483648
 1761 0474 49EC108B 		vmov	d0, r8, r9
 1762 0478 FFF7FEFF 		bl	PWM_L
 1763              	.LVL142:
 1764 047c EEE6     		b	.L101
 1765              	.L105:
 739:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1766              		.loc 1 739 3 view .LVU410
 739:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1767              		.loc 1 739 13 is_stmt 0 view .LVU411
 1768 047e 284B     		ldr	r3, .L150
 1769 0480 5522     		movs	r2, #85
 1770 0482 1A70     		strb	r2, [r3]
 741:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1771              		.loc 1 741 3 is_stmt 1 view .LVU412
 741:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1772              		.loc 1 741 5 is_stmt 0 view .LVU413
 1773 0484 0022     		movs	r2, #0
 1774 0486 0023     		movs	r3, #0
 1775 0488 FFF7FEFF 		bl	__aeabi_dcmplt
 1776              	.LVL143:
 1777 048c 50B9     		cbnz	r0, .L145
 744:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1778              		.loc 1 744 8 is_stmt 1 view .LVU414
 744:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1779              		.loc 1 744 10 is_stmt 0 view .LVU415
 1780 048e 0022     		movs	r2, #0
 1781 0490 0023     		movs	r3, #0
 1782 0492 2046     		mov	r0, r4
 1783 0494 2946     		mov	r1, r5
 1784 0496 FFF7FEFF 		bl	__aeabi_dcmpge
 1785              	.LVL144:
ARM GAS  /tmp/ccDBp1of.s 			page 56


 1786 049a 30B1     		cbz	r0, .L123
 745:Core/Src/freertos.c **** 		}
 1787              		.loc 1 745 4 is_stmt 1 view .LVU416
 745:Core/Src/freertos.c **** 		}
 1788              		.loc 1 745 12 is_stmt 0 view .LVU417
 1789 049c 214B     		ldr	r3, .L150+4
 1790 049e 4F22     		movs	r2, #79
 1791 04a0 1A70     		strb	r2, [r3]
 1792 04a2 02E0     		b	.L123
 1793              	.L145:
 742:Core/Src/freertos.c **** 		}
 1794              		.loc 1 742 4 is_stmt 1 view .LVU418
 742:Core/Src/freertos.c **** 		}
 1795              		.loc 1 742 12 is_stmt 0 view .LVU419
 1796 04a4 1F4B     		ldr	r3, .L150+4
 1797 04a6 4C22     		movs	r2, #76
 1798 04a8 1A70     		strb	r2, [r3]
 1799              	.L123:
 747:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 1800              		.loc 1 747 3 is_stmt 1 view .LVU420
 1801 04aa 0494     		str	r4, [sp, #16]
 1802 04ac 25F00043 		bic	r3, r5, #-2147483648
 1803 04b0 0593     		str	r3, [sp, #20]
 1804 04b2 9DED040B 		vldr.64	d0, [sp, #16]
 1805 04b6 FFF7FEFF 		bl	PWM_R
 1806              	.LVL145:
 748:Core/Src/freertos.c **** 	}
 1807              		.loc 1 748 3 view .LVU421
 1808 04ba 1C4B     		ldr	r3, .L150+12
 1809 04bc 93ED000B 		vldr.64	d0, [r3]
 1810 04c0 FFF7FEFF 		bl	PWM_L
 1811              	.LVL146:
 1812 04c4 CAE6     		b	.L101
 1813              	.L104:
 751:Core/Src/freertos.c **** 		Run_Dir = 'F';
 1814              		.loc 1 751 3 view .LVU422
 751:Core/Src/freertos.c **** 		Run_Dir = 'F';
 1815              		.loc 1 751 13 is_stmt 0 view .LVU423
 1816 04c6 164B     		ldr	r3, .L150
 1817 04c8 5522     		movs	r2, #85
 1818 04ca 1A70     		strb	r2, [r3]
 752:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1819              		.loc 1 752 3 is_stmt 1 view .LVU424
 752:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1820              		.loc 1 752 11 is_stmt 0 view .LVU425
 1821 04cc 154B     		ldr	r3, .L150+4
 1822 04ce 4622     		movs	r2, #70
 1823 04d0 1A70     		strb	r2, [r3]
 753:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1824              		.loc 1 753 3 is_stmt 1 view .LVU426
 1825 04d2 47EC106B 		vmov	d0, r6, r7
 1826 04d6 FFF7FEFF 		bl	PWM_R
 1827              	.LVL147:
 754:Core/Src/freertos.c **** 	}
 1828              		.loc 1 754 3 view .LVU427
 1829 04da 154B     		ldr	r3, .L150+16
 1830 04dc 93ED042B 		vldr.64	d2, [r3, #16]
ARM GAS  /tmp/ccDBp1of.s 			page 57


 1831 04e0 93ED021B 		vldr.64	d1, [r3, #8]
 1832 04e4 93ED000B 		vldr.64	d0, [r3]
 1833 04e8 FFF7FEFF 		bl	CAL_LinearSpeed
 1834              	.LVL148:
 1835 04ec FFF7FEFF 		bl	PWM_L
 1836              	.LVL149:
 1837 04f0 B4E6     		b	.L101
 1838              	.L102:
 757:Core/Src/freertos.c **** 		Run_Dir = 'O';
 1839              		.loc 1 757 3 view .LVU428
 757:Core/Src/freertos.c **** 		Run_Dir = 'O';
 1840              		.loc 1 757 13 is_stmt 0 view .LVU429
 1841 04f2 0B4B     		ldr	r3, .L150
 1842 04f4 5522     		movs	r2, #85
 1843 04f6 1A70     		strb	r2, [r3]
 758:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1844              		.loc 1 758 3 is_stmt 1 view .LVU430
 758:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1845              		.loc 1 758 11 is_stmt 0 view .LVU431
 1846 04f8 0A4B     		ldr	r3, .L150+4
 1847 04fa 4F22     		movs	r2, #79
 1848 04fc 1A70     		strb	r2, [r3]
 759:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1849              		.loc 1 759 3 is_stmt 1 view .LVU432
 1850 04fe 47EC106B 		vmov	d0, r6, r7
 1851 0502 FFF7FEFF 		bl	PWM_R
 1852              	.LVL150:
 760:Core/Src/freertos.c **** 	}
 1853              		.loc 1 760 3 view .LVU433
 1854 0506 0A4B     		ldr	r3, .L150+16
 1855 0508 93ED042B 		vldr.64	d2, [r3, #16]
 1856 050c 93ED021B 		vldr.64	d1, [r3, #8]
 1857 0510 93ED000B 		vldr.64	d0, [r3]
 1858 0514 FFF7FEFF 		bl	CAL_LinearSpeed
 1859              	.LVL151:
 1860 0518 FFF7FEFF 		bl	PWM_L
 1861              	.LVL152:
 1862 051c 9EE6     		b	.L101
 1863              	.L151:
 1864 051e 00BF     		.align	2
 1865              	.L150:
 1866 0520 00000000 		.word	.LANCHOR16
 1867 0524 00000000 		.word	.LANCHOR17
 1868 0528 00000000 		.word	.LANCHOR14
 1869 052c 00000000 		.word	.LANCHOR13
 1870 0530 00000000 		.word	.LANCHOR11
 1871              	.LBE7:
 1872              		.cfi_endproc
 1873              	.LFE143:
 1875              		.global	__aeabi_dcmpeq
 1876              		.global	__aeabi_dcmpgt
 1877              		.section	.text.MOTION_MODE,"ax",%progbits
 1878              		.align	1
 1879              		.global	MOTION_MODE
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
ARM GAS  /tmp/ccDBp1of.s 			page 58


 1884              	MOTION_MODE:
 1885              	.LVL153:
 1886              	.LFB157:
1048:Core/Src/freertos.c **** 
1049:Core/Src/freertos.c **** 	void MOTION_MODE(double lx, double ly, double lz, double ax, double ay, double az)
1050:Core/Src/freertos.c **** 	{
 1887              		.loc 1 1050 2 view -0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              		.loc 1 1050 2 is_stmt 0 view .LVU435
 1892 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1893              	.LCFI16:
 1894              		.cfi_def_cfa_offset 24
 1895              		.cfi_offset 3, -24
 1896              		.cfi_offset 4, -20
 1897              		.cfi_offset 5, -16
 1898              		.cfi_offset 6, -12
 1899              		.cfi_offset 7, -8
 1900              		.cfi_offset 14, -4
 1901 0002 55EC104B 		vmov	r4, r5, d0
 1902 0006 57EC156B 		vmov	r6, r7, d5
1051:Core/Src/freertos.c **** 		/*
1052:Core/Src/freertos.c **** 	    if(lx == 0 && az == 0) {
1053:Core/Src/freertos.c **** 	        m_mode = 0; // 정지
1054:Core/Src/freertos.c **** 	    }
1055:Core/Src/freertos.c **** 	    else {
1056:Core/Src/freertos.c **** 	    	if(az >= 0){
1057:Core/Src/freertos.c **** 	    		if(lx > 0){
1058:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
1059:Core/Src/freertos.c **** 	    		}
1060:Core/Src/freertos.c **** 	    		else if(lx < 0){
1061:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
1062:Core/Src/freertos.c **** 	    		}
1063:Core/Src/freertos.c **** 	    	}
1064:Core/Src/freertos.c **** 	    	else if(az < 0){
1065:Core/Src/freertos.c **** 	    		if(lx >= 0){
1066:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
1067:Core/Src/freertos.c **** 	    		}
1068:Core/Src/freertos.c **** 	    		else if(lx < 0){
1069:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
1070:Core/Src/freertos.c **** 	    		}
1071:Core/Src/freertos.c **** 	    	}
1072:Core/Src/freertos.c **** 	    }
1073:Core/Src/freertos.c **** 	    */
1074:Core/Src/freertos.c **** 
1075:Core/Src/freertos.c **** 	    if(lx == 0 && az == 0) {
 1903              		.loc 1 1075 6 is_stmt 1 view .LVU436
 1904              		.loc 1 1075 8 is_stmt 0 view .LVU437
 1905 000a 0022     		movs	r2, #0
 1906 000c 0023     		movs	r3, #0
 1907 000e 10EE100A 		vmov	r0, s0	@ int
 1908 0012 2946     		mov	r1, r5
 1909 0014 FFF7FEFF 		bl	__aeabi_dcmpeq
 1910              	.LVL154:
 1911              		.loc 1 1075 8 view .LVU438
 1912 0018 50B1     		cbz	r0, .L153
ARM GAS  /tmp/ccDBp1of.s 			page 59


 1913              		.loc 1 1075 17 discriminator 1 view .LVU439
 1914 001a 0022     		movs	r2, #0
 1915 001c 0023     		movs	r3, #0
 1916 001e 3046     		mov	r0, r6
 1917 0020 3946     		mov	r1, r7
 1918 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 1919              	.LVL155:
 1920 0026 18B1     		cbz	r0, .L153
1076:Core/Src/freertos.c **** 	        m_mode = 0; // 정지
 1921              		.loc 1 1076 10 is_stmt 1 view .LVU440
 1922              		.loc 1 1076 17 is_stmt 0 view .LVU441
 1923 0028 2F4B     		ldr	r3, .L188
 1924 002a 0022     		movs	r2, #0
 1925 002c 1A60     		str	r2, [r3]
 1926              	.L152:
1077:Core/Src/freertos.c **** 	    }
1078:Core/Src/freertos.c **** 	    else{
1079:Core/Src/freertos.c **** 	    	if(az == 0){
1080:Core/Src/freertos.c **** 	    		if(lx>0){
1081:Core/Src/freertos.c **** 	    			m_mode = 5; // 직진
1082:Core/Src/freertos.c **** 	    		}
1083:Core/Src/freertos.c **** 	    		else if(lx<0){
1084:Core/Src/freertos.c **** 	    			m_mode = 6; // 후진
1085:Core/Src/freertos.c **** 	    		}
1086:Core/Src/freertos.c **** 	    	}
1087:Core/Src/freertos.c **** 	    	else if(az > 0){
1088:Core/Src/freertos.c **** 	    		if(lx >= 0){
1089:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
1090:Core/Src/freertos.c **** 	    		}
1091:Core/Src/freertos.c **** 	    		else if(lx < 0){
1092:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
1093:Core/Src/freertos.c **** 	    		}
1094:Core/Src/freertos.c **** 	    	}
1095:Core/Src/freertos.c **** 	    	else if(az < 0){
1096:Core/Src/freertos.c **** 	    		if(lx >= 0){
1097:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
1098:Core/Src/freertos.c **** 	    		}
1099:Core/Src/freertos.c **** 	    		else if(lx < 0){
1100:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
1101:Core/Src/freertos.c **** 	    		}
1102:Core/Src/freertos.c **** 	    	}
1103:Core/Src/freertos.c **** 	    }
1104:Core/Src/freertos.c **** 	}
 1927              		.loc 1 1104 2 view .LVU442
 1928 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1929              	.LVL156:
 1930              	.L153:
1079:Core/Src/freertos.c **** 	    		if(lx>0){
 1931              		.loc 1 1079 7 is_stmt 1 view .LVU443
1079:Core/Src/freertos.c **** 	    		if(lx>0){
 1932              		.loc 1 1079 9 is_stmt 0 view .LVU444
 1933 0030 0022     		movs	r2, #0
 1934 0032 0023     		movs	r3, #0
 1935 0034 3046     		mov	r0, r6
 1936 0036 3946     		mov	r1, r7
 1937 0038 FFF7FEFF 		bl	__aeabi_dcmpeq
 1938              	.LVL157:
ARM GAS  /tmp/ccDBp1of.s 			page 60


 1939 003c B0B1     		cbz	r0, .L182
1080:Core/Src/freertos.c **** 	    			m_mode = 5; // 직진
 1940              		.loc 1 1080 8 is_stmt 1 view .LVU445
1080:Core/Src/freertos.c **** 	    			m_mode = 5; // 직진
 1941              		.loc 1 1080 10 is_stmt 0 view .LVU446
 1942 003e 0022     		movs	r2, #0
 1943 0040 0023     		movs	r3, #0
 1944 0042 2046     		mov	r0, r4
 1945 0044 2946     		mov	r1, r5
 1946 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 1947              	.LVL158:
 1948 004a 18B1     		cbz	r0, .L183
1081:Core/Src/freertos.c **** 	    		}
 1949              		.loc 1 1081 9 is_stmt 1 view .LVU447
1081:Core/Src/freertos.c **** 	    		}
 1950              		.loc 1 1081 16 is_stmt 0 view .LVU448
 1951 004c 264B     		ldr	r3, .L188
 1952 004e 0522     		movs	r2, #5
 1953 0050 1A60     		str	r2, [r3]
 1954 0052 ECE7     		b	.L152
 1955              	.L183:
1083:Core/Src/freertos.c **** 	    			m_mode = 6; // 후진
 1956              		.loc 1 1083 13 is_stmt 1 view .LVU449
1083:Core/Src/freertos.c **** 	    			m_mode = 6; // 후진
 1957              		.loc 1 1083 15 is_stmt 0 view .LVU450
 1958 0054 0022     		movs	r2, #0
 1959 0056 0023     		movs	r3, #0
 1960 0058 2046     		mov	r0, r4
 1961 005a 2946     		mov	r1, r5
 1962 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1963              	.LVL159:
 1964 0060 0028     		cmp	r0, #0
 1965 0062 E4D0     		beq	.L152
1084:Core/Src/freertos.c **** 	    		}
 1966              		.loc 1 1084 9 is_stmt 1 view .LVU451
1084:Core/Src/freertos.c **** 	    		}
 1967              		.loc 1 1084 16 is_stmt 0 view .LVU452
 1968 0064 204B     		ldr	r3, .L188
 1969 0066 0622     		movs	r2, #6
 1970 0068 1A60     		str	r2, [r3]
 1971 006a E0E7     		b	.L152
 1972              	.L182:
1087:Core/Src/freertos.c **** 	    		if(lx >= 0){
 1973              		.loc 1 1087 12 is_stmt 1 view .LVU453
1087:Core/Src/freertos.c **** 	    		if(lx >= 0){
 1974              		.loc 1 1087 14 is_stmt 0 view .LVU454
 1975 006c 0022     		movs	r2, #0
 1976 006e 0023     		movs	r3, #0
 1977 0070 3046     		mov	r0, r6
 1978 0072 3946     		mov	r1, r7
 1979 0074 FFF7FEFF 		bl	__aeabi_dcmpgt
 1980              	.LVL160:
 1981 0078 B0B1     		cbz	r0, .L184
1088:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
 1982              		.loc 1 1088 8 is_stmt 1 view .LVU455
1088:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
 1983              		.loc 1 1088 10 is_stmt 0 view .LVU456
ARM GAS  /tmp/ccDBp1of.s 			page 61


 1984 007a 0022     		movs	r2, #0
 1985 007c 0023     		movs	r3, #0
 1986 007e 2046     		mov	r0, r4
 1987 0080 2946     		mov	r1, r5
 1988 0082 FFF7FEFF 		bl	__aeabi_dcmpge
 1989              	.LVL161:
 1990 0086 18B1     		cbz	r0, .L185
1089:Core/Src/freertos.c **** 	    		}
 1991              		.loc 1 1089 9 is_stmt 1 view .LVU457
1089:Core/Src/freertos.c **** 	    		}
 1992              		.loc 1 1089 16 is_stmt 0 view .LVU458
 1993 0088 174B     		ldr	r3, .L188
 1994 008a 0222     		movs	r2, #2
 1995 008c 1A60     		str	r2, [r3]
 1996 008e CEE7     		b	.L152
 1997              	.L185:
1091:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
 1998              		.loc 1 1091 13 is_stmt 1 view .LVU459
1091:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
 1999              		.loc 1 1091 15 is_stmt 0 view .LVU460
 2000 0090 0022     		movs	r2, #0
 2001 0092 0023     		movs	r3, #0
 2002 0094 2046     		mov	r0, r4
 2003 0096 2946     		mov	r1, r5
 2004 0098 FFF7FEFF 		bl	__aeabi_dcmplt
 2005              	.LVL162:
 2006 009c 0028     		cmp	r0, #0
 2007 009e C6D0     		beq	.L152
1092:Core/Src/freertos.c **** 	    		}
 2008              		.loc 1 1092 9 is_stmt 1 view .LVU461
1092:Core/Src/freertos.c **** 	    		}
 2009              		.loc 1 1092 16 is_stmt 0 view .LVU462
 2010 00a0 114B     		ldr	r3, .L188
 2011 00a2 0422     		movs	r2, #4
 2012 00a4 1A60     		str	r2, [r3]
 2013 00a6 C2E7     		b	.L152
 2014              	.L184:
1095:Core/Src/freertos.c **** 	    		if(lx >= 0){
 2015              		.loc 1 1095 12 is_stmt 1 view .LVU463
1095:Core/Src/freertos.c **** 	    		if(lx >= 0){
 2016              		.loc 1 1095 14 is_stmt 0 view .LVU464
 2017 00a8 0022     		movs	r2, #0
 2018 00aa 0023     		movs	r3, #0
 2019 00ac 3046     		mov	r0, r6
 2020 00ae 3946     		mov	r1, r7
 2021 00b0 FFF7FEFF 		bl	__aeabi_dcmplt
 2022              	.LVL163:
 2023 00b4 0028     		cmp	r0, #0
 2024 00b6 BAD0     		beq	.L152
1096:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
 2025              		.loc 1 1096 8 is_stmt 1 view .LVU465
1096:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
 2026              		.loc 1 1096 10 is_stmt 0 view .LVU466
 2027 00b8 0022     		movs	r2, #0
 2028 00ba 0023     		movs	r3, #0
 2029 00bc 2046     		mov	r0, r4
 2030 00be 2946     		mov	r1, r5
ARM GAS  /tmp/ccDBp1of.s 			page 62


 2031 00c0 FFF7FEFF 		bl	__aeabi_dcmpge
 2032              	.LVL164:
 2033 00c4 18B1     		cbz	r0, .L186
1097:Core/Src/freertos.c **** 	    		}
 2034              		.loc 1 1097 9 is_stmt 1 view .LVU467
1097:Core/Src/freertos.c **** 	    		}
 2035              		.loc 1 1097 16 is_stmt 0 view .LVU468
 2036 00c6 084B     		ldr	r3, .L188
 2037 00c8 0122     		movs	r2, #1
 2038 00ca 1A60     		str	r2, [r3]
 2039 00cc AFE7     		b	.L152
 2040              	.L186:
1099:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
 2041              		.loc 1 1099 13 is_stmt 1 view .LVU469
1099:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
 2042              		.loc 1 1099 15 is_stmt 0 view .LVU470
 2043 00ce 0022     		movs	r2, #0
 2044 00d0 0023     		movs	r3, #0
 2045 00d2 2046     		mov	r0, r4
 2046 00d4 2946     		mov	r1, r5
 2047 00d6 FFF7FEFF 		bl	__aeabi_dcmplt
 2048              	.LVL165:
 2049 00da 0028     		cmp	r0, #0
 2050 00dc A7D0     		beq	.L152
1100:Core/Src/freertos.c **** 	    		}
 2051              		.loc 1 1100 9 is_stmt 1 view .LVU471
1100:Core/Src/freertos.c **** 	    		}
 2052              		.loc 1 1100 16 is_stmt 0 view .LVU472
 2053 00de 024B     		ldr	r3, .L188
 2054 00e0 0322     		movs	r2, #3
 2055 00e2 1A60     		str	r2, [r3]
 2056              		.loc 1 1104 2 view .LVU473
 2057 00e4 A3E7     		b	.L152
 2058              	.L189:
 2059 00e6 00BF     		.align	2
 2060              	.L188:
 2061 00e8 00000000 		.word	.LANCHOR15
 2062              		.cfi_endproc
 2063              	.LFE157:
 2065              		.section	.text.twist_subscription_callback,"ax",%progbits
 2066              		.align	1
 2067              		.global	twist_subscription_callback
 2068              		.syntax unified
 2069              		.thumb
 2070              		.thumb_func
 2072              	twist_subscription_callback:
 2073              	.LVL166:
 2074              	.LFB147:
 814:Core/Src/freertos.c **** 	    const geometry_msgs__msg__Twist * msg = (const geometry_msgs__msg__Twist *)msgin;
 2075              		.loc 1 814 2 is_stmt 1 view -0
 2076              		.cfi_startproc
 2077              		@ args = 0, pretend = 0, frame = 0
 2078              		@ frame_needed = 0, uses_anonymous_args = 0
 814:Core/Src/freertos.c **** 	    const geometry_msgs__msg__Twist * msg = (const geometry_msgs__msg__Twist *)msgin;
 2079              		.loc 1 814 2 is_stmt 0 view .LVU475
 2080 0000 10B5     		push	{r4, lr}
 2081              	.LCFI17:
ARM GAS  /tmp/ccDBp1of.s 			page 63


 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 4, -8
 2084              		.cfi_offset 14, -4
 2085 0002 0446     		mov	r4, r0
 815:Core/Src/freertos.c **** 
 2086              		.loc 1 815 6 is_stmt 1 view .LVU476
 2087              	.LVL167:
 817:Core/Src/freertos.c **** 
 2088              		.loc 1 817 6 view .LVU477
 2089 0004 4FF40061 		mov	r1, #2048
 2090 0008 0F48     		ldr	r0, .L192
 2091              	.LVL168:
 817:Core/Src/freertos.c **** 
 2092              		.loc 1 817 6 is_stmt 0 view .LVU478
 2093 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2094              	.LVL169:
 860:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 2095              		.loc 1 860 3 is_stmt 1 view .LVU479
 860:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 2096              		.loc 1 860 26 is_stmt 0 view .LVU480
 2097 000e 94ED000B 		vldr.64	d0, [r4]
 860:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 2098              		.loc 1 860 13 view .LVU481
 2099 0012 0E4B     		ldr	r3, .L192+4
 2100 0014 83ED000B 		vstr.64	d0, [r3]
 861:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 2101              		.loc 1 861 3 is_stmt 1 view .LVU482
 861:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 2102              		.loc 1 861 26 is_stmt 0 view .LVU483
 2103 0018 94ED021B 		vldr.64	d1, [r4, #8]
 861:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 2104              		.loc 1 861 13 view .LVU484
 2105 001c 83ED021B 		vstr.64	d1, [r3, #8]
 862:Core/Src/freertos.c **** 
 2106              		.loc 1 862 3 is_stmt 1 view .LVU485
 862:Core/Src/freertos.c **** 
 2107              		.loc 1 862 26 is_stmt 0 view .LVU486
 2108 0020 94ED042B 		vldr.64	d2, [r4, #16]
 862:Core/Src/freertos.c **** 
 2109              		.loc 1 862 13 view .LVU487
 2110 0024 83ED042B 		vstr.64	d2, [r3, #16]
 864:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 2111              		.loc 1 864 3 is_stmt 1 view .LVU488
 864:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 2112              		.loc 1 864 28 is_stmt 0 view .LVU489
 2113 0028 94ED063B 		vldr.64	d3, [r4, #24]
 864:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 2114              		.loc 1 864 14 view .LVU490
 2115 002c 084B     		ldr	r3, .L192+8
 2116 002e 83ED003B 		vstr.64	d3, [r3]
 865:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 2117              		.loc 1 865 3 is_stmt 1 view .LVU491
 865:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 2118              		.loc 1 865 28 is_stmt 0 view .LVU492
 2119 0032 94ED084B 		vldr.64	d4, [r4, #32]
 865:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 2120              		.loc 1 865 14 view .LVU493
ARM GAS  /tmp/ccDBp1of.s 			page 64


 2121 0036 83ED024B 		vstr.64	d4, [r3, #8]
 866:Core/Src/freertos.c **** 
 2122              		.loc 1 866 3 is_stmt 1 view .LVU494
 866:Core/Src/freertos.c **** 
 2123              		.loc 1 866 28 is_stmt 0 view .LVU495
 2124 003a 94ED0A5B 		vldr.64	d5, [r4, #40]
 866:Core/Src/freertos.c **** 
 2125              		.loc 1 866 14 view .LVU496
 2126 003e 83ED045B 		vstr.64	d5, [r3, #16]
 868:Core/Src/freertos.c **** /*		if(Linear.vy != 0)	m_mode = 2;
 2127              		.loc 1 868 3 is_stmt 1 view .LVU497
 2128 0042 FFF7FEFF 		bl	MOTION_MODE
 2129              	.LVL170:
 888:Core/Src/freertos.c **** 
 2130              		.loc 1 888 2 is_stmt 0 view .LVU498
 2131 0046 10BD     		pop	{r4, pc}
 2132              	.LVL171:
 2133              	.L193:
 888:Core/Src/freertos.c **** 
 2134              		.loc 1 888 2 view .LVU499
 2135              		.align	2
 2136              	.L192:
 2137 0048 00040240 		.word	1073873920
 2138 004c 00000000 		.word	.LANCHOR11
 2139 0050 00000000 		.word	.LANCHOR12
 2140              		.cfi_endproc
 2141              	.LFE147:
 2143              		.section	.text.hex_to_signed_int,"ax",%progbits
 2144              		.align	1
 2145              		.global	hex_to_signed_int
 2146              		.syntax unified
 2147              		.thumb
 2148              		.thumb_func
 2150              	hex_to_signed_int:
 2151              	.LVL172:
 2152              	.LFB158:
1105:Core/Src/freertos.c **** 
1106:Core/Src/freertos.c **** 	int16_t hex_to_signed_int(const char *hex_str){
 2153              		.loc 1 1106 48 is_stmt 1 view -0
 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 0
 2156              		@ frame_needed = 0, uses_anonymous_args = 0
 2157              		.loc 1 1106 48 is_stmt 0 view .LVU501
 2158 0000 08B5     		push	{r3, lr}
 2159              	.LCFI18:
 2160              		.cfi_def_cfa_offset 8
 2161              		.cfi_offset 3, -8
 2162              		.cfi_offset 14, -4
1107:Core/Src/freertos.c **** 		int16_t value = (int16_t)strtol(hex_str, NULL, 16);
 2163              		.loc 1 1107 3 is_stmt 1 view .LVU502
 2164              		.loc 1 1107 28 is_stmt 0 view .LVU503
 2165 0002 1022     		movs	r2, #16
 2166 0004 0021     		movs	r1, #0
 2167 0006 FFF7FEFF 		bl	strtol
 2168              	.LVL173:
1108:Core/Src/freertos.c **** 		if(value > 0x7FFF){
 2169              		.loc 1 1108 3 is_stmt 1 view .LVU504
ARM GAS  /tmp/ccDBp1of.s 			page 65


1109:Core/Src/freertos.c **** 			value -= 0x10000;
1110:Core/Src/freertos.c **** 		}
1111:Core/Src/freertos.c **** 		return value;
 2170              		.loc 1 1111 3 view .LVU505
1112:Core/Src/freertos.c **** 	}
 2171              		.loc 1 1112 2 is_stmt 0 view .LVU506
 2172 000a 00B2     		sxth	r0, r0
 2173              		.loc 1 1112 2 view .LVU507
 2174 000c 08BD     		pop	{r3, pc}
 2175              		.cfi_endproc
 2176              	.LFE158:
 2178              		.global	defaultTask_attributes
 2179              		.section	.rodata.str1.4,"aMS",%progbits,1
 2180              		.align	2
 2181              	.LC9:
 2182 0000 64656661 		.ascii	"defaultTask\000"
 2182      756C7454 
 2182      61736B00 
 2183              		.global	defaultTaskControlBlock
 2184              		.global	defaultTaskBuffer
 2185              		.global	defaultTaskHandle
 2186              		.global	timeout
 2187              		.global	angle
 2188              		.global	pwm_m
 2189              		.global	pwm_p
 2190              		.global	m_mode
 2191              		.global	Angular
 2192              		.global	Linear
 2193              		.global	r_enc_op
 2194              		.global	l_enc_op
 2195              		.global	hall2
 2196              		.global	hall1
 2197              		.global	m2_rpm_p_10
 2198              		.global	m1_rpm_p_10
 2199              		.global	m2_rpm_p
 2200              		.global	m1_rpm_p
 2201              		.global	m2_rpm
 2202              		.global	m1_rpm
 2203              		.global	m2_deg_1_10
 2204              		.global	m1_deg_1_10
 2205              		.global	m2_deg_10_p
 2206              		.global	m1_deg_10_p
 2207              		.global	m2_deg_10
 2208              		.global	m1_deg_10
 2209              		.global	m2_deg
 2210              		.global	m1_deg
 2211              		.global	m2_rev
 2212              		.global	m1_rev
 2213              		.global	m2_hall
 2214              		.global	m1_hall
 2215              		.global	angular_velocity_z
 2216              		.global	angular_velocity_y
 2217              		.global	angular_velocity_x
 2218              		.global	linear_velocity_z
 2219              		.global	linear_velocity_y
 2220              		.global	linear_velocity_x
 2221              		.global	Run_Dir
ARM GAS  /tmp/ccDBp1of.s 			page 66


 2222              		.global	Motor_State
 2223              		.global	Run_State
 2224              		.global	motor2
 2225              		.global	motor1
 2226              		.global	Command_Response2
 2227              		.global	Command_Response1
 2228              		.global	Command_Request_Data
 2229              		.section	.bss.Angular,"aw",%nobits
 2230              		.align	3
 2231              		.set	.LANCHOR12,. + 0
 2234              	Angular:
 2235 0000 00000000 		.space	24
 2235      00000000 
 2235      00000000 
 2235      00000000 
 2235      00000000 
 2236              		.section	.bss.Linear,"aw",%nobits
 2237              		.align	3
 2238              		.set	.LANCHOR11,. + 0
 2241              	Linear:
 2242 0000 00000000 		.space	24
 2242      00000000 
 2242      00000000 
 2242      00000000 
 2242      00000000 
 2243              		.section	.bss.Motor_State,"aw",%nobits
 2244              		.set	.LANCHOR18,. + 0
 2247              	Motor_State:
 2248 0000 00       		.space	1
 2249              		.section	.bss.Run_Dir,"aw",%nobits
 2250              		.set	.LANCHOR17,. + 0
 2253              	Run_Dir:
 2254 0000 00       		.space	1
 2255              		.section	.bss.Run_State,"aw",%nobits
 2256              		.set	.LANCHOR16,. + 0
 2259              	Run_State:
 2260 0000 00       		.space	1
 2261              		.section	.bss.angle,"aw",%nobits
 2262              		.align	3
 2265              	angle:
 2266 0000 00000000 		.space	8
 2266      00000000 
 2267              		.section	.bss.angular_velocity_x,"aw",%nobits
 2268              		.align	2
 2271              	angular_velocity_x:
 2272 0000 00000000 		.space	4
 2273              		.section	.bss.angular_velocity_y,"aw",%nobits
 2274              		.align	2
 2277              	angular_velocity_y:
 2278 0000 00000000 		.space	4
 2279              		.section	.bss.angular_velocity_z,"aw",%nobits
 2280              		.align	2
 2283              	angular_velocity_z:
 2284 0000 00000000 		.space	4
 2285              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 2286              		.align	2
 2289              	defaultTaskBuffer:
ARM GAS  /tmp/ccDBp1of.s 			page 67


 2290 0000 00000000 		.space	12000
 2290      00000000 
 2290      00000000 
 2290      00000000 
 2290      00000000 
 2291              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 2292              		.align	2
 2295              	defaultTaskControlBlock:
 2296 0000 00000000 		.space	92
 2296      00000000 
 2296      00000000 
 2296      00000000 
 2296      00000000 
 2297              		.section	.bss.defaultTaskHandle,"aw",%nobits
 2298              		.align	2
 2299              		.set	.LANCHOR1,. + 0
 2302              	defaultTaskHandle:
 2303 0000 00000000 		.space	4
 2304              		.section	.bss.hall1,"aw",%nobits
 2305              		.align	2
 2306              		.set	.LANCHOR2,. + 0
 2309              	hall1:
 2310 0000 00000000 		.space	4
 2311              		.section	.bss.hall2,"aw",%nobits
 2312              		.align	2
 2313              		.set	.LANCHOR3,. + 0
 2316              	hall2:
 2317 0000 00000000 		.space	4
 2318              		.section	.bss.l_enc_op,"aw",%nobits
 2319              		.align	2
 2320              		.set	.LANCHOR7,. + 0
 2323              	l_enc_op:
 2324 0000 00000000 		.space	4
 2325              		.section	.bss.linear_velocity_x,"aw",%nobits
 2326              		.align	2
 2329              	linear_velocity_x:
 2330 0000 00000000 		.space	4
 2331              		.section	.bss.linear_velocity_y,"aw",%nobits
 2332              		.align	2
 2335              	linear_velocity_y:
 2336 0000 00000000 		.space	4
 2337              		.section	.bss.linear_velocity_z,"aw",%nobits
 2338              		.align	2
 2341              	linear_velocity_z:
 2342 0000 00000000 		.space	4
 2343              		.section	.bss.m1_deg,"aw",%nobits
 2344              		.align	2
 2347              	m1_deg:
 2348 0000 00000000 		.space	4
 2349              		.section	.bss.m1_deg_10,"aw",%nobits
 2350              		.align	2
 2353              	m1_deg_10:
 2354 0000 00000000 		.space	4
 2355              		.section	.bss.m1_deg_10_p,"aw",%nobits
 2356              		.align	2
 2359              	m1_deg_10_p:
 2360 0000 00000000 		.space	4
ARM GAS  /tmp/ccDBp1of.s 			page 68


 2361              		.section	.bss.m1_deg_1_10,"aw",%nobits
 2362              		.align	2
 2365              	m1_deg_1_10:
 2366 0000 00000000 		.space	4
 2367              		.section	.bss.m1_hall,"aw",%nobits
 2368              		.align	2
 2371              	m1_hall:
 2372 0000 00000000 		.space	4
 2373              		.section	.bss.m1_rev,"aw",%nobits
 2374              		.align	2
 2377              	m1_rev:
 2378 0000 00000000 		.space	4
 2379              		.section	.bss.m1_rpm,"aw",%nobits
 2380              		.align	2
 2383              	m1_rpm:
 2384 0000 00000000 		.space	4
 2385              		.section	.bss.m1_rpm_p,"aw",%nobits
 2386              		.align	2
 2389              	m1_rpm_p:
 2390 0000 00000000 		.space	4
 2391              		.section	.bss.m1_rpm_p_10,"aw",%nobits
 2392              		.align	2
 2395              	m1_rpm_p_10:
 2396 0000 00000000 		.space	4
 2397              		.section	.bss.m2_deg,"aw",%nobits
 2398              		.align	2
 2401              	m2_deg:
 2402 0000 00000000 		.space	4
 2403              		.section	.bss.m2_deg_10,"aw",%nobits
 2404              		.align	2
 2407              	m2_deg_10:
 2408 0000 00000000 		.space	4
 2409              		.section	.bss.m2_deg_10_p,"aw",%nobits
 2410              		.align	2
 2413              	m2_deg_10_p:
 2414 0000 00000000 		.space	4
 2415              		.section	.bss.m2_deg_1_10,"aw",%nobits
 2416              		.align	2
 2419              	m2_deg_1_10:
 2420 0000 00000000 		.space	4
 2421              		.section	.bss.m2_hall,"aw",%nobits
 2422              		.align	2
 2425              	m2_hall:
 2426 0000 00000000 		.space	4
 2427              		.section	.bss.m2_rev,"aw",%nobits
 2428              		.align	2
 2431              	m2_rev:
 2432 0000 00000000 		.space	4
 2433              		.section	.bss.m2_rpm,"aw",%nobits
 2434              		.align	2
 2437              	m2_rpm:
 2438 0000 00000000 		.space	4
 2439              		.section	.bss.m2_rpm_p,"aw",%nobits
 2440              		.align	2
 2443              	m2_rpm_p:
 2444 0000 00000000 		.space	4
 2445              		.section	.bss.m2_rpm_p_10,"aw",%nobits
ARM GAS  /tmp/ccDBp1of.s 			page 69


 2446              		.align	2
 2449              	m2_rpm_p_10:
 2450 0000 00000000 		.space	4
 2451              		.section	.bss.m_mode,"aw",%nobits
 2452              		.align	2
 2453              		.set	.LANCHOR15,. + 0
 2456              	m_mode:
 2457 0000 00000000 		.space	4
 2458              		.section	.bss.motor1,"aw",%nobits
 2459              		.align	2
 2460              		.set	.LANCHOR4,. + 0
 2463              	motor1:
 2464 0000 00000000 		.space	24
 2464      00000000 
 2464      00000000 
 2464      00000000 
 2464      00000000 
 2465              		.section	.bss.motor2,"aw",%nobits
 2466              		.align	2
 2467              		.set	.LANCHOR5,. + 0
 2470              	motor2:
 2471 0000 00000000 		.space	24
 2471      00000000 
 2471      00000000 
 2471      00000000 
 2471      00000000 
 2472              		.section	.bss.pwm_m,"aw",%nobits
 2473              		.align	3
 2474              		.set	.LANCHOR14,. + 0
 2477              	pwm_m:
 2478 0000 00000000 		.space	8
 2478      00000000 
 2479              		.section	.bss.pwm_p,"aw",%nobits
 2480              		.align	3
 2481              		.set	.LANCHOR13,. + 0
 2484              	pwm_p:
 2485 0000 00000000 		.space	8
 2485      00000000 
 2486              		.section	.bss.r_enc_op,"aw",%nobits
 2487              		.align	2
 2488              		.set	.LANCHOR6,. + 0
 2491              	r_enc_op:
 2492 0000 00000000 		.space	4
 2493              		.section	.data.Command_Request_Data,"aw"
 2494              		.align	2
 2495              		.set	.LANCHOR8,. + 0
 2498              	Command_Request_Data:
 2499 0000 B7B80104 		.ascii	"\267\270\001\004\001\322\271"
 2499      01D2B9
 2500              		.section	.data.Command_Response1,"aw"
 2501              		.align	2
 2502              		.set	.LANCHOR9,. + 0
 2505              	Command_Response1:
 2506 0000 30313233 		.ascii	"01234567890ABCDEF\000"
 2506      34353637 
 2506      38393041 
 2506      42434445 
ARM GAS  /tmp/ccDBp1of.s 			page 70


 2506      4600
 2507 0012 00000000 		.space	32
 2507      00000000 
 2507      00000000 
 2507      00000000 
 2507      00000000 
 2508              		.section	.data.Command_Response2,"aw"
 2509              		.align	2
 2510              		.set	.LANCHOR10,. + 0
 2513              	Command_Response2:
 2514 0000 30313233 		.ascii	"01234567890ABCDEF\000"
 2514      34353637 
 2514      38393041 
 2514      42434445 
 2514      4600
 2515 0012 00000000 		.space	6
 2515      0000
 2516              		.section	.data.timeout,"aw"
 2517              		.align	2
 2518              		.set	.LANCHOR19,. + 0
 2521              	timeout:
 2522 0000 80969800 		.word	10000000
 2523              		.section	.rodata.defaultTask_attributes,"a"
 2524              		.align	2
 2525              		.set	.LANCHOR0,. + 0
 2528              	defaultTask_attributes:
 2529 0000 00000000 		.word	.LC9
 2530 0004 00000000 		.space	4
 2531 0008 00000000 		.word	defaultTaskControlBlock
 2532 000c 5C000000 		.word	92
 2533 0010 00000000 		.word	defaultTaskBuffer
 2534 0014 E02E0000 		.word	12000
 2535 0018 18000000 		.word	24
 2536 001c 00000000 		.space	8
 2536      00000000 
 2537              		.text
 2538              	.Letext0:
 2539              		.file 2 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 2540              		.file 3 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 2541              		.file 4 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 2542              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 2543              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2544              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2545              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2546              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2547              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2548              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2549              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2550              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2551              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 2552              		.file 15 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 2553              		.file 16 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/all
 2554              		.file 17 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/ret
 2555              		.file 18 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 2556              		.file 19 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 2557              		.file 20 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/typ
 2558              		.file 21 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/ini
ARM GAS  /tmp/ccDBp1of.s 			page 71


 2559              		.file 22 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/con
 2560              		.file 23 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/nod
 2561              		.file 24 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 2562              		.file 25 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/pub
 2563              		.file 26 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/sub
 2564              		.file 27 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/cli
 2565              		.file 28 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/gua
 2566              		.file 29 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/ser
 2567              		.file 30 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 2568              		.file 31 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 2569              		.file 32 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 2570              		.file 33 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/eve
 2571              		.file 34 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/wai
 2572              		.file 35 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ty
 2573              		.file 36 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ex
 2574              		.file 37 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ex
 2575              		.file 38 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 2576              		.file 39 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 2577              		.file 40 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 2578              		.file 41 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2579              		.file 42 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 2580              		.file 43 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2581              		.file 44 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/geometr
 2582              		.file 45 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/geometr
 2583              		.file 46 "Core/Inc/usart.h"
 2584              		.file 47 "Core/Inc/tim.h"
 2585              		.file 48 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 2586              		.file 49 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 2587              		.file 50 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/su
 2588              		.file 51 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/geometr
 2589              		.file 52 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/pu
 2590              		.file 53 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2591              		.file 54 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/no
 2592              		.file 55 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/in
 2593              		.file 56 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 2594              		.file 57 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw_mic
 2595              		.file 58 "<built-in>"
ARM GAS  /tmp/ccDBp1of.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccDBp1of.s:20     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccDBp1of.s:26     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccDBp1of.s:53     .text.MX_FREERTOS_Init:0000000000000014 $d
     /tmp/ccDBp1of.s:967    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccDBp1of.s:60     .rodata.messageCallback.str1.4:0000000000000000 $d
     /tmp/ccDBp1of.s:64     .text.messageCallback:0000000000000000 $t
     /tmp/ccDBp1of.s:70     .text.messageCallback:0000000000000000 messageCallback
     /tmp/ccDBp1of.s:97     .text.messageCallback:0000000000000010 $d
     /tmp/ccDBp1of.s:102    .rodata.messageCallback_test1.str1.4:0000000000000000 $d
     /tmp/ccDBp1of.s:106    .text.messageCallback_test1:0000000000000000 $t
     /tmp/ccDBp1of.s:112    .text.messageCallback_test1:0000000000000000 messageCallback_test1
     /tmp/ccDBp1of.s:139    .text.messageCallback_test1:000000000000000c $d
     /tmp/ccDBp1of.s:144    .text.messageCallback_test2:0000000000000000 $t
     /tmp/ccDBp1of.s:150    .text.messageCallback_test2:0000000000000000 messageCallback_test2
     /tmp/ccDBp1of.s:177    .text.messageCallback_test2:000000000000000c $d
     /tmp/ccDBp1of.s:182    .text.RUN_INIT:0000000000000000 $t
     /tmp/ccDBp1of.s:188    .text.RUN_INIT:0000000000000000 RUN_INIT
     /tmp/ccDBp1of.s:229    .text.RUN_INIT:0000000000000034 $d
     /tmp/ccDBp1of.s:236    .text.RUN_DIR:0000000000000000 $t
     /tmp/ccDBp1of.s:242    .text.RUN_DIR:0000000000000000 RUN_DIR
     /tmp/ccDBp1of.s:263    .text.RUN_DIR:000000000000000c $d
     /tmp/ccDBp1of.s:343    .text.RUN_DIR:0000000000000084 $d
     /tmp/ccDBp1of.s:348    .text.RUN_RB:0000000000000000 $t
     /tmp/ccDBp1of.s:354    .text.RUN_RB:0000000000000000 RUN_RB
     /tmp/ccDBp1of.s:417    .text.RUN_RB:000000000000003c $d
     /tmp/ccDBp1of.s:423    .text.MOTOR_SS:0000000000000000 $t
     /tmp/ccDBp1of.s:429    .text.MOTOR_SS:0000000000000000 MOTOR_SS
     /tmp/ccDBp1of.s:492    .text.MOTOR_SS:000000000000003c $d
     /tmp/ccDBp1of.s:498    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/ccDBp1of.s:504    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccDBp1of.s:627    .text.HAL_TIM_IC_CaptureCallback:0000000000000080 $d
     /tmp/ccDBp1of.s:638    .text.PWM_R:0000000000000000 $t
     /tmp/ccDBp1of.s:644    .text.PWM_R:0000000000000000 PWM_R
     /tmp/ccDBp1of.s:710    .text.PWM_R:0000000000000040 $d
     /tmp/ccDBp1of.s:716    .text.PWM_L:0000000000000000 $t
     /tmp/ccDBp1of.s:722    .text.PWM_L:0000000000000000 PWM_L
     /tmp/ccDBp1of.s:788    .text.PWM_L:0000000000000040 $d
     /tmp/ccDBp1of.s:796    .text.CAL_LinearSpeed:0000000000000000 $t
     /tmp/ccDBp1of.s:802    .text.CAL_LinearSpeed:0000000000000000 CAL_LinearSpeed
     /tmp/ccDBp1of.s:857    .text.CAL_LinearSpeed:0000000000000038 $d
     /tmp/ccDBp1of.s:864    .text.CAL_AngularSpeed:0000000000000000 $t
     /tmp/ccDBp1of.s:870    .text.CAL_AngularSpeed:0000000000000000 CAL_AngularSpeed
     /tmp/ccDBp1of.s:930    .text.CAL_AngularSpeed:0000000000000040 $d
     /tmp/ccDBp1of.s:937    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccDBp1of.s:961    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccDBp1of.s:1173   .text.StartDefaultTask:00000000000000ec $d
     /tmp/ccDBp1of.s:2072   .text.twist_subscription_callback:0000000000000000 twist_subscription_callback
     /tmp/ccDBp1of.s:1200   .text.StartDefaultTask:0000000000000140 $t
     /tmp/ccDBp1of.s:1589   .text.StartDefaultTask:000000000000033e $d
     /tmp/ccDBp1of.s:1595   .text.StartDefaultTask:0000000000000344 $t
     /tmp/ccDBp1of.s:1696   .text.StartDefaultTask:00000000000003e0 $d
     /tmp/ccDBp1of.s:1719   .text.StartDefaultTask:0000000000000430 $t
     /tmp/ccDBp1of.s:1866   .text.StartDefaultTask:0000000000000520 $d
     /tmp/ccDBp1of.s:1878   .text.MOTION_MODE:0000000000000000 $t
     /tmp/ccDBp1of.s:1884   .text.MOTION_MODE:0000000000000000 MOTION_MODE
ARM GAS  /tmp/ccDBp1of.s 			page 73


     /tmp/ccDBp1of.s:2061   .text.MOTION_MODE:00000000000000e8 $d
     /tmp/ccDBp1of.s:2066   .text.twist_subscription_callback:0000000000000000 $t
     /tmp/ccDBp1of.s:2137   .text.twist_subscription_callback:0000000000000048 $d
     /tmp/ccDBp1of.s:2144   .text.hex_to_signed_int:0000000000000000 $t
     /tmp/ccDBp1of.s:2150   .text.hex_to_signed_int:0000000000000000 hex_to_signed_int
     /tmp/ccDBp1of.s:2528   .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccDBp1of.s:2180   .rodata.str1.4:0000000000000000 $d
     /tmp/ccDBp1of.s:2295   .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccDBp1of.s:2289   .bss.defaultTaskBuffer:0000000000000000 defaultTaskBuffer
     /tmp/ccDBp1of.s:2302   .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccDBp1of.s:2521   .data.timeout:0000000000000000 timeout
     /tmp/ccDBp1of.s:2265   .bss.angle:0000000000000000 angle
     /tmp/ccDBp1of.s:2477   .bss.pwm_m:0000000000000000 pwm_m
     /tmp/ccDBp1of.s:2484   .bss.pwm_p:0000000000000000 pwm_p
     /tmp/ccDBp1of.s:2456   .bss.m_mode:0000000000000000 m_mode
     /tmp/ccDBp1of.s:2234   .bss.Angular:0000000000000000 Angular
     /tmp/ccDBp1of.s:2241   .bss.Linear:0000000000000000 Linear
     /tmp/ccDBp1of.s:2491   .bss.r_enc_op:0000000000000000 r_enc_op
     /tmp/ccDBp1of.s:2323   .bss.l_enc_op:0000000000000000 l_enc_op
     /tmp/ccDBp1of.s:2316   .bss.hall2:0000000000000000 hall2
     /tmp/ccDBp1of.s:2309   .bss.hall1:0000000000000000 hall1
     /tmp/ccDBp1of.s:2449   .bss.m2_rpm_p_10:0000000000000000 m2_rpm_p_10
     /tmp/ccDBp1of.s:2395   .bss.m1_rpm_p_10:0000000000000000 m1_rpm_p_10
     /tmp/ccDBp1of.s:2443   .bss.m2_rpm_p:0000000000000000 m2_rpm_p
     /tmp/ccDBp1of.s:2389   .bss.m1_rpm_p:0000000000000000 m1_rpm_p
     /tmp/ccDBp1of.s:2437   .bss.m2_rpm:0000000000000000 m2_rpm
     /tmp/ccDBp1of.s:2383   .bss.m1_rpm:0000000000000000 m1_rpm
     /tmp/ccDBp1of.s:2419   .bss.m2_deg_1_10:0000000000000000 m2_deg_1_10
     /tmp/ccDBp1of.s:2365   .bss.m1_deg_1_10:0000000000000000 m1_deg_1_10
     /tmp/ccDBp1of.s:2413   .bss.m2_deg_10_p:0000000000000000 m2_deg_10_p
     /tmp/ccDBp1of.s:2359   .bss.m1_deg_10_p:0000000000000000 m1_deg_10_p
     /tmp/ccDBp1of.s:2407   .bss.m2_deg_10:0000000000000000 m2_deg_10
     /tmp/ccDBp1of.s:2353   .bss.m1_deg_10:0000000000000000 m1_deg_10
     /tmp/ccDBp1of.s:2401   .bss.m2_deg:0000000000000000 m2_deg
     /tmp/ccDBp1of.s:2347   .bss.m1_deg:0000000000000000 m1_deg
     /tmp/ccDBp1of.s:2431   .bss.m2_rev:0000000000000000 m2_rev
     /tmp/ccDBp1of.s:2377   .bss.m1_rev:0000000000000000 m1_rev
     /tmp/ccDBp1of.s:2425   .bss.m2_hall:0000000000000000 m2_hall
     /tmp/ccDBp1of.s:2371   .bss.m1_hall:0000000000000000 m1_hall
     /tmp/ccDBp1of.s:2283   .bss.angular_velocity_z:0000000000000000 angular_velocity_z
     /tmp/ccDBp1of.s:2277   .bss.angular_velocity_y:0000000000000000 angular_velocity_y
     /tmp/ccDBp1of.s:2271   .bss.angular_velocity_x:0000000000000000 angular_velocity_x
     /tmp/ccDBp1of.s:2341   .bss.linear_velocity_z:0000000000000000 linear_velocity_z
     /tmp/ccDBp1of.s:2335   .bss.linear_velocity_y:0000000000000000 linear_velocity_y
     /tmp/ccDBp1of.s:2329   .bss.linear_velocity_x:0000000000000000 linear_velocity_x
     /tmp/ccDBp1of.s:2253   .bss.Run_Dir:0000000000000000 Run_Dir
     /tmp/ccDBp1of.s:2247   .bss.Motor_State:0000000000000000 Motor_State
     /tmp/ccDBp1of.s:2259   .bss.Run_State:0000000000000000 Run_State
     /tmp/ccDBp1of.s:2470   .bss.motor2:0000000000000000 motor2
     /tmp/ccDBp1of.s:2463   .bss.motor1:0000000000000000 motor1
     /tmp/ccDBp1of.s:2513   .data.Command_Response2:0000000000000000 Command_Response2
     /tmp/ccDBp1of.s:2505   .data.Command_Response1:0000000000000000 Command_Response1
     /tmp/ccDBp1of.s:2498   .data.Command_Request_Data:0000000000000000 Command_Request_Data
     /tmp/ccDBp1of.s:2230   .bss.Angular:0000000000000000 $d
     /tmp/ccDBp1of.s:2237   .bss.Linear:0000000000000000 $d
     /tmp/ccDBp1of.s:2248   .bss.Motor_State:0000000000000000 $d
     /tmp/ccDBp1of.s:2254   .bss.Run_Dir:0000000000000000 $d
ARM GAS  /tmp/ccDBp1of.s 			page 74


     /tmp/ccDBp1of.s:2260   .bss.Run_State:0000000000000000 $d
     /tmp/ccDBp1of.s:2262   .bss.angle:0000000000000000 $d
     /tmp/ccDBp1of.s:2268   .bss.angular_velocity_x:0000000000000000 $d
     /tmp/ccDBp1of.s:2274   .bss.angular_velocity_y:0000000000000000 $d
     /tmp/ccDBp1of.s:2280   .bss.angular_velocity_z:0000000000000000 $d
     /tmp/ccDBp1of.s:2286   .bss.defaultTaskBuffer:0000000000000000 $d
     /tmp/ccDBp1of.s:2292   .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccDBp1of.s:2298   .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccDBp1of.s:2305   .bss.hall1:0000000000000000 $d
     /tmp/ccDBp1of.s:2312   .bss.hall2:0000000000000000 $d
     /tmp/ccDBp1of.s:2319   .bss.l_enc_op:0000000000000000 $d
     /tmp/ccDBp1of.s:2326   .bss.linear_velocity_x:0000000000000000 $d
     /tmp/ccDBp1of.s:2332   .bss.linear_velocity_y:0000000000000000 $d
     /tmp/ccDBp1of.s:2338   .bss.linear_velocity_z:0000000000000000 $d
     /tmp/ccDBp1of.s:2344   .bss.m1_deg:0000000000000000 $d
     /tmp/ccDBp1of.s:2350   .bss.m1_deg_10:0000000000000000 $d
     /tmp/ccDBp1of.s:2356   .bss.m1_deg_10_p:0000000000000000 $d
     /tmp/ccDBp1of.s:2362   .bss.m1_deg_1_10:0000000000000000 $d
     /tmp/ccDBp1of.s:2368   .bss.m1_hall:0000000000000000 $d
     /tmp/ccDBp1of.s:2374   .bss.m1_rev:0000000000000000 $d
     /tmp/ccDBp1of.s:2380   .bss.m1_rpm:0000000000000000 $d
     /tmp/ccDBp1of.s:2386   .bss.m1_rpm_p:0000000000000000 $d
     /tmp/ccDBp1of.s:2392   .bss.m1_rpm_p_10:0000000000000000 $d
     /tmp/ccDBp1of.s:2398   .bss.m2_deg:0000000000000000 $d
     /tmp/ccDBp1of.s:2404   .bss.m2_deg_10:0000000000000000 $d
     /tmp/ccDBp1of.s:2410   .bss.m2_deg_10_p:0000000000000000 $d
     /tmp/ccDBp1of.s:2416   .bss.m2_deg_1_10:0000000000000000 $d
     /tmp/ccDBp1of.s:2422   .bss.m2_hall:0000000000000000 $d
     /tmp/ccDBp1of.s:2428   .bss.m2_rev:0000000000000000 $d
     /tmp/ccDBp1of.s:2434   .bss.m2_rpm:0000000000000000 $d
     /tmp/ccDBp1of.s:2440   .bss.m2_rpm_p:0000000000000000 $d
     /tmp/ccDBp1of.s:2446   .bss.m2_rpm_p_10:0000000000000000 $d
     /tmp/ccDBp1of.s:2452   .bss.m_mode:0000000000000000 $d
     /tmp/ccDBp1of.s:2459   .bss.motor1:0000000000000000 $d
     /tmp/ccDBp1of.s:2466   .bss.motor2:0000000000000000 $d
     /tmp/ccDBp1of.s:2473   .bss.pwm_m:0000000000000000 $d
     /tmp/ccDBp1of.s:2480   .bss.pwm_p:0000000000000000 $d
     /tmp/ccDBp1of.s:2487   .bss.r_enc_op:0000000000000000 $d
     /tmp/ccDBp1of.s:2494   .data.Command_Request_Data:0000000000000000 $d
     /tmp/ccDBp1of.s:2501   .data.Command_Response1:0000000000000000 $d
     /tmp/ccDBp1of.s:2509   .data.Command_Response2:0000000000000000 $d
     /tmp/ccDBp1of.s:2517   .data.timeout:0000000000000000 $d
     /tmp/ccDBp1of.s:2524   .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccDBp1of.s:276    .text.RUN_DIR:0000000000000019 $d
     /tmp/ccDBp1of.s:276    .text.RUN_DIR:000000000000001a $t

UNDEFINED SYMBOLS
osThreadNew
printf
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
__aeabi_dcmple
__aeabi_dcmpge
__aeabi_d2iz
htim4
htim3
__aeabi_dcmplt
ARM GAS  /tmp/ccDBp1of.s 			page 75


__aeabi_dmul
__aeabi_ddiv
__aeabi_dadd
__aeabi_dsub
rmw_uros_set_custom_transport
rcutils_get_zero_initialized_allocator
rcutils_set_default_allocator
rcutils_get_default_allocator
rclc_support_init
rclc_node_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
rclc_publisher_init_default
rosidl_typesupport_c__get_message_type_support_handle__geometry_msgs__msg__Twist
rclc_subscription_init_default
rclc_executor_init
rclc_executor_add_subscription
cubemx_transport_read
cubemx_transport_write
cubemx_transport_close
cubemx_transport_open
huart3
microros_allocate
microros_deallocate
microros_reallocate
microros_zero_allocate
memset
rclc_executor_spin_some
osDelay
rcl_publish
HAL_UART_Transmit
HAL_UART_Receive
huart5
__aeabi_dcmpeq
__aeabi_dcmpgt
HAL_GPIO_TogglePin
strtol
