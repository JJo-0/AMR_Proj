ARM GAS  /tmp/ccj1n2cd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_FREERTOS_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_FREERTOS_Init:
  27              	.LFB142:
  28              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   *********************  *********************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** //#include <string.h>
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include <stdbool.h>
  30:Core/Src/freertos.c **** #include <rcl/rcl.h>
ARM GAS  /tmp/ccj1n2cd.s 			page 2


  31:Core/Src/freertos.c **** #include <rcl/error_handling.h>
  32:Core/Src/freertos.c **** #include <rclc/rclc.h>
  33:Core/Src/freertos.c **** #include <rclc/executor.h>
  34:Core/Src/freertos.c **** #include <uxr/client/transport.h>
  35:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  36:Core/Src/freertos.c **** #include <rmw_microros/rmw_microros.h>
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** #include <std_msgs/msg/int32.h>
  39:Core/Src/freertos.c **** #include <std_msgs/msg/u_int16.h>
  40:Core/Src/freertos.c **** #include <std_msgs/msg/string.h>
  41:Core/Src/freertos.c **** #include <geometry_msgs/msg/twist.h>
  42:Core/Src/freertos.c **** #include <geometry_msgs/msg/detail/twist__struct.h>
  43:Core/Src/freertos.c **** #include <nav_msgs/msg/odometry.h>
  44:Core/Src/freertos.c **** #include <std_msgs/msg/float32.h>
  45:Core/Src/freertos.c **** #include <std_msgs/msg/float64.h>
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** #include "usart.h"
  48:Core/Src/freertos.c **** #include "tim.h"
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** //#include "math.h"
  51:Core/Src/freertos.c **** #include <math.h>
  52:Core/Src/freertos.c **** #include <string.h>
  53:Core/Src/freertos.c **** #include <stdint.h>
  54:Core/Src/freertos.c **** /* USER CODE END Includes */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  57:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  58:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** typedef struct{
  61:Core/Src/freertos.c **** 	uint16_t state, current;
  62:Core/Src/freertos.c **** 	int16_t rpm;
  63:Core/Src/freertos.c **** 	int position, position_p, encoder, encoder_p;
  64:Core/Src/freertos.c **** } motor_packet;
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** /* USER CODE END PTD */
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  69:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** /* USER CODE END PD */
  72:Core/Src/freertos.c **** 
  73:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  74:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* USER CODE END PM */
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  79:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  80:Core/Src/freertos.c **** /*
  81:Core/Src/freertos.c **** char Run_State = 'B';
  82:Core/Src/freertos.c **** char Motor_State = 'T';
  83:Core/Src/freertos.c **** char Run_Dir = 'F';
  84:Core/Src/freertos.c **** */
  85:Core/Src/freertos.c **** 
  86:Core/Src/freertos.c **** #define _USE_MATH_DEFINES
  87:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 3


  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c **** #define DATA_SIZE 24
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c **** //uint8_t Command_Request_Data[20]= {0xb7,0xb8,0x01,0x0a,0x01,0x05,0x80};
  92:Core/Src/freertos.c **** //uint8_t Command_Request_Data[7]= {0xB7,0xB8,0x01,0x0A,0x01,0x05,0x80};
  93:Core/Src/freertos.c **** //uint8_t Command_Request_Data[7]= {0xB7,0xB8,0x01,0x0A,0x01,0x3D,0x48};
  94:Core/Src/freertos.c **** uint8_t Command_Request_Data[7]= {0xB7,0xB8,0x01,0x04,0x01,0xD2,0xB9};
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c **** uint8_t Command_Response1[50]="01234567890ABCDEF";//dummy
  97:Core/Src/freertos.c **** uint8_t Command_Response2[DATA_SIZE]="01234567890ABCDEF";//dummy
  98:Core/Src/freertos.c **** //uint8_t Command_Response2[23]="01234567890ABCDEF";//dummy
  99:Core/Src/freertos.c **** //uint8_t Command_Response2[25]="01234567890ABCDEF";//dummy
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** motor_packet motor1, motor2;
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c **** char Run_State;
 107:Core/Src/freertos.c **** char Motor_State;
 108:Core/Src/freertos.c **** char Run_Dir;
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** // ?��?��?��?? 각속?��?�� 모든 값을 �??��?�� ???��
 112:Core/Src/freertos.c **** float linear_velocity_x;
 113:Core/Src/freertos.c **** float linear_velocity_y;
 114:Core/Src/freertos.c **** float linear_velocity_z;
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c **** float angular_velocity_x;
 117:Core/Src/freertos.c **** float angular_velocity_y;
 118:Core/Src/freertos.c **** float angular_velocity_z;
 119:Core/Src/freertos.c **** 
 120:Core/Src/freertos.c **** int m1_hall=0, m2_hall=0;
 121:Core/Src/freertos.c **** 
 122:Core/Src/freertos.c **** int m1_rev=0, m2_rev=0;
 123:Core/Src/freertos.c **** int m1_deg=0, m2_deg=0;
 124:Core/Src/freertos.c **** int m1_deg_10=0, m2_deg_10=0;
 125:Core/Src/freertos.c **** int m1_deg_10_p=0, m2_deg_10_p=0;
 126:Core/Src/freertos.c **** int m1_deg_1_10=0, m2_deg_1_10=0;
 127:Core/Src/freertos.c **** int m1_rpm=0, m2_rpm=0;
 128:Core/Src/freertos.c **** int m1_rpm_p=0, m2_rpm_p=0;
 129:Core/Src/freertos.c **** int m1_rpm_p_10=0, m2_rpm_p_10=0;
 130:Core/Src/freertos.c **** 
 131:Core/Src/freertos.c **** //std_msgs__msg__Int32 msg;
 132:Core/Src/freertos.c **** int hall1 = 0, hall2 = 0;
 133:Core/Src/freertos.c **** 
 134:Core/Src/freertos.c **** int l_enc_op=0;
 135:Core/Src/freertos.c **** int r_enc_op=0;
 136:Core/Src/freertos.c **** 
 137:Core/Src/freertos.c **** typedef struct{
 138:Core/Src/freertos.c **** 	double vx, vy, vz;
 139:Core/Src/freertos.c **** } Twist_value;
 140:Core/Src/freertos.c **** /*
 141:Core/Src/freertos.c **** Twist_value Linear = {0, 0, 0};
 142:Core/Src/freertos.c **** Twist_value Angular = {0, 0, 0};*/
 143:Core/Src/freertos.c **** Twist_value Linear;
 144:Core/Src/freertos.c **** Twist_value Angular;
ARM GAS  /tmp/ccj1n2cd.s 			page 4


 145:Core/Src/freertos.c **** 
 146:Core/Src/freertos.c **** 
 147:Core/Src/freertos.c **** //int count_sec = 0;
 148:Core/Src/freertos.c **** //int turn_flag = 0;
 149:Core/Src/freertos.c **** int m_mode = 0; // 0: stop, 1: straight, 2: rotation mode
 150:Core/Src/freertos.c **** double pwm_p = 0;
 151:Core/Src/freertos.c **** double pwm_m = 0;
 152:Core/Src/freertos.c **** 
 153:Core/Src/freertos.c **** double angle;
 154:Core/Src/freertos.c **** 
 155:Core/Src/freertos.c **** int timeout = 10000000;
 156:Core/Src/freertos.c **** 
 157:Core/Src/freertos.c **** char enc_str1[100] = { 0 };
 158:Core/Src/freertos.c **** 
 159:Core/Src/freertos.c **** /* USER CODE END Variables */
 160:Core/Src/freertos.c **** /* Definitions for defaultTask */
 161:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
 162:Core/Src/freertos.c **** uint32_t defaultTaskBuffer[ 3000 ];
 163:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
 164:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
 165:Core/Src/freertos.c ****   .name = "defaultTask",
 166:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
 167:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
 168:Core/Src/freertos.c ****   .stack_mem = &defaultTaskBuffer[0],
 169:Core/Src/freertos.c ****   .stack_size = sizeof(defaultTaskBuffer),
 170:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
 171:Core/Src/freertos.c **** };
 172:Core/Src/freertos.c **** 
 173:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
 174:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 175:Core/Src/freertos.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
 176:Core/Src/freertos.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
 177:Core/Src/freertos.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
 178:Core/Src/freertos.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
 179:Core/Src/freertos.c **** 
 180:Core/Src/freertos.c **** void * microros_allocate(size_t size, void * state);
 181:Core/Src/freertos.c **** void microros_deallocate(void * pointer, void * state);
 182:Core/Src/freertos.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
 183:Core/Src/freertos.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
 184:Core/Src/freertos.c **** 
 185:Core/Src/freertos.c **** void messageCallback(const void *msgin);
 186:Core/Src/freertos.c **** void messageCallback_test1(const void *msgin);
 187:Core/Src/freertos.c **** void messageCallback_test2(const void *msgin);
 188:Core/Src/freertos.c **** void twist_subscription_callback(const void * msgin);
 189:Core/Src/freertos.c **** 
 190:Core/Src/freertos.c **** 
 191:Core/Src/freertos.c **** //my motor test functions
 192:Core/Src/freertos.c **** 
 193:Core/Src/freertos.c **** //int MOTION_MODE(double x, double y, double z);
 194:Core/Src/freertos.c **** 
 195:Core/Src/freertos.c **** void RUN_DIR(char);
 196:Core/Src/freertos.c **** 
 197:Core/Src/freertos.c **** void RUN_RB(char);
 198:Core/Src/freertos.c **** void MOTOR_SS(char);
 199:Core/Src/freertos.c **** 
 200:Core/Src/freertos.c **** double MOTOR_CAL_LINE_PWM(double,double,double);
 201:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 5


 202:Core/Src/freertos.c **** void PWM_L(double);
 203:Core/Src/freertos.c **** void PWM_R(double);
 204:Core/Src/freertos.c **** 
 205:Core/Src/freertos.c **** double CAL_LinearSpeed(double x, double y, double z);
 206:Core/Src/freertos.c **** double CAL_AngularSpeed(double x, double y, double z);
 207:Core/Src/freertos.c **** 
 208:Core/Src/freertos.c **** //void TURN(double);
 209:Core/Src/freertos.c **** 
 210:Core/Src/freertos.c **** double TURN(double ang);
 211:Core/Src/freertos.c **** //int MOTION_MODE(double, double, double);
 212:Core/Src/freertos.c **** //void MOTION_MODE(double, double, double);
 213:Core/Src/freertos.c **** void MOTION_MODE(double lx, double ly, double lz, double ax, double ay, double az);
 214:Core/Src/freertos.c **** 
 215:Core/Src/freertos.c **** 
 216:Core/Src/freertos.c **** int16_t hex_to_signed_int(const char *hex_str);
 217:Core/Src/freertos.c **** 
 218:Core/Src/freertos.c **** 
 219:Core/Src/freertos.c **** 
 220:Core/Src/freertos.c **** 
 221:Core/Src/freertos.c **** 
 222:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 223:Core/Src/freertos.c **** 
 224:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
 225:Core/Src/freertos.c **** 
 226:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 227:Core/Src/freertos.c **** 
 228:Core/Src/freertos.c **** /**
 229:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 230:Core/Src/freertos.c ****   * @param  None
 231:Core/Src/freertos.c ****   * @retval None
 232:Core/Src/freertos.c ****   */
 233:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  29              		.loc 1 233 29 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 234:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 235:Core/Src/freertos.c **** 
 236:Core/Src/freertos.c ****   /* USER CODE END Init */
 237:Core/Src/freertos.c **** 
 238:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 239:Core/Src/freertos.c ****   /* add mutexes, ... */
 240:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 241:Core/Src/freertos.c **** 
 242:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 243:Core/Src/freertos.c ****   /* add semaphores, ... */
 244:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 245:Core/Src/freertos.c **** 
 246:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 247:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 248:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 249:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 6


 250:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 251:Core/Src/freertos.c ****   /* add queues, ... */
 252:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 253:Core/Src/freertos.c **** 
 254:Core/Src/freertos.c ****   /* Create the thread(s) */
 255:Core/Src/freertos.c ****   /* creation of defaultTask */
 256:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
  38              		.loc 1 256 3 view .LVU1
  39              		.loc 1 256 23 is_stmt 0 view .LVU2
  40 0002 044A     		ldr	r2, .L3
  41 0004 0021     		movs	r1, #0
  42 0006 0448     		ldr	r0, .L3+4
  43 0008 FFF7FEFF 		bl	osThreadNew
  44              	.LVL0:
  45              		.loc 1 256 21 view .LVU3
  46 000c 034B     		ldr	r3, .L3+8
  47 000e 1860     		str	r0, [r3]
 257:Core/Src/freertos.c **** 
 258:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 259:Core/Src/freertos.c ****   /* add threads, ... */
 260:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 261:Core/Src/freertos.c **** 
 262:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 263:Core/Src/freertos.c ****   /* add events, ... */
 264:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 265:Core/Src/freertos.c **** 
 266:Core/Src/freertos.c **** }
  48              		.loc 1 266 1 view .LVU4
  49 0010 08BD     		pop	{r3, pc}
  50              	.L4:
  51 0012 00BF     		.align	2
  52              	.L3:
  53 0014 00000000 		.word	.LANCHOR0
  54 0018 00000000 		.word	StartDefaultTask
  55 001c 00000000 		.word	.LANCHOR1
  56              		.cfi_endproc
  57              	.LFE142:
  59              		.section	.rodata.messageCallback_test1.str1.4,"aMS",%progbits,1
  60              		.align	2
  61              	.LC0:
  62 0000 52656365 		.ascii	"Received: %d\012\000"
  62      69766564 
  62      3A202564 
  62      0A00
  63              		.section	.text.messageCallback_test1,"ax",%progbits
  64              		.align	1
  65              		.global	messageCallback_test1
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	messageCallback_test1:
  71              	.LVL1:
  72              	.LFB144:
 267:Core/Src/freertos.c **** 
 268:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 269:Core/Src/freertos.c **** /**
 270:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
ARM GAS  /tmp/ccj1n2cd.s 			page 7


 271:Core/Src/freertos.c ****   * @param  argument: Not used
 272:Core/Src/freertos.c ****   * @retval None
 273:Core/Src/freertos.c ****   */
 274:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 275:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 276:Core/Src/freertos.c **** {
 277:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 278:Core/Src/freertos.c ****   /* USER CODE BEGIN 5 */
 279:Core/Src/freertos.c **** 
 280:Core/Src/freertos.c ****   // micro-ROS configuration
 281:Core/Src/freertos.c **** 
 282:Core/Src/freertos.c ****   rmw_uros_set_custom_transport(
 283:Core/Src/freertos.c ****     true,
 284:Core/Src/freertos.c ****     (void *) &huart3,
 285:Core/Src/freertos.c ****     cubemx_transport_open,
 286:Core/Src/freertos.c ****     cubemx_transport_close,
 287:Core/Src/freertos.c ****     cubemx_transport_write,
 288:Core/Src/freertos.c ****     cubemx_transport_read);
 289:Core/Src/freertos.c **** 
 290:Core/Src/freertos.c ****   rcl_allocator_t freeRTOS_allocator = rcutils_get_zero_initialized_allocator();
 291:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 292:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 293:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 294:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 295:Core/Src/freertos.c **** 
 296:Core/Src/freertos.c ****   if (!rcutils_set_default_allocator(&freeRTOS_allocator)) {
 297:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 298:Core/Src/freertos.c ****   }
 299:Core/Src/freertos.c **** 
 300:Core/Src/freertos.c **** 
 301:Core/Src/freertos.c **** 	int length;
 302:Core/Src/freertos.c **** 	motor1.position_p = 0;
 303:Core/Src/freertos.c **** 	motor2.position_p = 0;
 304:Core/Src/freertos.c **** 
 305:Core/Src/freertos.c **** 
 306:Core/Src/freertos.c **** 
 307:Core/Src/freertos.c **** 
 308:Core/Src/freertos.c **** 
 309:Core/Src/freertos.c **** 
 310:Core/Src/freertos.c ****   // micro-ROS app
 311:Core/Src/freertos.c **** 
 312:Core/Src/freertos.c ****   rcl_publisher_t publisher;
 313:Core/Src/freertos.c ****   std_msgs__msg__Int32 msg;
 314:Core/Src/freertos.c **** //test
 315:Core/Src/freertos.c ****   rcl_publisher_t publisher_test;
 316:Core/Src/freertos.c ****   std_msgs__msg__Int32_test1 msg_test;
 317:Core/Src/freertos.c **** 
 318:Core/Src/freertos.c ****   rcl_subscription_t subscriber_test1;
 319:Core/Src/freertos.c ****   std_msgs__msg__Int32_test2 submsg_test1;
 320:Core/Src/freertos.c **** 
 321:Core/Src/freertos.c ****   rcl_subscription_t subscriber_test2;
 322:Core/Src/freertos.c ****   std_msgs__msg__Int32_test3 submsg_test2;
 323:Core/Src/freertos.c **** //
 324:Core/Src/freertos.c ****   rcl_publisher_t publisher_1;
 325:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_1;
 326:Core/Src/freertos.c **** 
 327:Core/Src/freertos.c ****   rcl_publisher_t publisher_2;
ARM GAS  /tmp/ccj1n2cd.s 			page 8


 328:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub2 pubmsg_2;
 329:Core/Src/freertos.c **** 
 330:Core/Src/freertos.c **** 
 331:Core/Src/freertos.c ****   rcl_publisher_t publisher_3;
 332:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_3;
 333:Core/Src/freertos.c **** 
 334:Core/Src/freertos.c **** 
 335:Core/Src/freertos.c ****   rcl_publisher_t publisher_str;
 336:Core/Src/freertos.c ****   std_msgs__msg__String_sub1 pubmsg_str;
 337:Core/Src/freertos.c **** 
 338:Core/Src/freertos.c **** 
 339:Core/Src/freertos.c ****   rcl_subscription_t subscriber_2;
 340:Core/Src/freertos.c **** //  std_msgs__msg__String_sub1 submsg_1;
 341:Core/Src/freertos.c ****   geometry_msgs__msg__Twist submsg_2;
 342:Core/Src/freertos.c **** //  geometry_msgs__msg__Twist * submsg_2_1;
 343:Core/Src/freertos.c **** 
 344:Core/Src/freertos.c ****   rclc_support_t support;
 345:Core/Src/freertos.c ****   rcl_allocator_t allocator;
 346:Core/Src/freertos.c ****   rcl_node_t node;
 347:Core/Src/freertos.c **** 
 348:Core/Src/freertos.c ****   allocator = rcl_get_default_allocator();
 349:Core/Src/freertos.c **** 
 350:Core/Src/freertos.c ****   //create init_options
 351:Core/Src/freertos.c ****   rclc_support_init(&support, 0, NULL, &allocator);
 352:Core/Src/freertos.c **** 
 353:Core/Src/freertos.c **** 
 354:Core/Src/freertos.c **** 
 355:Core/Src/freertos.c ****   // create node
 356:Core/Src/freertos.c ****   rclc_node_init_default(&node, "cubemx_node", "", &support);
 357:Core/Src/freertos.c **** 
 358:Core/Src/freertos.c ****   // create publisher example
 359:Core/Src/freertos.c ****   rclc_publisher_init_default(
 360:Core/Src/freertos.c ****     &publisher,
 361:Core/Src/freertos.c ****     &node,
 362:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 363:Core/Src/freertos.c ****     "cubemx_publisher");
 364:Core/Src/freertos.c **** 
 365:Core/Src/freertos.c **** 
 366:Core/Src/freertos.c ****   // create publisher_2
 367:Core/Src/freertos.c **** /*  rclc_publisher_init_default(
 368:Core/Src/freertos.c ****     &publisher_1,
 369:Core/Src/freertos.c ****     &node,
 370:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 371:Core/Src/freertos.c ****     "r_enc");
 372:Core/Src/freertos.c **** 
 373:Core/Src/freertos.c ****   	  // r_wheel_vel
 374:Core/Src/freertos.c ****   // create publisher_3
 375:Core/Src/freertos.c ****   rclc_publisher_init_default(
 376:Core/Src/freertos.c ****     &publisher_2,
 377:Core/Src/freertos.c ****     &node,
 378:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 379:Core/Src/freertos.c ****     "l_enc");
 380:Core/Src/freertos.c **** */
 381:Core/Src/freertos.c **** 
 382:Core/Src/freertos.c ****   // create publisher_3
 383:Core/Src/freertos.c ****   rclc_publisher_init_default(
 384:Core/Src/freertos.c ****     &publisher_3,
ARM GAS  /tmp/ccj1n2cd.s 			page 9


 385:Core/Src/freertos.c ****     &node,
 386:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 387:Core/Src/freertos.c ****     "enc");
 388:Core/Src/freertos.c **** 
 389:Core/Src/freertos.c ****   // create publisher_3
 390:Core/Src/freertos.c ****   rclc_publisher_init_default(
 391:Core/Src/freertos.c ****     &publisher_str,
 392:Core/Src/freertos.c ****     &node,
 393:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, String),
 394:Core/Src/freertos.c ****     "enc_str");
 395:Core/Src/freertos.c **** 
 396:Core/Src/freertos.c **** 
 397:Core/Src/freertos.c ****   	  //l_enc
 398:Core/Src/freertos.c ****   // create publisher_test
 399:Core/Src/freertos.c ****   rclc_publisher_init_default(
 400:Core/Src/freertos.c ****     &publisher_test,
 401:Core/Src/freertos.c ****     &node,
 402:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 403:Core/Src/freertos.c ****     "cubemx_publisher_test");
 404:Core/Src/freertos.c **** 
 405:Core/Src/freertos.c ****   // create subscriber_test1
 406:Core/Src/freertos.c ****   rclc_subscription_init_default(
 407:Core/Src/freertos.c ****       &subscriber_2,
 408:Core/Src/freertos.c ****       &node,
 409:Core/Src/freertos.c **** //      ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, twist),
 410:Core/Src/freertos.c **** //       ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, Twist),
 411:Core/Src/freertos.c **** //       "diffbot_base_controller/cmd_vel_unstamped");
 412:Core/Src/freertos.c ****   	  ROSIDL_GET_MSG_TYPE_SUPPORT(geometry_msgs, msg, Twist),
 413:Core/Src/freertos.c ****   	  "cmd_vel");
 414:Core/Src/freertos.c ****   // create subscriber_test2
 415:Core/Src/freertos.c **** /*  rclc_subscription_init_default(
 416:Core/Src/freertos.c ****       &subscriber_test2,
 417:Core/Src/freertos.c ****       &node,
 418:Core/Src/freertos.c ****       ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 419:Core/Src/freertos.c **** //	    "cubemx_publisher_test");
 420:Core/Src/freertos.c ****         "r_wheel_vel");*/
 421:Core/Src/freertos.c **** 
 422:Core/Src/freertos.c ****   // create subscriber
 423:Core/Src/freertos.c **** /*  rclc_subscription_init_default(
 424:Core/Src/freertos.c ****       &subscriber_1,
 425:Core/Src/freertos.c ****       &node,
 426:Core/Src/freertos.c ****       ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, String),
 427:Core/Src/freertos.c ****       "r_wheel_vel_String");*/
 428:Core/Src/freertos.c **** 
 429:Core/Src/freertos.c **** 
 430:Core/Src/freertos.c **** 
 431:Core/Src/freertos.c **** 
 432:Core/Src/freertos.c ****   // add subscriber to executor
 433:Core/Src/freertos.c ****   rclc_executor_t executor;
 434:Core/Src/freertos.c ****   rclc_executor_init(&executor, &support.context, 1, &allocator);
 435:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_1, &submsg_1, &messageCallback, ON_NEW_DA
 436:Core/Src/freertos.c **** 
 437:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_test1, &submsg_test1, &messageCallback_te
 438:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_1, &submsg_test2, &twist_subscription_cal
 439:Core/Src/freertos.c ****   rclc_executor_add_subscription(&executor, &subscriber_2, &submsg_2, &twist_subscription_callback,
 440:Core/Src/freertos.c **** 
 441:Core/Src/freertos.c ****   msg.data = 0;
ARM GAS  /tmp/ccj1n2cd.s 			page 10


 442:Core/Src/freertos.c ****   pubmsg_1.hall_1 = 0;
 443:Core/Src/freertos.c ****   pubmsg_2.hall_2 = 0;
 444:Core/Src/freertos.c **** 
 445:Core/Src/freertos.c **** 
 446:Core/Src/freertos.c **** //  RUN_INIT();
 447:Core/Src/freertos.c **** 
 448:Core/Src/freertos.c **** 
 449:Core/Src/freertos.c ****   for(;;)
 450:Core/Src/freertos.c ****   {
 451:Core/Src/freertos.c ****     // publish message
 452:Core/Src/freertos.c **** 
 453:Core/Src/freertos.c **** 
 454:Core/Src/freertos.c ****       // hall pulse count
 455:Core/Src/freertos.c **** 	  if(motor1.encoder > 500 && motor1.encoder < -500){
 456:Core/Src/freertos.c **** 		pubmsg_1.hall_1 = (int32_t)motor1.encoder_p;
 457:Core/Src/freertos.c **** 
 458:Core/Src/freertos.c **** 	  }
 459:Core/Src/freertos.c **** 	  else{
 460:Core/Src/freertos.c **** 		pubmsg_1.hall_1 = (int32_t)motor1.encoder;
 461:Core/Src/freertos.c **** 		motor1.encoder_p = motor1.encoder;
 462:Core/Src/freertos.c **** 	  }
 463:Core/Src/freertos.c **** 
 464:Core/Src/freertos.c **** 	  if(motor2.encoder > 500 && motor2.encoder < -500){
 465:Core/Src/freertos.c **** 		pubmsg_2.hall_2 = (int32_t)motor2.encoder_p;
 466:Core/Src/freertos.c **** 
 467:Core/Src/freertos.c **** 	  }
 468:Core/Src/freertos.c **** 	  else{
 469:Core/Src/freertos.c **** 		pubmsg_2.hall_2 = (int32_t)motor2.encoder;
 470:Core/Src/freertos.c **** 		motor2.encoder_p = motor2.encoder;
 471:Core/Src/freertos.c **** 	  }
 472:Core/Src/freertos.c **** 
 473:Core/Src/freertos.c **** 	  if(pubmsg_1.hall_1>=0){
 474:Core/Src/freertos.c **** 		  r_enc_op = 0;
 475:Core/Src/freertos.c **** 	  }
 476:Core/Src/freertos.c **** 	  else{
 477:Core/Src/freertos.c **** 		  r_enc_op = 1;
 478:Core/Src/freertos.c **** 	  }
 479:Core/Src/freertos.c **** 
 480:Core/Src/freertos.c **** 	  if(pubmsg_2.hall_2>=0){
 481:Core/Src/freertos.c **** 		  l_enc_op = 0;
 482:Core/Src/freertos.c **** 	  }
 483:Core/Src/freertos.c **** 	  else{
 484:Core/Src/freertos.c **** 		  l_enc_op = 10;
 485:Core/Src/freertos.c **** 	  }
 486:Core/Src/freertos.c **** 
 487:Core/Src/freertos.c **** 	  //	  pubmsg_3.hall_1 = pubmsg_1.hall_1 + 10000*pubmsg_2.hall_2;
 488:Core/Src/freertos.c **** 	  	  pubmsg_3.hall_1 = l_enc_op + r_enc_op + 100*abs(pubmsg_1.hall_1) + 10000*100*abs(pubmsg_2.hal
 489:Core/Src/freertos.c **** 
 490:Core/Src/freertos.c **** //		  	sprintf(enc_str1, "%d_%d", pubmsg_2.hall_2, pubmsg_1.hall_1);
 491:Core/Src/freertos.c **** 		  	sprintf(enc_str1, "%d_%d", -1 * motor2.position, motor1.position);
 492:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.data = enc_str1;
 493:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.size = strlen(enc_str1);
 494:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.capacity = sizeof(enc_str1);
 495:Core/Src/freertos.c **** 
 496:Core/Src/freertos.c **** 	  	strcpy(pubmsg_str.enc_str.data, enc_str1);
 497:Core/Src/freertos.c **** 
 498:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 11


 499:Core/Src/freertos.c **** /*		 rcl_ret_t ret_3 = rcl_publish(&publisher_2, &pubmsg_2, NULL);
 500:Core/Src/freertos.c **** 		 rcl_ret_t ret_2 = rcl_publish(&publisher_1, &pubmsg_1, NULL);*/
 501:Core/Src/freertos.c **** 
 502:Core/Src/freertos.c **** 		 rcl_ret_t ret_4 = rcl_publish(&publisher_3, &pubmsg_3, NULL);
 503:Core/Src/freertos.c **** 
 504:Core/Src/freertos.c **** 		 rcl_ret_t ret_str = rcl_publish(&publisher_str, &pubmsg_str, NULL);
 505:Core/Src/freertos.c **** 
 506:Core/Src/freertos.c **** /*	   if (ret_2 != RCL_RET_OK)
 507:Core/Src/freertos.c **** 	   {
 508:Core/Src/freertos.c **** 		 printf("Error publishing (line %d)\n", __LINE__);
 509:Core/Src/freertos.c **** 	   }
 510:Core/Src/freertos.c **** 	   if (ret_3 != RCL_RET_OK)
 511:Core/Src/freertos.c **** 	   {
 512:Core/Src/freertos.c **** 		 printf("Error publishing (line %d)\n", __LINE__);
 513:Core/Src/freertos.c **** 	   }*/
 514:Core/Src/freertos.c **** 
 515:Core/Src/freertos.c **** //    rcl_ret_t ret = rcl_publish(&publisher, &msg, NULL);
 516:Core/Src/freertos.c **** /*	 rcl_ret_t ret_3 = rcl_publish(&publisher_2, &pubmsg_2, NULL);
 517:Core/Src/freertos.c **** 	 rcl_ret_t ret_2 = rcl_publish(&publisher_1, &pubmsg_1, NULL);*/
 518:Core/Src/freertos.c **** //    rcl_ret_t ret = rcl_publish(&publisher, &msg, NULL);
 519:Core/Src/freertos.c ****     rcl_ret_t ret_test = rcl_publish(&publisher_test, &msg_test, NULL);
 520:Core/Src/freertos.c **** /*    if (ret != RCL_RET_OK)
 521:Core/Src/freertos.c ****     {
 522:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__); 
 523:Core/Src/freertos.c ****     }*/
 524:Core/Src/freertos.c ****     /*
 525:Core/Src/freertos.c ****     if (ret_2 != RCL_RET_OK)
 526:Core/Src/freertos.c ****     {
 527:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__);
 528:Core/Src/freertos.c ****     }
 529:Core/Src/freertos.c ****     if (ret_3 != RCL_RET_OK)
 530:Core/Src/freertos.c ****     {
 531:Core/Src/freertos.c ****       printf("Error publishing (line %d)\n", __LINE__);
 532:Core/Src/freertos.c ****     }*/
 533:Core/Src/freertos.c **** 
 534:Core/Src/freertos.c **** 
 535:Core/Src/freertos.c **** 	  // Transmit command to request data
 536:Core/Src/freertos.c **** 	  length = sizeof(Command_Request_Data);
 537:Core/Src/freertos.c **** 	  HAL_UART_Transmit(&huart5, Command_Request_Data, length, 10);
 538:Core/Src/freertos.c **** 
 539:Core/Src/freertos.c **** 
 540:Core/Src/freertos.c ****     length = DATA_SIZE;
 541:Core/Src/freertos.c **** //    if (HAL_UART_Receive(&huart5, Command_Response1, 50, 100) == HAL_OK) {
 542:Core/Src/freertos.c **** 
 543:Core/Src/freertos.c ****     	HAL_UART_Receive(&huart5, Command_Response1, 50, 500);
 544:Core/Src/freertos.c **** 
 545:Core/Src/freertos.c ****   	  for(int i = 0; i < 50-DATA_SIZE; i++){
 546:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 547:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 548:Core/Src/freertos.c **** 
 549:Core/Src/freertos.c ****     	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response1[
 550:Core/Src/freertos.c **** 
 551:Core/Src/freertos.c ****   	              // Copy received data to another buffer (for example purposes)
 552:Core/Src/freertos.c ****   	    		  for (int j = 0; j < DATA_SIZE; j++) {
 553:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 554:Core/Src/freertos.c ****   	    		          i++;
 555:Core/Src/freertos.c **** 					  }
ARM GAS  /tmp/ccj1n2cd.s 			page 12


 556:Core/Src/freertos.c **** 
 557:Core/Src/freertos.c **** 
 558:Core/Src/freertos.c ****   	    		  motor1.rpm = Command_Response2[5] | Command_Response2[6]<<8;
 559:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 560:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 561:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 562:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 563:Core/Src/freertos.c **** 
 564:Core/Src/freertos.c ****   	    		  motor2.rpm = Command_Response2[14] | Command_Response2[15]<<8;
 565:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 566:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 567:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 568:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 569:Core/Src/freertos.c ****   	    		  motor2.encoder = -(motor2.position - motor2.position_p);
 570:Core/Src/freertos.c **** 
 571:Core/Src/freertos.c **** 
 572:Core/Src/freertos.c ****       			  break;
 573:Core/Src/freertos.c ****       	    	  }
 574:Core/Src/freertos.c ****       		  }
 575:Core/Src/freertos.c ****       	  }
 576:Core/Src/freertos.c **** //        }
 577:Core/Src/freertos.c **** /*    else{
 578:Core/Src/freertos.c ****     	motor1.encoder = -1;
 579:Core/Src/freertos.c ****     	motor2.encoder = -1;
 580:Core/Src/freertos.c ****     }*/
 581:Core/Src/freertos.c **** 
 582:Core/Src/freertos.c **** 
 583:Core/Src/freertos.c ****     memset(Command_Response1, 0, sizeof(Command_Response1)); // 버퍼 초기화
 584:Core/Src/freertos.c ****     memset(Command_Response2, 0, sizeof(Command_Response2)); // 버퍼 초기화
 585:Core/Src/freertos.c **** 
 586:Core/Src/freertos.c **** 
 587:Core/Src/freertos.c **** 
 588:Core/Src/freertos.c **** 
 589:Core/Src/freertos.c **** 
 590:Core/Src/freertos.c **** 
 591:Core/Src/freertos.c **** 
 592:Core/Src/freertos.c **** 
 593:Core/Src/freertos.c **** 
 594:Core/Src/freertos.c **** 
 595:Core/Src/freertos.c **** 
 596:Core/Src/freertos.c ****     // subscribe message
 597:Core/Src/freertos.c **** //    rclc_executor_spin(&executor);
 598:Core/Src/freertos.c **** //    rclc_executor_spin_some(&executor, timeout);
 599:Core/Src/freertos.c **** //    rclc_executor_spin_one_period(&executor, timeout);
 600:Core/Src/freertos.c **** 
 601:Core/Src/freertos.c ****     /*      // hall pulse count
 602:Core/Src/freertos.c ****       	pubmsg_1.hall_1 = hall1;
 603:Core/Src/freertos.c ****       	pubmsg_2.hall_2 = hall2;
 604:Core/Src/freertos.c **** 
 605:Core/Src/freertos.c ****           // reset the hall sensor data
 606:Core/Src/freertos.c ****       	hall1 = 0;
 607:Core/Src/freertos.c ****       	hall2 = 0;*/
 608:Core/Src/freertos.c **** 
 609:Core/Src/freertos.c ****         // hall pulse count
 610:Core/Src/freertos.c **** /*    if(motor1.encoder > 500 && motor1.encoder < -500){
 611:Core/Src/freertos.c ****     	pubmsg_1.hall_1 = (int32_t)motor1.encoder_p;
 612:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 13


 613:Core/Src/freertos.c ****     }
 614:Core/Src/freertos.c ****     else{
 615:Core/Src/freertos.c ****     	pubmsg_1.hall_1 = (int32_t)motor1.encoder;
 616:Core/Src/freertos.c ****     	motor1.encoder_p = motor1.encoder;
 617:Core/Src/freertos.c ****     }
 618:Core/Src/freertos.c **** 
 619:Core/Src/freertos.c ****     if(motor2.encoder > 500 && motor2.encoder < -500){
 620:Core/Src/freertos.c ****     	pubmsg_2.hall_2 = (int32_t)motor2.encoder_p;
 621:Core/Src/freertos.c **** 
 622:Core/Src/freertos.c ****     }
 623:Core/Src/freertos.c ****     else{
 624:Core/Src/freertos.c ****     	pubmsg_2.hall_2 = (int32_t)motor2.encoder;
 625:Core/Src/freertos.c ****     	motor2.encoder_p = motor2.encoder;
 626:Core/Src/freertos.c ****     }
 627:Core/Src/freertos.c **** 
 628:Core/Src/freertos.c **** 
 629:Core/Src/freertos.c ****    	 rcl_ret_t ret_3 = rcl_publish(&publisher_2, &pubmsg_2, NULL);
 630:Core/Src/freertos.c ****    	 rcl_ret_t ret_2 = rcl_publish(&publisher_1, &pubmsg_1, NULL);
 631:Core/Src/freertos.c **** 
 632:Core/Src/freertos.c **** 
 633:Core/Src/freertos.c ****      if (ret_2 != RCL_RET_OK)
 634:Core/Src/freertos.c ****      {
 635:Core/Src/freertos.c ****        printf("Error publishing (line %d)\n", __LINE__);
 636:Core/Src/freertos.c ****      }
 637:Core/Src/freertos.c ****      if (ret_3 != RCL_RET_OK)
 638:Core/Src/freertos.c ****      {
 639:Core/Src/freertos.c ****        printf("Error publishing (line %d)\n", __LINE__);
 640:Core/Src/freertos.c ****      }*/
 641:Core/Src/freertos.c ****         // reset the hall sensor data
 642:Core/Src/freertos.c **** /*    	hall1 = 0;
 643:Core/Src/freertos.c ****     	hall2 = 0;*/
 644:Core/Src/freertos.c **** 
 645:Core/Src/freertos.c **** /*
 646:Core/Src/freertos.c **** 	Linear.vx = submsg_2_1->linear.x;
 647:Core/Src/freertos.c **** 	Linear.vy = submsg_2_1->linear.y;
 648:Core/Src/freertos.c **** 	Linear.vz = submsg_2_1->linear.z;*/
 649:Core/Src/freertos.c **** 
 650:Core/Src/freertos.c **** /*	Linear.vx = submsg_2.linear.x;
 651:Core/Src/freertos.c **** 	Linear.vy = submsg_2.linear.y;
 652:Core/Src/freertos.c **** 	Linear.vz = submsg_2.linear.z;*/
 653:Core/Src/freertos.c **** 
 654:Core/Src/freertos.c **** 	// move the robot.
 655:Core/Src/freertos.c **** //	MOTION_MODE(Linear.vx, Linear.vy, Linear.vz);
 656:Core/Src/freertos.c **** /*
 657:Core/Src/freertos.c **** 	if(m_mode == 0){
 658:Core/Src/freertos.c **** 		// robot stop
 659:Core/Src/freertos.c **** 		Run_State = 'B';
 660:Core/Src/freertos.c **** //		HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 661:Core/Src/freertos.c **** //		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, SET);	// Motor2 RUN/BRK - BRK
 662:Core/Src/freertos.c **** 	}
 663:Core/Src/freertos.c **** 	else if(m_mode == 1){
 664:Core/Src/freertos.c **** 		// robot move straight
 665:Core/Src/freertos.c **** 		if(Linear.vx >0){
 666:Core/Src/freertos.c **** 			Run_Dir = 'F';
 667:Core/Src/freertos.c **** 			Run_State = 'U';
 668:Core/Src/freertos.c **** 			PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 669:Core/Src/freertos.c **** 			PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
ARM GAS  /tmp/ccj1n2cd.s 			page 14


 670:Core/Src/freertos.c **** 		}
 671:Core/Src/freertos.c **** 		else if (Linear.vx < 0)
 672:Core/Src/freertos.c **** 		{
 673:Core/Src/freertos.c **** 			Run_Dir = 'O';
 674:Core/Src/freertos.c **** 			Run_State = 'U';
 675:Core/Src/freertos.c **** 			PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 676:Core/Src/freertos.c **** 			PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 677:Core/Src/freertos.c **** 		}
 678:Core/Src/freertos.c **** 
 679:Core/Src/freertos.c **** 
 680:Core/Src/freertos.c **** 
 681:Core/Src/freertos.c **** 	}
 682:Core/Src/freertos.c **** 	else if(m_mode == 2){
 683:Core/Src/freertos.c **** 		// robot move rotation
 684:Core/Src/freertos.c **** 		if(Linear.vx==0 && Linear.vy==0){
 685:Core/Src/freertos.c **** 			if(Angular.vz > 0){
 686:Core/Src/freertos.c **** 				Run_Dir = 'L';
 687:Core/Src/freertos.c **** 				Run_State = 'U';
 688:Core/Src/freertos.c **** 			}
 689:Core/Src/freertos.c **** 			else if(Angular.vz < 0){
 690:Core/Src/freertos.c **** 				Run_Dir = 'R';
 691:Core/Src/freertos.c **** 				Run_State = 'U';
 692:Core/Src/freertos.c **** 			}
 693:Core/Src/freertos.c **** 			PWM_R(TURN(Angular.vz));
 694:Core/Src/freertos.c **** 			PWM_L(TURN(Angular.vz));
 695:Core/Src/freertos.c **** 		}
 696:Core/Src/freertos.c **** */
 697:Core/Src/freertos.c **** /*
 698:Core/Src/freertos.c **** 	// 좌회전
 699:Core/Src/freertos.c **** 	if(m_mode == 1){
 700:Core/Src/freertos.c **** 		Run_State = 'U';
 701:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) + CAL_AngularSpeed(Angular.vx, Angular.vy,
 702:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy,
 703:Core/Src/freertos.c **** 	}
 704:Core/Src/freertos.c **** 	// 우회전
 705:Core/Src/freertos.c **** 	else if(m_mode == 2){
 706:Core/Src/freertos.c **** 		Run_State = 'U';
 707:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy,
 708:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) + CAL_AngularSpeed(Angular.vx, Angular.vy,
 709:Core/Src/freertos.c **** 	}
 710:Core/Src/freertos.c **** 	else {
 711:Core/Src/freertos.c **** 		// robot stop
 712:Core/Src/freertos.c **** 		Run_State = 'B';
 713:Core/Src/freertos.c **** 	}*/
 714:Core/Src/freertos.c **** 
 715:Core/Src/freertos.c **** 	pwm_p = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) + CAL_AngularSpeed(Angular.vx, Angular.vy
 716:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 717:Core/Src/freertos.c **** 
 718:Core/Src/freertos.c **** 	// 좌회전
 719:Core/Src/freertos.c **** 	if(m_mode == 0){
 720:Core/Src/freertos.c **** 		Run_State = 'B';
 721:Core/Src/freertos.c **** 		PWM_R(0);
 722:Core/Src/freertos.c **** 		PWM_L(0);
 723:Core/Src/freertos.c **** 	}
 724:Core/Src/freertos.c **** 	// 우회전
 725:Core/Src/freertos.c **** 	else if(m_mode == 1){
 726:Core/Src/freertos.c **** 		Run_State = 'U';
ARM GAS  /tmp/ccj1n2cd.s 			page 15


 727:Core/Src/freertos.c **** //		Run_Dir = 'F';
 728:Core/Src/freertos.c **** 
 729:Core/Src/freertos.c **** 		if(pwm_m<0){
 730:Core/Src/freertos.c **** 			Run_Dir = 'R';
 731:Core/Src/freertos.c **** 		}
 732:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 733:Core/Src/freertos.c **** 			Run_Dir = 'F';
 734:Core/Src/freertos.c **** 		}
 735:Core/Src/freertos.c **** 		PWM_R(fabs(pwm_m));
 736:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 737:Core/Src/freertos.c **** 	}
 738:Core/Src/freertos.c **** 	else if(m_mode == 2){
 739:Core/Src/freertos.c **** 		Run_State = 'U';
 740:Core/Src/freertos.c **** //		Run_Dir = 'F';
 741:Core/Src/freertos.c **** 		if(pwm_m<0){
 742:Core/Src/freertos.c **** 			Run_Dir = 'L';
 743:Core/Src/freertos.c **** 		}
 744:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 745:Core/Src/freertos.c **** 			Run_Dir = 'F';
 746:Core/Src/freertos.c **** 		}
 747:Core/Src/freertos.c **** 		PWM_R(pwm_p);
 748:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 749:Core/Src/freertos.c **** 	}
 750:Core/Src/freertos.c **** 	else if(m_mode == 3){
 751:Core/Src/freertos.c **** 		Run_State = 'U';
 752:Core/Src/freertos.c **** //		Run_Dir = 'O';
 753:Core/Src/freertos.c **** 		if(pwm_m<0){
 754:Core/Src/freertos.c **** 			Run_Dir = 'R';
 755:Core/Src/freertos.c **** 		}
 756:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 757:Core/Src/freertos.c **** 			Run_Dir = 'O';
 758:Core/Src/freertos.c **** 		}
 759:Core/Src/freertos.c **** 		PWM_R(pwm_p);
 760:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 761:Core/Src/freertos.c **** 	}
 762:Core/Src/freertos.c **** 	else if(m_mode == 4){
 763:Core/Src/freertos.c **** 		Run_State = 'U';
 764:Core/Src/freertos.c **** //		Run_Dir = 'O';
 765:Core/Src/freertos.c **** 		if(pwm_m<0){
 766:Core/Src/freertos.c **** 			Run_Dir = 'L';
 767:Core/Src/freertos.c **** 		}
 768:Core/Src/freertos.c **** 		else if(pwm_m>=0){
 769:Core/Src/freertos.c **** 			Run_Dir = 'O';
 770:Core/Src/freertos.c **** 		}
 771:Core/Src/freertos.c **** 		PWM_R(fabs(pwm_m));
 772:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 773:Core/Src/freertos.c **** 	}
 774:Core/Src/freertos.c **** 	else if(m_mode == 5){
 775:Core/Src/freertos.c **** 		Run_State = 'U';
 776:Core/Src/freertos.c **** 		Run_Dir = 'F';
 777:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 778:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 779:Core/Src/freertos.c **** 	}
 780:Core/Src/freertos.c **** 	else if(m_mode == 6){
 781:Core/Src/freertos.c **** 		Run_State = 'U';
 782:Core/Src/freertos.c **** 		Run_Dir = 'O';
 783:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
ARM GAS  /tmp/ccj1n2cd.s 			page 16


 784:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 785:Core/Src/freertos.c **** 	}
 786:Core/Src/freertos.c **** 
 787:Core/Src/freertos.c **** 
 788:Core/Src/freertos.c **** 
 789:Core/Src/freertos.c **** 
 790:Core/Src/freertos.c **** 
 791:Core/Src/freertos.c **** 
 792:Core/Src/freertos.c **** 
 793:Core/Src/freertos.c **** 
 794:Core/Src/freertos.c **** 		/*
 795:Core/Src/freertos.c **** 		angle = CAL_ANG(Linear.vx, Linear.vy, Linear.vz);
 796:Core/Src/freertos.c **** 		TURN(angle);*/
 797:Core/Src/freertos.c **** //	}
 798:Core/Src/freertos.c **** 
 799:Core/Src/freertos.c **** 	// Motor activate
 800:Core/Src/freertos.c **** //    RUN_DIR('F');
 801:Core/Src/freertos.c **** //    RUN_RB('U');
 802:Core/Src/freertos.c ****     RUN_RB(Run_State);
 803:Core/Src/freertos.c ****     MOTOR_SS(Motor_State);
 804:Core/Src/freertos.c ****     RUN_DIR(Run_Dir);
 805:Core/Src/freertos.c **** 
 806:Core/Src/freertos.c ****     rclc_executor_spin_some(&executor, timeout);
 807:Core/Src/freertos.c **** 
 808:Core/Src/freertos.c **** 
 809:Core/Src/freertos.c **** 	  motor1.position_p = motor1.position;
 810:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 811:Core/Src/freertos.c **** 
 812:Core/Src/freertos.c **** 
 813:Core/Src/freertos.c ****         osDelay(1-1);
 814:Core/Src/freertos.c ****       }
 815:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 816:Core/Src/freertos.c **** }
 817:Core/Src/freertos.c **** 
 818:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 819:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 820:Core/Src/freertos.c **** 
 821:Core/Src/freertos.c **** 	// 기본 ?��?��(default task) ?��?��?�� 구독 콜백 ?��?��
 822:Core/Src/freertos.c **** /*	void messageCallback(const void *msgin) {
 823:Core/Src/freertos.c **** 		const std_msgs__msg__String_sub1 *msg = (const std_msgs__msg__String_sub1 *)msgin;
 824:Core/Src/freertos.c **** 		printf("Received: %s\n", msg->dir_1);
 825:Core/Src/freertos.c **** 	}*/
 826:Core/Src/freertos.c **** 
 827:Core/Src/freertos.c **** 	void messageCallback_test1(const void *msgin) {
  73              		.loc 1 827 48 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 827 48 is_stmt 0 view .LVU6
  78 0000 08B5     		push	{r3, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
 828:Core/Src/freertos.c **** 		const std_msgs__msg__Int32_test2 *msg = (const std_msgs__msg__Int32_test2 *)msgin;
  83              		.loc 1 828 3 is_stmt 1 view .LVU7
  84              	.LVL2:
ARM GAS  /tmp/ccj1n2cd.s 			page 17


 829:Core/Src/freertos.c **** 		printf("Received: %d\n", msg->test_2);
  85              		.loc 1 829 3 view .LVU8
  86 0002 0168     		ldr	r1, [r0]
  87 0004 0148     		ldr	r0, .L7
  88              	.LVL3:
  89              		.loc 1 829 3 is_stmt 0 view .LVU9
  90 0006 FFF7FEFF 		bl	printf
  91              	.LVL4:
 830:Core/Src/freertos.c **** 	}
  92              		.loc 1 830 2 view .LVU10
  93 000a 08BD     		pop	{r3, pc}
  94              	.L8:
  95              		.align	2
  96              	.L7:
  97 000c 00000000 		.word	.LC0
  98              		.cfi_endproc
  99              	.LFE144:
 101              		.section	.text.messageCallback_test2,"ax",%progbits
 102              		.align	1
 103              		.global	messageCallback_test2
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	messageCallback_test2:
 109              	.LVL5:
 110              	.LFB145:
 831:Core/Src/freertos.c **** 
 832:Core/Src/freertos.c **** 	void messageCallback_test2(const void *msgin) {
 111              		.loc 1 832 48 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		.loc 1 832 48 is_stmt 0 view .LVU12
 116 0000 08B5     		push	{r3, lr}
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 3, -8
 120              		.cfi_offset 14, -4
 833:Core/Src/freertos.c **** 		const std_msgs__msg__Int32_test3 *msg = (const std_msgs__msg__Int32_test3 *)msgin;
 121              		.loc 1 833 3 is_stmt 1 view .LVU13
 122              	.LVL6:
 834:Core/Src/freertos.c **** 		printf("Received: %d\n", msg->test_3);
 123              		.loc 1 834 3 view .LVU14
 124 0002 0168     		ldr	r1, [r0]
 125 0004 0148     		ldr	r0, .L11
 126              	.LVL7:
 127              		.loc 1 834 3 is_stmt 0 view .LVU15
 128 0006 FFF7FEFF 		bl	printf
 129              	.LVL8:
 835:Core/Src/freertos.c **** 	}
 130              		.loc 1 835 2 view .LVU16
 131 000a 08BD     		pop	{r3, pc}
 132              	.L12:
 133              		.align	2
 134              	.L11:
 135 000c 00000000 		.word	.LC0
 136              		.cfi_endproc
ARM GAS  /tmp/ccj1n2cd.s 			page 18


 137              	.LFE145:
 139              		.section	.text.RUN_INIT,"ax",%progbits
 140              		.align	1
 141              		.global	RUN_INIT
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	RUN_INIT:
 147              	.LFB147:
 836:Core/Src/freertos.c **** 
 837:Core/Src/freertos.c **** 	void twist_subscription_callback(const void * msgin)
 838:Core/Src/freertos.c **** 	{
 839:Core/Src/freertos.c **** 	    const geometry_msgs__msg__Twist * msg = (const geometry_msgs__msg__Twist *)msgin;
 840:Core/Src/freertos.c **** 
 841:Core/Src/freertos.c **** 	    HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 842:Core/Src/freertos.c **** 
 843:Core/Src/freertos.c **** /*		Run_State = 'U';
 844:Core/Src/freertos.c **** 		Run_Dir = 'F';
 845:Core/Src/freertos.c **** 		Motor_State = 'T';*/
 846:Core/Src/freertos.c **** 
 847:Core/Src/freertos.c **** //    	m_mode = 1;
 848:Core/Src/freertos.c **** 
 849:Core/Src/freertos.c **** /*	    if(m_mode == 0){
 850:Core/Src/freertos.c **** 	    	m_mode = 1;
 851:Core/Src/freertos.c **** 	    }
 852:Core/Src/freertos.c **** 	    else{
 853:Core/Src/freertos.c **** 	    	m_mode =0;
 854:Core/Src/freertos.c **** 	    }*/
 855:Core/Src/freertos.c **** 
 856:Core/Src/freertos.c **** 	    // 선속도와 각속도의 모든 값을 변수에 저장
 857:Core/Src/freertos.c **** /*	    float linear_velocity_x = msg->linear.x;
 858:Core/Src/freertos.c **** 	    float linear_velocity_y = msg->linear.y;
 859:Core/Src/freertos.c **** 	    float linear_velocity_z = msg->linear.z;
 860:Core/Src/freertos.c **** 
 861:Core/Src/freertos.c **** 	    float angular_velocity_x = msg->angular.x;
 862:Core/Src/freertos.c **** 	    float angular_velocity_y = msg->angular.y;
 863:Core/Src/freertos.c **** 	    float angular_velocity_z = msg->angular.z;*/
 864:Core/Src/freertos.c **** 
 865:Core/Src/freertos.c **** 
 866:Core/Src/freertos.c **** /*		Linear.vx = submsg_2.linear.x;
 867:Core/Src/freertos.c **** 		Linear.vy = submsg_2.linear.y;
 868:Core/Src/freertos.c **** 		Linear.vz = submsg_2.linear.z;
 869:Core/Src/freertos.c **** 
 870:Core/Src/freertos.c **** 		Angular.vx = submsg_2.angular.x;
 871:Core/Src/freertos.c **** 		Angular.vy = submsg_2.angular.y;
 872:Core/Src/freertos.c **** 		Angular.vz = submsg_2.angular.z;*/
 873:Core/Src/freertos.c **** 
 874:Core/Src/freertos.c **** 	    // 선속도와 각속도의 모든 값을 변수에 저장
 875:Core/Src/freertos.c **** /*	    linear_velocity_x = msg->linear.x;
 876:Core/Src/freertos.c **** 	    linear_velocity_y = msg->linear.y;
 877:Core/Src/freertos.c **** 	    linear_velocity_z = msg->linear.z;
 878:Core/Src/freertos.c **** 
 879:Core/Src/freertos.c **** 	    angular_velocity_x = msg->angular.x;
 880:Core/Src/freertos.c **** 	    angular_velocity_y = msg->angular.y;
 881:Core/Src/freertos.c **** 	    angular_velocity_z = msg->angular.z;*/
 882:Core/Src/freertos.c **** 
 883:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 19


 884:Core/Src/freertos.c **** 		Linear.vx = msg->linear.x;
 885:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 886:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 887:Core/Src/freertos.c **** 
 888:Core/Src/freertos.c **** 		Angular.vx = msg->angular.x;
 889:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 890:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 891:Core/Src/freertos.c **** 
 892:Core/Src/freertos.c **** 		MOTION_MODE(Linear.vx, Linear.vy, Linear.vz, Angular.vx, Angular.vy, Angular.vz);
 893:Core/Src/freertos.c **** /*		if(Linear.vy != 0)	m_mode = 2;
 894:Core/Src/freertos.c **** 		else if(Linear.vy == 0){
 895:Core/Src/freertos.c **** 			if(Linear.vx == 0)	m_mode = 0;
 896:Core/Src/freertos.c **** 			else		m_mode = 1;
 897:Core/Src/freertos.c **** 		}*/
 898:Core/Src/freertos.c **** 
 899:Core/Src/freertos.c **** 
 900:Core/Src/freertos.c **** 
 901:Core/Src/freertos.c **** 
 902:Core/Src/freertos.c **** 	    // 저장된 값을 출력
 903:Core/Src/freertos.c **** /*	    printf("Received Twist - Linear Velocity (X: %f, Y: %f, Z: %f), Angular Velocity (X: %f, Y: 
 904:Core/Src/freertos.c **** 	           linear_velocity_x, linear_velocity_y, linear_velocity_z,
 905:Core/Src/freertos.c **** 	           angular_velocity_x, angular_velocity_y, angular_velocity_z);*/
 906:Core/Src/freertos.c **** 
 907:Core/Src/freertos.c **** 	    // MOTION_MODE 함수를 호출하여 m_mode 설정
 908:Core/Src/freertos.c **** //		m_mode = MOTION_MODE(linear_velocity_x, linear_velocity_y, linear_velocity_z);
 909:Core/Src/freertos.c **** //		MOTION_MODE(Linear.vx, Linear.vy, Linear.vz);
 910:Core/Src/freertos.c **** //		m_mode = MOTION_MODE(Linear.vx, Linear.vy, Linear.vz);
 911:Core/Src/freertos.c **** //		m_mode = 1;
 912:Core/Src/freertos.c **** 	}
 913:Core/Src/freertos.c **** 
 914:Core/Src/freertos.c **** 	// Motor function
 915:Core/Src/freertos.c **** 	void RUN_INIT(void){
 148              		.loc 1 915 21 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 916:Core/Src/freertos.c **** 		  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 157              		.loc 1 916 5 view .LVU18
 158 0002 0C4C     		ldr	r4, .L15
 159 0004 0122     		movs	r2, #1
 160 0006 4FF40051 		mov	r1, #8192
 161 000a 2046     		mov	r0, r4
 162 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 163              	.LVL9:
 917:Core/Src/freertos.c **** 		  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 164              		.loc 1 917 5 view .LVU19
 165 0010 0122     		movs	r2, #1
 166 0012 4FF48041 		mov	r1, #16384
 167 0016 2046     		mov	r0, r4
 168 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL10:
 918:Core/Src/freertos.c **** 	  	  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, SET);	// Motor2 RUN/BRK - BRK
ARM GAS  /tmp/ccj1n2cd.s 			page 20


 170              		.loc 1 918 7 view .LVU20
 171 001c 0122     		movs	r2, #1
 172 001e 8021     		movs	r1, #128
 173 0020 0548     		ldr	r0, .L15+4
 174 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL11:
 919:Core/Src/freertos.c **** 	  	  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, SET);	// Motor2 START/STOP - STOP
 176              		.loc 1 919 7 view .LVU21
 177 0026 0122     		movs	r2, #1
 178 0028 0821     		movs	r1, #8
 179 002a 0448     		ldr	r0, .L15+8
 180 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 181              	.LVL12:
 920:Core/Src/freertos.c **** 	}
 182              		.loc 1 920 2 is_stmt 0 view .LVU22
 183 0030 10BD     		pop	{r4, pc}
 184              	.L16:
 185 0032 00BF     		.align	2
 186              	.L15:
 187 0034 00140240 		.word	1073878016
 188 0038 000C0240 		.word	1073875968
 189 003c 00100240 		.word	1073876992
 190              		.cfi_endproc
 191              	.LFE147:
 193              		.section	.text.RUN_DIR,"ax",%progbits
 194              		.align	1
 195              		.global	RUN_DIR
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	RUN_DIR:
 201              	.LVL13:
 202              	.LFB148:
 921:Core/Src/freertos.c **** 
 922:Core/Src/freertos.c **** 
 923:Core/Src/freertos.c **** 	void RUN_DIR(char dir){
 203              		.loc 1 923 24 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		.loc 1 923 24 is_stmt 0 view .LVU24
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 924:Core/Src/freertos.c **** 
 925:Core/Src/freertos.c **** 		if(dir == 'F'){			// Front
 213              		.loc 1 925 3 is_stmt 1 view .LVU25
 214 0002 4638     		subs	r0, r0, #70
 215              	.LVL14:
 216              		.loc 1 925 3 is_stmt 0 view .LVU26
 217 0004 0C28     		cmp	r0, #12
 218 0006 14D8     		bhi	.L17
 219 0008 DFE800F0 		tbb	[pc, r0]
 220              	.L20:
 221 000c 07       		.byte	(.L23-.L20)/2
ARM GAS  /tmp/ccj1n2cd.s 			page 21


 222 000d 13       		.byte	(.L17-.L20)/2
 223 000e 13       		.byte	(.L17-.L20)/2
 224 000f 13       		.byte	(.L17-.L20)/2
 225 0010 13       		.byte	(.L17-.L20)/2
 226 0011 13       		.byte	(.L17-.L20)/2
 227 0012 21       		.byte	(.L22-.L20)/2
 228 0013 13       		.byte	(.L17-.L20)/2
 229 0014 13       		.byte	(.L17-.L20)/2
 230 0015 14       		.byte	(.L21-.L20)/2
 231 0016 13       		.byte	(.L17-.L20)/2
 232 0017 13       		.byte	(.L17-.L20)/2
 233 0018 2E       		.byte	(.L19-.L20)/2
 234 0019 00       		.p2align 1
 235              	.L23:
 926:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, SET);		// Motor1 DIR - CW
 236              		.loc 1 926 4 is_stmt 1 view .LVU27
 237 001a 1A4C     		ldr	r4, .L26
 238 001c 0122     		movs	r2, #1
 239 001e 4FF48051 		mov	r1, #4096
 240 0022 2046     		mov	r0, r4
 241 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL15:
 927:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, RESET);	// Motor2 DIR - CCW
 243              		.loc 1 927 7 view .LVU28
 244 0028 0022     		movs	r2, #0
 245 002a 0421     		movs	r1, #4
 246 002c 2046     		mov	r0, r4
 247 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL16:
 249              	.L17:
 928:Core/Src/freertos.c **** 		}
 929:Core/Src/freertos.c **** 		else if(dir == 'O'){	// Back
 930:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, RESET);		// Motor1 DIR - CCW
 931:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 932:Core/Src/freertos.c **** 		}
 933:Core/Src/freertos.c **** 		else if(dir == 'L'){	// Left
 934:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, SET);		// Motor1 DIR - CW
 935:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 936:Core/Src/freertos.c **** 		}
 937:Core/Src/freertos.c **** 		else if(dir == 'R'){	// Right
 938:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_12, RESET);		// Motor1 DIR - CCW
 939:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, RESET);	// Motor2 DIR - CCW
 940:Core/Src/freertos.c **** 		}
 941:Core/Src/freertos.c **** 	}
 250              		.loc 1 941 2 is_stmt 0 view .LVU29
 251 0032 10BD     		pop	{r4, pc}
 252              	.L21:
 930:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 253              		.loc 1 930 4 is_stmt 1 view .LVU30
 254 0034 134C     		ldr	r4, .L26
 255 0036 0022     		movs	r2, #0
 256 0038 4FF48051 		mov	r1, #4096
 257 003c 2046     		mov	r0, r4
 258 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 259              	.LVL17:
 931:Core/Src/freertos.c **** 		}
 260              		.loc 1 931 7 view .LVU31
ARM GAS  /tmp/ccj1n2cd.s 			page 22


 261 0042 0122     		movs	r2, #1
 262 0044 0421     		movs	r1, #4
 263 0046 2046     		mov	r0, r4
 264 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 265              	.LVL18:
 266 004c F1E7     		b	.L17
 267              	.L22:
 934:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, SET);	// Motor2 DIR - CW
 268              		.loc 1 934 4 view .LVU32
 269 004e 0D4C     		ldr	r4, .L26
 270 0050 0122     		movs	r2, #1
 271 0052 4FF48051 		mov	r1, #4096
 272 0056 2046     		mov	r0, r4
 273 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL19:
 935:Core/Src/freertos.c **** 		}
 275              		.loc 1 935 7 view .LVU33
 276 005c 0122     		movs	r2, #1
 277 005e 0421     		movs	r1, #4
 278 0060 2046     		mov	r0, r4
 279 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 280              	.LVL20:
 281 0066 E4E7     		b	.L17
 282              	.L19:
 938:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_2, RESET);	// Motor2 DIR - CCW
 283              		.loc 1 938 4 view .LVU34
 284 0068 064C     		ldr	r4, .L26
 285 006a 0022     		movs	r2, #0
 286 006c 4FF48051 		mov	r1, #4096
 287 0070 2046     		mov	r0, r4
 288 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 289              	.LVL21:
 939:Core/Src/freertos.c **** 		}
 290              		.loc 1 939 7 view .LVU35
 291 0076 0022     		movs	r2, #0
 292 0078 0421     		movs	r1, #4
 293 007a 2046     		mov	r0, r4
 294 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 295              	.LVL22:
 296              		.loc 1 941 2 is_stmt 0 view .LVU36
 297 0080 D7E7     		b	.L17
 298              	.L27:
 299 0082 00BF     		.align	2
 300              	.L26:
 301 0084 00140240 		.word	1073878016
 302              		.cfi_endproc
 303              	.LFE148:
 305              		.section	.text.RUN_RB,"ax",%progbits
 306              		.align	1
 307              		.global	RUN_RB
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	RUN_RB:
 313              	.LVL23:
 314              	.LFB149:
 942:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccj1n2cd.s 			page 23


 943:Core/Src/freertos.c **** 	void RUN_RB(char runstate){
 315              		.loc 1 943 28 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		.loc 1 943 28 is_stmt 0 view .LVU38
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI5:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 944:Core/Src/freertos.c **** 
 945:Core/Src/freertos.c **** 		if(runstate == 'U'){
 325              		.loc 1 945 3 is_stmt 1 view .LVU39
 326              		.loc 1 945 5 is_stmt 0 view .LVU40
 327 0002 5528     		cmp	r0, #85
 328 0004 02D0     		beq	.L32
 946:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, RESET);	// Motor1 RUN/BRK - RUN
 947:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, RESET);	// Motor2 RUN/BRK - RUN
 948:Core/Src/freertos.c **** 		}
 949:Core/Src/freertos.c **** 		else if(runstate == 'B'){
 329              		.loc 1 949 8 is_stmt 1 view .LVU41
 330              		.loc 1 949 10 is_stmt 0 view .LVU42
 331 0006 4228     		cmp	r0, #66
 332 0008 0CD0     		beq	.L33
 333              	.LVL24:
 334              	.L28:
 950:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 951:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, SET);	// Motor2 RUN/BRK - BRK
 952:Core/Src/freertos.c **** 		}
 953:Core/Src/freertos.c **** 	}
 335              		.loc 1 953 2 view .LVU43
 336 000a 08BD     		pop	{r3, pc}
 337              	.LVL25:
 338              	.L32:
 946:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, RESET);	// Motor1 RUN/BRK - RUN
 339              		.loc 1 946 4 is_stmt 1 view .LVU44
 340 000c 0022     		movs	r2, #0
 341 000e 4FF40051 		mov	r1, #8192
 342 0012 0A48     		ldr	r0, .L34
 343              	.LVL26:
 946:Core/Src/freertos.c **** 			HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, RESET);	// Motor1 RUN/BRK - RUN
 344              		.loc 1 946 4 is_stmt 0 view .LVU45
 345 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL27:
 947:Core/Src/freertos.c **** 		}
 347              		.loc 1 947 4 is_stmt 1 view .LVU46
 348 0018 0022     		movs	r2, #0
 349 001a 8021     		movs	r1, #128
 350 001c 0848     		ldr	r0, .L34+4
 351 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 352              	.LVL28:
 353 0022 F2E7     		b	.L28
 354              	.LVL29:
 355              	.L33:
 950:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 356              		.loc 1 950 8 view .LVU47
ARM GAS  /tmp/ccj1n2cd.s 			page 24


 357 0024 0122     		movs	r2, #1
 358 0026 4FF40051 		mov	r1, #8192
 359 002a 0448     		ldr	r0, .L34
 360              	.LVL30:
 950:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, SET);	// Motor1 RUN/BRK - BRK
 361              		.loc 1 950 8 is_stmt 0 view .LVU48
 362 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 363              	.LVL31:
 951:Core/Src/freertos.c **** 		}
 364              		.loc 1 951 8 is_stmt 1 view .LVU49
 365 0030 0122     		movs	r2, #1
 366 0032 8021     		movs	r1, #128
 367 0034 0248     		ldr	r0, .L34+4
 368 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 369              	.LVL32:
 370              		.loc 1 953 2 is_stmt 0 view .LVU50
 371 003a E6E7     		b	.L28
 372              	.L35:
 373              		.align	2
 374              	.L34:
 375 003c 00140240 		.word	1073878016
 376 0040 000C0240 		.word	1073875968
 377              		.cfi_endproc
 378              	.LFE149:
 380              		.section	.text.MOTOR_SS,"ax",%progbits
 381              		.align	1
 382              		.global	MOTOR_SS
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	MOTOR_SS:
 388              	.LVL33:
 389              	.LFB150:
 954:Core/Src/freertos.c **** 
 955:Core/Src/freertos.c **** 	void MOTOR_SS(char motorstate){
 390              		.loc 1 955 32 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		.loc 1 955 32 is_stmt 0 view .LVU52
 395 0000 08B5     		push	{r3, lr}
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 3, -8
 399              		.cfi_offset 14, -4
 956:Core/Src/freertos.c **** 
 957:Core/Src/freertos.c **** 		if(motorstate == 'T'){
 400              		.loc 1 957 3 is_stmt 1 view .LVU53
 401              		.loc 1 957 5 is_stmt 0 view .LVU54
 402 0002 5428     		cmp	r0, #84
 403 0004 02D0     		beq	.L40
 958:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, RESET);	// Motor1 START/STOP - START
 959:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, RESET);	// Motor2 START/STOP - START
 960:Core/Src/freertos.c **** 		}
 961:Core/Src/freertos.c **** 		else if(motorstate == 'P'){
 404              		.loc 1 961 8 is_stmt 1 view .LVU55
 405              		.loc 1 961 10 is_stmt 0 view .LVU56
ARM GAS  /tmp/ccj1n2cd.s 			page 25


 406 0006 5028     		cmp	r0, #80
 407 0008 0CD0     		beq	.L41
 408              	.LVL34:
 409              	.L36:
 962:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 963:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, SET);	// Motor2 START/STOP - STOP
 964:Core/Src/freertos.c **** 		}
 965:Core/Src/freertos.c **** 	}
 410              		.loc 1 965 2 view .LVU57
 411 000a 08BD     		pop	{r3, pc}
 412              	.LVL35:
 413              	.L40:
 958:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, RESET);	// Motor1 START/STOP - START
 414              		.loc 1 958 7 is_stmt 1 view .LVU58
 415 000c 0022     		movs	r2, #0
 416 000e 4FF48041 		mov	r1, #16384
 417 0012 0A48     		ldr	r0, .L42
 418              	.LVL36:
 958:Core/Src/freertos.c **** 		    HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, RESET);	// Motor1 START/STOP - START
 419              		.loc 1 958 7 is_stmt 0 view .LVU59
 420 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 421              	.LVL37:
 959:Core/Src/freertos.c **** 		}
 422              		.loc 1 959 7 is_stmt 1 view .LVU60
 423 0018 0022     		movs	r2, #0
 424 001a 0821     		movs	r1, #8
 425 001c 0848     		ldr	r0, .L42+4
 426 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 427              	.LVL38:
 428 0022 F2E7     		b	.L36
 429              	.LVL39:
 430              	.L41:
 962:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 431              		.loc 1 962 8 view .LVU61
 432 0024 0122     		movs	r2, #1
 433 0026 4FF48041 		mov	r1, #16384
 434 002a 0448     		ldr	r0, .L42
 435              	.LVL40:
 962:Core/Src/freertos.c **** 		  	  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_14, SET);	// Motor1 START/STOP - STOP
 436              		.loc 1 962 8 is_stmt 0 view .LVU62
 437 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 438              	.LVL41:
 963:Core/Src/freertos.c **** 		}
 439              		.loc 1 963 8 is_stmt 1 view .LVU63
 440 0030 0122     		movs	r2, #1
 441 0032 0821     		movs	r1, #8
 442 0034 0248     		ldr	r0, .L42+4
 443 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 444              	.LVL42:
 445              		.loc 1 965 2 is_stmt 0 view .LVU64
 446 003a E6E7     		b	.L36
 447              	.L43:
 448              		.align	2
 449              	.L42:
 450 003c 00140240 		.word	1073878016
 451 0040 00100240 		.word	1073876992
 452              		.cfi_endproc
ARM GAS  /tmp/ccj1n2cd.s 			page 26


 453              	.LFE150:
 455              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 456              		.align	1
 457              		.global	HAL_TIM_IC_CaptureCallback
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 462              	HAL_TIM_IC_CaptureCallback:
 463              	.LVL43:
 464              	.LFB151:
 966:Core/Src/freertos.c **** 
 967:Core/Src/freertos.c **** 	void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 968:Core/Src/freertos.c **** 	{
 465              		.loc 1 968 2 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		.loc 1 968 2 is_stmt 0 view .LVU66
 470 0000 10B5     		push	{r4, lr}
 471              	.LCFI7:
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 4, -8
 474              		.cfi_offset 14, -4
 475 0002 0446     		mov	r4, r0
 969:Core/Src/freertos.c **** 		if ( htim->Instance == TIM2){
 476              		.loc 1 969 3 is_stmt 1 view .LVU67
 477              		.loc 1 969 12 is_stmt 0 view .LVU68
 478 0004 0368     		ldr	r3, [r0]
 479              		.loc 1 969 6 view .LVU69
 480 0006 B3F1804F 		cmp	r3, #1073741824
 481 000a 04D0     		beq	.L50
 482              	.LVL44:
 483              	.L45:
 970:Core/Src/freertos.c **** 
 971:Core/Src/freertos.c **** 			// Motor1
 972:Core/Src/freertos.c **** 			if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 973:Core/Src/freertos.c **** 			{
 974:Core/Src/freertos.c **** 				// - CW
 975:Core/Src/freertos.c **** 				if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_12) == 1){
 976:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 977:Core/Src/freertos.c **** 				}
 978:Core/Src/freertos.c **** 				// - CCW
 979:Core/Src/freertos.c **** 				else if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_12) == 0){
 980:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 981:Core/Src/freertos.c **** 				}
 982:Core/Src/freertos.c **** 			}
 983:Core/Src/freertos.c **** 		}
 984:Core/Src/freertos.c **** 
 985:Core/Src/freertos.c **** 		if ( htim->Instance == TIM5){
 484              		.loc 1 985 3 is_stmt 1 view .LVU70
 485              		.loc 1 985 12 is_stmt 0 view .LVU71
 486 000c 2268     		ldr	r2, [r4]
 487              		.loc 1 985 6 view .LVU72
 488 000e 1C4B     		ldr	r3, .L52
 489 0010 9A42     		cmp	r2, r3
 490 0012 1BD0     		beq	.L51
 491              	.L44:
ARM GAS  /tmp/ccj1n2cd.s 			page 27


 986:Core/Src/freertos.c **** 
 987:Core/Src/freertos.c **** 					// Motor2
 988:Core/Src/freertos.c **** 			if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 989:Core/Src/freertos.c **** 			{
 990:Core/Src/freertos.c **** 				// - CW
 991:Core/Src/freertos.c **** 				if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 1){
 992:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 993:Core/Src/freertos.c **** 				}
 994:Core/Src/freertos.c **** 				// - CCW
 995:Core/Src/freertos.c **** 				else if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 0){
 996:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 997:Core/Src/freertos.c **** 				}
 998:Core/Src/freertos.c **** 			}
 999:Core/Src/freertos.c **** 		}
1000:Core/Src/freertos.c **** 
1001:Core/Src/freertos.c **** 
1002:Core/Src/freertos.c **** 
1003:Core/Src/freertos.c **** 
1004:Core/Src/freertos.c **** 
1005:Core/Src/freertos.c **** 
1006:Core/Src/freertos.c **** 	}
 492              		.loc 1 1006 2 view .LVU73
 493 0014 10BD     		pop	{r4, pc}
 494              	.LVL45:
 495              	.L50:
 972:Core/Src/freertos.c **** 			{
 496              		.loc 1 972 4 is_stmt 1 view .LVU74
 972:Core/Src/freertos.c **** 			{
 497              		.loc 1 972 11 is_stmt 0 view .LVU75
 498 0016 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 972:Core/Src/freertos.c **** 			{
 499              		.loc 1 972 6 view .LVU76
 500 0018 012B     		cmp	r3, #1
 501 001a F7D1     		bne	.L45
 975:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 502              		.loc 1 975 5 is_stmt 1 view .LVU77
 975:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 503              		.loc 1 975 8 is_stmt 0 view .LVU78
 504 001c 4FF48051 		mov	r1, #4096
 505 0020 1848     		ldr	r0, .L52+4
 506              	.LVL46:
 975:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 507              		.loc 1 975 8 view .LVU79
 508 0022 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 509              	.LVL47:
 975:Core/Src/freertos.c **** 					hall1 = hall1 + 1;
 510              		.loc 1 975 7 view .LVU80
 511 0026 0128     		cmp	r0, #1
 512 0028 04D1     		bne	.L46
 976:Core/Src/freertos.c **** 				}
 513              		.loc 1 976 6 is_stmt 1 view .LVU81
 976:Core/Src/freertos.c **** 				}
 514              		.loc 1 976 20 is_stmt 0 view .LVU82
 515 002a 174A     		ldr	r2, .L52+8
 516 002c 1368     		ldr	r3, [r2]
 517 002e 0133     		adds	r3, r3, #1
 976:Core/Src/freertos.c **** 				}
ARM GAS  /tmp/ccj1n2cd.s 			page 28


 518              		.loc 1 976 12 view .LVU83
 519 0030 1360     		str	r3, [r2]
 520 0032 EBE7     		b	.L45
 521              	.L46:
 979:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 522              		.loc 1 979 10 is_stmt 1 view .LVU84
 979:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 523              		.loc 1 979 13 is_stmt 0 view .LVU85
 524 0034 4FF48051 		mov	r1, #4096
 525 0038 1248     		ldr	r0, .L52+4
 526 003a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 527              	.LVL48:
 979:Core/Src/freertos.c **** 					hall1 = hall1 - 1;
 528              		.loc 1 979 12 view .LVU86
 529 003e 0028     		cmp	r0, #0
 530 0040 E4D1     		bne	.L45
 980:Core/Src/freertos.c **** 				}
 531              		.loc 1 980 6 is_stmt 1 view .LVU87
 980:Core/Src/freertos.c **** 				}
 532              		.loc 1 980 20 is_stmt 0 view .LVU88
 533 0042 114A     		ldr	r2, .L52+8
 534 0044 1368     		ldr	r3, [r2]
 535 0046 013B     		subs	r3, r3, #1
 980:Core/Src/freertos.c **** 				}
 536              		.loc 1 980 12 view .LVU89
 537 0048 1360     		str	r3, [r2]
 538 004a DFE7     		b	.L45
 539              	.L51:
 988:Core/Src/freertos.c **** 			{
 540              		.loc 1 988 4 is_stmt 1 view .LVU90
 988:Core/Src/freertos.c **** 			{
 541              		.loc 1 988 11 is_stmt 0 view .LVU91
 542 004c 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 988:Core/Src/freertos.c **** 			{
 543              		.loc 1 988 6 view .LVU92
 544 004e 012B     		cmp	r3, #1
 545 0050 E0D1     		bne	.L44
 991:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 546              		.loc 1 991 5 is_stmt 1 view .LVU93
 991:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 547              		.loc 1 991 8 is_stmt 0 view .LVU94
 548 0052 0421     		movs	r1, #4
 549 0054 0B48     		ldr	r0, .L52+4
 550 0056 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 551              	.LVL49:
 991:Core/Src/freertos.c **** 					hall2 = hall2 - 1;
 552              		.loc 1 991 7 view .LVU95
 553 005a 0128     		cmp	r0, #1
 554 005c 04D1     		bne	.L48
 992:Core/Src/freertos.c **** 				}
 555              		.loc 1 992 6 is_stmt 1 view .LVU96
 992:Core/Src/freertos.c **** 				}
 556              		.loc 1 992 20 is_stmt 0 view .LVU97
 557 005e 0B4A     		ldr	r2, .L52+12
 558 0060 1368     		ldr	r3, [r2]
 559 0062 013B     		subs	r3, r3, #1
 992:Core/Src/freertos.c **** 				}
ARM GAS  /tmp/ccj1n2cd.s 			page 29


 560              		.loc 1 992 12 view .LVU98
 561 0064 1360     		str	r3, [r2]
 562 0066 D5E7     		b	.L44
 563              	.L48:
 995:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 564              		.loc 1 995 10 is_stmt 1 view .LVU99
 995:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 565              		.loc 1 995 13 is_stmt 0 view .LVU100
 566 0068 0421     		movs	r1, #4
 567 006a 0648     		ldr	r0, .L52+4
 568 006c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 569              	.LVL50:
 995:Core/Src/freertos.c **** 					hall2 = hall2 + 1;
 570              		.loc 1 995 12 view .LVU101
 571 0070 0028     		cmp	r0, #0
 572 0072 CFD1     		bne	.L44
 996:Core/Src/freertos.c **** 				}
 573              		.loc 1 996 6 is_stmt 1 view .LVU102
 996:Core/Src/freertos.c **** 				}
 574              		.loc 1 996 20 is_stmt 0 view .LVU103
 575 0074 054A     		ldr	r2, .L52+12
 576 0076 1368     		ldr	r3, [r2]
 577 0078 0133     		adds	r3, r3, #1
 996:Core/Src/freertos.c **** 				}
 578              		.loc 1 996 12 view .LVU104
 579 007a 1360     		str	r3, [r2]
 580              		.loc 1 1006 2 view .LVU105
 581 007c CAE7     		b	.L44
 582              	.L53:
 583 007e 00BF     		.align	2
 584              	.L52:
 585 0080 000C0040 		.word	1073744896
 586 0084 00140240 		.word	1073878016
 587 0088 00000000 		.word	.LANCHOR2
 588 008c 00000000 		.word	.LANCHOR3
 589              		.cfi_endproc
 590              	.LFE151:
 592              		.global	__aeabi_dcmple
 593              		.global	__aeabi_dcmpge
 594              		.global	__aeabi_d2iz
 595              		.section	.text.PWM_R,"ax",%progbits
 596              		.align	1
 597              		.global	PWM_R
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 602              	PWM_R:
 603              	.LVL51:
 604              	.LFB152:
1007:Core/Src/freertos.c **** 
1008:Core/Src/freertos.c **** /*	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1009:Core/Src/freertos.c **** 	{
1010:Core/Src/freertos.c **** 		if( htim->Instance == TIM3 ){
1011:Core/Src/freertos.c **** 			if(turn_flag == 1){
1012:Core/Src/freertos.c **** 				count_sec++;
1013:Core/Src/freertos.c **** 			}
1014:Core/Src/freertos.c **** 		}
ARM GAS  /tmp/ccj1n2cd.s 			page 30


1015:Core/Src/freertos.c **** */
1016:Core/Src/freertos.c **** 
1017:Core/Src/freertos.c **** 	void PWM_R(double duty){
 605              		.loc 1 1017 25 is_stmt 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		.loc 1 1017 25 is_stmt 0 view .LVU107
 610 0000 38B5     		push	{r3, r4, r5, lr}
 611              	.LCFI8:
 612              		.cfi_def_cfa_offset 16
 613              		.cfi_offset 3, -16
 614              		.cfi_offset 4, -12
 615              		.cfi_offset 5, -8
 616              		.cfi_offset 14, -4
 617 0002 55EC104B 		vmov	r4, r5, d0
1018:Core/Src/freertos.c **** 		if(duty<=0){
 618              		.loc 1 1018 3 is_stmt 1 view .LVU108
 619              		.loc 1 1018 5 is_stmt 0 view .LVU109
 620 0006 0022     		movs	r2, #0
 621 0008 0023     		movs	r3, #0
 622 000a 10EE100A 		vmov	r0, s0	@ int
 623 000e 2946     		mov	r1, r5
 624 0010 FFF7FEFF 		bl	__aeabi_dcmple
 625              	.LVL52:
 626              		.loc 1 1018 5 view .LVU110
 627 0014 48B9     		cbnz	r0, .L56
1019:Core/Src/freertos.c **** 			duty = 0;
1020:Core/Src/freertos.c **** 		}
1021:Core/Src/freertos.c **** 		else if(duty>=100){
 628              		.loc 1 1021 8 is_stmt 1 view .LVU111
 629              		.loc 1 1021 10 is_stmt 0 view .LVU112
 630 0016 0022     		movs	r2, #0
 631 0018 094B     		ldr	r3, .L59
 632 001a 2046     		mov	r0, r4
 633 001c 2946     		mov	r1, r5
 634 001e FFF7FEFF 		bl	__aeabi_dcmpge
 635              	.LVL53:
 636 0022 20B1     		cbz	r0, .L55
1022:Core/Src/freertos.c **** 			duty = 100;
 637              		.loc 1 1022 9 view .LVU113
 638 0024 0024     		movs	r4, #0
 639              	.LVL54:
 640              		.loc 1 1022 9 view .LVU114
 641 0026 064D     		ldr	r5, .L59
 642 0028 01E0     		b	.L55
 643              	.LVL55:
 644              	.L56:
1019:Core/Src/freertos.c **** 			duty = 0;
 645              		.loc 1 1019 9 view .LVU115
 646 002a 0024     		movs	r4, #0
 647              	.LVL56:
1019:Core/Src/freertos.c **** 			duty = 0;
 648              		.loc 1 1019 9 view .LVU116
 649 002c 0025     		movs	r5, #0
 650              	.L55:
 651              	.LVL57:
ARM GAS  /tmp/ccj1n2cd.s 			page 31


1023:Core/Src/freertos.c **** 		}
1024:Core/Src/freertos.c **** 		__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, (int)duty-1);
 652              		.loc 1 1024 3 is_stmt 1 view .LVU117
 653 002e 2046     		mov	r0, r4
 654 0030 2946     		mov	r1, r5
 655 0032 FFF7FEFF 		bl	__aeabi_d2iz
 656              	.LVL58:
 657 0036 034B     		ldr	r3, .L59+4
 658 0038 1B68     		ldr	r3, [r3]
 659 003a 0138     		subs	r0, r0, #1
 660 003c 5863     		str	r0, [r3, #52]
1025:Core/Src/freertos.c **** 	}
 661              		.loc 1 1025 2 is_stmt 0 view .LVU118
 662 003e 38BD     		pop	{r3, r4, r5, pc}
 663              	.LVL59:
 664              	.L60:
 665              		.loc 1 1025 2 view .LVU119
 666              		.align	2
 667              	.L59:
 668 0040 00005940 		.word	1079574528
 669 0044 00000000 		.word	htim4
 670              		.cfi_endproc
 671              	.LFE152:
 673              		.section	.text.PWM_L,"ax",%progbits
 674              		.align	1
 675              		.global	PWM_L
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 680              	PWM_L:
 681              	.LVL60:
 682              	.LFB153:
1026:Core/Src/freertos.c **** 	void PWM_L(double duty){
 683              		.loc 1 1026 25 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		.loc 1 1026 25 is_stmt 0 view .LVU121
 688 0000 38B5     		push	{r3, r4, r5, lr}
 689              	.LCFI9:
 690              		.cfi_def_cfa_offset 16
 691              		.cfi_offset 3, -16
 692              		.cfi_offset 4, -12
 693              		.cfi_offset 5, -8
 694              		.cfi_offset 14, -4
 695 0002 55EC104B 		vmov	r4, r5, d0
1027:Core/Src/freertos.c **** 		if(duty<=0){
 696              		.loc 1 1027 3 is_stmt 1 view .LVU122
 697              		.loc 1 1027 5 is_stmt 0 view .LVU123
 698 0006 0022     		movs	r2, #0
 699 0008 0023     		movs	r3, #0
 700 000a 10EE100A 		vmov	r0, s0	@ int
 701 000e 2946     		mov	r1, r5
 702 0010 FFF7FEFF 		bl	__aeabi_dcmple
 703              	.LVL61:
 704              		.loc 1 1027 5 view .LVU124
 705 0014 48B9     		cbnz	r0, .L63
ARM GAS  /tmp/ccj1n2cd.s 			page 32


1028:Core/Src/freertos.c **** 			duty = 0;
1029:Core/Src/freertos.c **** 		}
1030:Core/Src/freertos.c **** 		else if(duty>=100){
 706              		.loc 1 1030 8 is_stmt 1 view .LVU125
 707              		.loc 1 1030 10 is_stmt 0 view .LVU126
 708 0016 0022     		movs	r2, #0
 709 0018 094B     		ldr	r3, .L66
 710 001a 2046     		mov	r0, r4
 711 001c 2946     		mov	r1, r5
 712 001e FFF7FEFF 		bl	__aeabi_dcmpge
 713              	.LVL62:
 714 0022 20B1     		cbz	r0, .L62
1031:Core/Src/freertos.c **** 			duty = 100;
 715              		.loc 1 1031 9 view .LVU127
 716 0024 0024     		movs	r4, #0
 717              	.LVL63:
 718              		.loc 1 1031 9 view .LVU128
 719 0026 064D     		ldr	r5, .L66
 720 0028 01E0     		b	.L62
 721              	.LVL64:
 722              	.L63:
1028:Core/Src/freertos.c **** 			duty = 0;
 723              		.loc 1 1028 9 view .LVU129
 724 002a 0024     		movs	r4, #0
 725              	.LVL65:
1028:Core/Src/freertos.c **** 			duty = 0;
 726              		.loc 1 1028 9 view .LVU130
 727 002c 0025     		movs	r5, #0
 728              	.L62:
 729              	.LVL66:
1032:Core/Src/freertos.c **** 		}
1033:Core/Src/freertos.c **** 		__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, (int)duty-1);
 730              		.loc 1 1033 3 is_stmt 1 view .LVU131
 731 002e 2046     		mov	r0, r4
 732 0030 2946     		mov	r1, r5
 733 0032 FFF7FEFF 		bl	__aeabi_d2iz
 734              	.LVL67:
 735 0036 034B     		ldr	r3, .L66+4
 736 0038 1B68     		ldr	r3, [r3]
 737 003a 0138     		subs	r0, r0, #1
 738 003c 5863     		str	r0, [r3, #52]
1034:Core/Src/freertos.c **** 	}
 739              		.loc 1 1034 2 is_stmt 0 view .LVU132
 740 003e 38BD     		pop	{r3, r4, r5, pc}
 741              	.LVL68:
 742              	.L67:
 743              		.loc 1 1034 2 view .LVU133
 744              		.align	2
 745              	.L66:
 746 0040 00005940 		.word	1079574528
 747 0044 00000000 		.word	htim3
 748              		.cfi_endproc
 749              	.LFE153:
 751              		.global	__aeabi_dcmplt
 752              		.global	__aeabi_dmul
 753              		.section	.text.CAL_LinearSpeed,"ax",%progbits
 754              		.align	1
ARM GAS  /tmp/ccj1n2cd.s 			page 33


 755              		.global	CAL_LinearSpeed
 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
 760              	CAL_LinearSpeed:
 761              	.LVL69:
 762              	.LFB154:
1035:Core/Src/freertos.c **** 
1036:Core/Src/freertos.c **** 	// Calculate the final speed.
1037:Core/Src/freertos.c **** 	double CAL_LinearSpeed(double x, double y, double z)
1038:Core/Src/freertos.c **** 	{
 763              		.loc 1 1038 2 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		.loc 1 1038 2 is_stmt 0 view .LVU135
 768 0000 38B5     		push	{r3, r4, r5, lr}
 769              	.LCFI10:
 770              		.cfi_def_cfa_offset 16
 771              		.cfi_offset 3, -16
 772              		.cfi_offset 4, -12
 773              		.cfi_offset 5, -8
 774              		.cfi_offset 14, -4
 775 0002 55EC104B 		vmov	r4, r5, d0
1039:Core/Src/freertos.c **** 		double distance = 0;
 776              		.loc 1 1039 3 is_stmt 1 view .LVU136
 777              	.LVL70:
1040:Core/Src/freertos.c **** 		double duty_percent = 0;
 778              		.loc 1 1040 3 view .LVU137
1041:Core/Src/freertos.c **** 
1042:Core/Src/freertos.c **** 		if(x < 0){
 779              		.loc 1 1042 3 view .LVU138
 780              		.loc 1 1042 5 is_stmt 0 view .LVU139
 781 0006 0022     		movs	r2, #0
 782 0008 0023     		movs	r3, #0
 783 000a 10EE100A 		vmov	r0, s0	@ int
 784 000e 2946     		mov	r1, r5
 785 0010 FFF7FEFF 		bl	__aeabi_dcmplt
 786              	.LVL71:
 787              		.loc 1 1042 5 view .LVU140
 788 0014 48B9     		cbnz	r0, .L73
 789              	.LVL72:
 790              	.L69:
1043:Core/Src/freertos.c **** 			distance = -x;
1044:Core/Src/freertos.c **** 		}
1045:Core/Src/freertos.c **** 		else{
1046:Core/Src/freertos.c **** 			distance = x;
1047:Core/Src/freertos.c **** 		}
1048:Core/Src/freertos.c **** 
1049:Core/Src/freertos.c **** 		duty_percent = distance * (20.0/(0.0965*M_PI));
 791              		.loc 1 1049 3 is_stmt 1 view .LVU141
 792              		.loc 1 1049 16 is_stmt 0 view .LVU142
 793 0016 08A3     		adr	r3, .L74
 794 0018 D3E90023 		ldrd	r2, [r3]
 795 001c 2046     		mov	r0, r4
 796 001e 2946     		mov	r1, r5
 797 0020 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccj1n2cd.s 			page 34


 798              	.LVL73:
1050:Core/Src/freertos.c **** 
1051:Core/Src/freertos.c **** 		return duty_percent;
 799              		.loc 1 1051 3 is_stmt 1 view .LVU143
1052:Core/Src/freertos.c **** 	}
 800              		.loc 1 1052 2 is_stmt 0 view .LVU144
 801 0024 41EC100B 		vmov	d0, r0, r1
 802 0028 38BD     		pop	{r3, r4, r5, pc}
 803              	.LVL74:
 804              	.L73:
1043:Core/Src/freertos.c **** 			distance = -x;
 805              		.loc 1 1043 4 is_stmt 1 view .LVU145
1043:Core/Src/freertos.c **** 			distance = -x;
 806              		.loc 1 1043 13 is_stmt 0 view .LVU146
 807 002a 05F10043 		add	r3, r5, #-2147483648
 808 002e 1D46     		mov	r5, r3
 809              	.LVL75:
1043:Core/Src/freertos.c **** 			distance = -x;
 810              		.loc 1 1043 13 view .LVU147
 811 0030 F1E7     		b	.L69
 812              	.L75:
 813 0032 00BFAFF3 		.align	3
 813      0080
 814              	.L74:
 815 0038 DE7A0C39 		.word	957119198
 816 003c 247E5040 		.word	1079016996
 817              		.cfi_endproc
 818              	.LFE154:
 820              		.global	__aeabi_ddiv
 821              		.section	.text.CAL_AngularSpeed,"ax",%progbits
 822              		.align	1
 823              		.global	CAL_AngularSpeed
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	CAL_AngularSpeed:
 829              	.LVL76:
 830              	.LFB155:
1053:Core/Src/freertos.c **** 
1054:Core/Src/freertos.c **** 	// Calculate the angle at which the robot should turn.
1055:Core/Src/freertos.c **** 
1056:Core/Src/freertos.c **** 	double CAL_AngularSpeed(double x, double y, double z)
1057:Core/Src/freertos.c **** 	{
 831              		.loc 1 1057 2 is_stmt 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		.loc 1 1057 2 is_stmt 0 view .LVU149
 836 0000 38B5     		push	{r3, r4, r5, lr}
 837              	.LCFI11:
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 3, -16
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843 0002 55EC124B 		vmov	r4, r5, d2
1058:Core/Src/freertos.c **** 		double wheel_pwm = 0;
ARM GAS  /tmp/ccj1n2cd.s 			page 35


 844              		.loc 1 1058 3 is_stmt 1 view .LVU150
 845              	.LVL77:
1059:Core/Src/freertos.c **** 		double angular = 0;
 846              		.loc 1 1059 3 view .LVU151
1060:Core/Src/freertos.c **** 
1061:Core/Src/freertos.c **** 		if(z < 0){
 847              		.loc 1 1061 3 view .LVU152
 848              		.loc 1 1061 5 is_stmt 0 view .LVU153
 849 0006 0022     		movs	r2, #0
 850 0008 0023     		movs	r3, #0
 851 000a 12EE100A 		vmov	r0, s4	@ int
 852 000e 2946     		mov	r1, r5
 853 0010 FFF7FEFF 		bl	__aeabi_dcmplt
 854              	.LVL78:
 855              		.loc 1 1061 5 view .LVU154
 856 0014 68B9     		cbnz	r0, .L81
 857              	.LVL79:
 858              	.L77:
1062:Core/Src/freertos.c **** 					angular = -z;
1063:Core/Src/freertos.c **** 				}
1064:Core/Src/freertos.c **** 		else{
1065:Core/Src/freertos.c **** 			angular = z;
1066:Core/Src/freertos.c **** 		}
1067:Core/Src/freertos.c **** 
1068:Core/Src/freertos.c **** 		wheel_pwm = (100*0.38*angular)/(5*M_PI*0.0965*2);
 859              		.loc 1 1068 3 is_stmt 1 view .LVU155
 860              		.loc 1 1068 24 is_stmt 0 view .LVU156
 861 0016 0022     		movs	r2, #0
 862 0018 0B4B     		ldr	r3, .L82+8
 863 001a 2046     		mov	r0, r4
 864 001c 2946     		mov	r1, r5
 865 001e FFF7FEFF 		bl	__aeabi_dmul
 866              	.LVL80:
 867              		.loc 1 1068 13 view .LVU157
 868 0022 07A3     		adr	r3, .L82
 869 0024 D3E90023 		ldrd	r2, [r3]
 870 0028 FFF7FEFF 		bl	__aeabi_ddiv
 871              	.LVL81:
1069:Core/Src/freertos.c **** 
1070:Core/Src/freertos.c **** 		return wheel_pwm;
 872              		.loc 1 1070 3 is_stmt 1 view .LVU158
1071:Core/Src/freertos.c **** 	}
 873              		.loc 1 1071 2 is_stmt 0 view .LVU159
 874 002c 41EC100B 		vmov	d0, r0, r1
 875 0030 38BD     		pop	{r3, r4, r5, pc}
 876              	.LVL82:
 877              	.L81:
1062:Core/Src/freertos.c **** 					angular = -z;
 878              		.loc 1 1062 6 is_stmt 1 view .LVU160
1062:Core/Src/freertos.c **** 					angular = -z;
 879              		.loc 1 1062 14 is_stmt 0 view .LVU161
 880 0032 05F10043 		add	r3, r5, #-2147483648
 881 0036 1D46     		mov	r5, r3
 882              	.LVL83:
1062:Core/Src/freertos.c **** 					angular = -z;
 883              		.loc 1 1062 14 view .LVU162
 884 0038 EDE7     		b	.L77
ARM GAS  /tmp/ccj1n2cd.s 			page 36


 885              	.L83:
 886 003a 00BFAFF3 		.align	3
 886      0080
 887              	.L82:
 888 0040 F5E846DA 		.word	-632887051
 889 0044 CA400840 		.word	1074282698
 890 0048 00004340 		.word	1078132736
 891              		.cfi_endproc
 892              	.LFE155:
 894              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 895              		.align	2
 896              	.LC1:
 897 0000 4572726F 		.ascii	"Error on default allocators (line %d)\012\000"
 897      72206F6E 
 897      20646566 
 897      61756C74 
 897      20616C6C 
 898 0027 00       		.align	2
 899              	.LC2:
 900 0028 00       		.ascii	"\000"
 901 0029 000000   		.align	2
 902              	.LC3:
 903 002c 63756265 		.ascii	"cubemx_node\000"
 903      6D785F6E 
 903      6F646500 
 904              		.align	2
 905              	.LC4:
 906 0038 63756265 		.ascii	"cubemx_publisher\000"
 906      6D785F70 
 906      75626C69 
 906      73686572 
 906      00
 907 0049 000000   		.align	2
 908              	.LC5:
 909 004c 656E6300 		.ascii	"enc\000"
 910              		.align	2
 911              	.LC6:
 912 0050 656E635F 		.ascii	"enc_str\000"
 912      73747200 
 913              		.align	2
 914              	.LC7:
 915 0058 63756265 		.ascii	"cubemx_publisher_test\000"
 915      6D785F70 
 915      75626C69 
 915      73686572 
 915      5F746573 
 916 006e 0000     		.align	2
 917              	.LC8:
 918 0070 636D645F 		.ascii	"cmd_vel\000"
 918      76656C00 
 919              		.align	2
 920              	.LC9:
 921 0078 25645F25 		.ascii	"%d_%d\000"
 921      6400
 922              		.global	__aeabi_dadd
 923              		.global	__aeabi_dsub
 924              		.section	.text.StartDefaultTask,"ax",%progbits
ARM GAS  /tmp/ccj1n2cd.s 			page 37


 925              		.align	1
 926              		.global	StartDefaultTask
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 931              	StartDefaultTask:
 932              	.LVL84:
 933              	.LFB143:
 276:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 934              		.loc 1 276 1 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 368
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 938              		.loc 1 276 1 is_stmt 0 view .LVU164
 939 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 940              	.LCFI12:
 941              		.cfi_def_cfa_offset 36
 942              		.cfi_offset 4, -36
 943              		.cfi_offset 5, -32
 944              		.cfi_offset 6, -28
 945              		.cfi_offset 7, -24
 946              		.cfi_offset 8, -20
 947              		.cfi_offset 9, -16
 948              		.cfi_offset 10, -12
 949              		.cfi_offset 11, -8
 950              		.cfi_offset 14, -4
 951 0004 2DED028B 		vpush.64	{d8}
 952              	.LCFI13:
 953              		.cfi_def_cfa_offset 44
 954              		.cfi_offset 80, -44
 955              		.cfi_offset 81, -40
 956 0008 DFB0     		sub	sp, sp, #380
 957              	.LCFI14:
 958              		.cfi_def_cfa_offset 424
 282:Core/Src/freertos.c ****     true,
 959              		.loc 1 282 3 is_stmt 1 view .LVU165
 960 000a 3C4B     		ldr	r3, .L142
 961 000c 0193     		str	r3, [sp, #4]
 962 000e 3C4B     		ldr	r3, .L142+4
 963 0010 0093     		str	r3, [sp]
 964 0012 3C4B     		ldr	r3, .L142+8
 965 0014 3C4A     		ldr	r2, .L142+12
 966 0016 3D49     		ldr	r1, .L142+16
 967 0018 0120     		movs	r0, #1
 968              	.LVL85:
 282:Core/Src/freertos.c ****     true,
 969              		.loc 1 282 3 is_stmt 0 view .LVU166
 970 001a FFF7FEFF 		bl	rmw_uros_set_custom_transport
 971              	.LVL86:
 290:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 972              		.loc 1 290 3 is_stmt 1 view .LVU167
 290:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
 973              		.loc 1 290 40 is_stmt 0 view .LVU168
 974 001e 59A8     		add	r0, sp, #356
 975 0020 FFF7FEFF 		bl	rcutils_get_zero_initialized_allocator
 976              	.LVL87:
ARM GAS  /tmp/ccj1n2cd.s 			page 38


 291:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 977              		.loc 1 291 3 is_stmt 1 view .LVU169
 291:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
 978              		.loc 1 291 31 is_stmt 0 view .LVU170
 979 0024 3A4B     		ldr	r3, .L142+20
 980 0026 5993     		str	r3, [sp, #356]
 292:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 981              		.loc 1 292 3 is_stmt 1 view .LVU171
 292:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
 982              		.loc 1 292 33 is_stmt 0 view .LVU172
 983 0028 3A4B     		ldr	r3, .L142+24
 984 002a 5A93     		str	r3, [sp, #360]
 293:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 985              		.loc 1 293 3 is_stmt 1 view .LVU173
 293:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
 986              		.loc 1 293 33 is_stmt 0 view .LVU174
 987 002c 3A4B     		ldr	r3, .L142+28
 988 002e 5B93     		str	r3, [sp, #364]
 294:Core/Src/freertos.c **** 
 989              		.loc 1 294 3 is_stmt 1 view .LVU175
 294:Core/Src/freertos.c **** 
 990              		.loc 1 294 36 is_stmt 0 view .LVU176
 991 0030 3A4B     		ldr	r3, .L142+32
 992 0032 5C93     		str	r3, [sp, #368]
 296:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 993              		.loc 1 296 3 is_stmt 1 view .LVU177
 296:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 994              		.loc 1 296 8 is_stmt 0 view .LVU178
 995 0034 59A8     		add	r0, sp, #356
 996 0036 FFF7FEFF 		bl	rcutils_set_default_allocator
 997              	.LVL88:
 296:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 998              		.loc 1 296 6 view .LVU179
 999 003a 0028     		cmp	r0, #0
 1000 003c 4FD0     		beq	.L137
 1001              	.L85:
 301:Core/Src/freertos.c **** 	motor1.position_p = 0;
 1002              		.loc 1 301 2 is_stmt 1 view .LVU180
 302:Core/Src/freertos.c **** 	motor2.position_p = 0;
 1003              		.loc 1 302 2 view .LVU181
 302:Core/Src/freertos.c **** 	motor2.position_p = 0;
 1004              		.loc 1 302 20 is_stmt 0 view .LVU182
 1005 003e 0024     		movs	r4, #0
 1006 0040 374B     		ldr	r3, .L142+36
 1007 0042 DC60     		str	r4, [r3, #12]
 303:Core/Src/freertos.c **** 
 1008              		.loc 1 303 2 is_stmt 1 view .LVU183
 303:Core/Src/freertos.c **** 
 1009              		.loc 1 303 20 is_stmt 0 view .LVU184
 1010 0044 374B     		ldr	r3, .L142+40
 1011 0046 DC60     		str	r4, [r3, #12]
 312:Core/Src/freertos.c ****   std_msgs__msg__Int32 msg;
 1012              		.loc 1 312 3 is_stmt 1 view .LVU185
 313:Core/Src/freertos.c **** //test
 1013              		.loc 1 313 3 view .LVU186
 315:Core/Src/freertos.c ****   std_msgs__msg__Int32_test1 msg_test;
 1014              		.loc 1 315 3 view .LVU187
ARM GAS  /tmp/ccj1n2cd.s 			page 39


 316:Core/Src/freertos.c **** 
 1015              		.loc 1 316 3 view .LVU188
 318:Core/Src/freertos.c ****   std_msgs__msg__Int32_test2 submsg_test1;
 1016              		.loc 1 318 3 view .LVU189
 319:Core/Src/freertos.c **** 
 1017              		.loc 1 319 3 view .LVU190
 321:Core/Src/freertos.c ****   std_msgs__msg__Int32_test3 submsg_test2;
 1018              		.loc 1 321 3 view .LVU191
 322:Core/Src/freertos.c **** //
 1019              		.loc 1 322 3 view .LVU192
 324:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_1;
 1020              		.loc 1 324 3 view .LVU193
 325:Core/Src/freertos.c **** 
 1021              		.loc 1 325 3 view .LVU194
 327:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub2 pubmsg_2;
 1022              		.loc 1 327 3 view .LVU195
 328:Core/Src/freertos.c **** 
 1023              		.loc 1 328 3 view .LVU196
 331:Core/Src/freertos.c ****   std_msgs__msg__Int32_pub1 pubmsg_3;
 1024              		.loc 1 331 3 view .LVU197
 332:Core/Src/freertos.c **** 
 1025              		.loc 1 332 3 view .LVU198
 335:Core/Src/freertos.c ****   std_msgs__msg__String_sub1 pubmsg_str;
 1026              		.loc 1 335 3 view .LVU199
 336:Core/Src/freertos.c **** 
 1027              		.loc 1 336 3 view .LVU200
 339:Core/Src/freertos.c **** //  std_msgs__msg__String_sub1 submsg_1;
 1028              		.loc 1 339 3 view .LVU201
 341:Core/Src/freertos.c **** //  geometry_msgs__msg__Twist * submsg_2_1;
 1029              		.loc 1 341 3 view .LVU202
 344:Core/Src/freertos.c ****   rcl_allocator_t allocator;
 1030              		.loc 1 344 3 view .LVU203
 345:Core/Src/freertos.c ****   rcl_node_t node;
 1031              		.loc 1 345 3 view .LVU204
 346:Core/Src/freertos.c **** 
 1032              		.loc 1 346 3 view .LVU205
 348:Core/Src/freertos.c **** 
 1033              		.loc 1 348 3 view .LVU206
 348:Core/Src/freertos.c **** 
 1034              		.loc 1 348 15 is_stmt 0 view .LVU207
 1035 0048 06A8     		add	r0, sp, #24
 1036 004a FFF7FEFF 		bl	rcutils_get_default_allocator
 1037              	.LVL89:
 1038 004e 2FAE     		add	r6, sp, #188
 1039 0050 06AD     		add	r5, sp, #24
 1040 0052 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1041 0054 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1042 0056 2B68     		ldr	r3, [r5]
 1043 0058 3360     		str	r3, [r6]
 351:Core/Src/freertos.c **** 
 1044              		.loc 1 351 3 is_stmt 1 view .LVU208
 1045 005a 2FAB     		add	r3, sp, #188
 1046 005c 2246     		mov	r2, r4
 1047 005e 2146     		mov	r1, r4
 1048 0060 34A8     		add	r0, sp, #208
 1049 0062 FFF7FEFF 		bl	rclc_support_init
 1050              	.LVL90:
ARM GAS  /tmp/ccj1n2cd.s 			page 40


 356:Core/Src/freertos.c **** 
 1051              		.loc 1 356 3 view .LVU209
 1052 0066 34AB     		add	r3, sp, #208
 1053 0068 2F4A     		ldr	r2, .L142+44
 1054 006a 3049     		ldr	r1, .L142+48
 1055 006c 2DA8     		add	r0, sp, #180
 1056 006e FFF7FEFF 		bl	rclc_node_init_default
 1057              	.LVL91:
 359:Core/Src/freertos.c ****     &publisher,
 1058              		.loc 1 359 3 view .LVU210
 1059 0072 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 1060              	.LVL92:
 1061 0076 0246     		mov	r2, r0
 1062 0078 2D4B     		ldr	r3, .L142+52
 1063 007a 2DA9     		add	r1, sp, #180
 1064 007c 58A8     		add	r0, sp, #352
 1065 007e FFF7FEFF 		bl	rclc_publisher_init_default
 1066              	.LVL93:
 383:Core/Src/freertos.c ****     &publisher_3,
 1067              		.loc 1 383 3 view .LVU211
 1068 0082 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 1069              	.LVL94:
 1070 0086 0246     		mov	r2, r0
 1071 0088 2A4B     		ldr	r3, .L142+56
 1072 008a 2DA9     		add	r1, sp, #180
 1073 008c 55A8     		add	r0, sp, #340
 1074 008e FFF7FEFF 		bl	rclc_publisher_init_default
 1075              	.LVL95:
 390:Core/Src/freertos.c ****     &publisher_str,
 1076              		.loc 1 390 3 view .LVU212
 1077 0092 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__String
 1078              	.LVL96:
 1079 0096 0246     		mov	r2, r0
 1080 0098 274B     		ldr	r3, .L142+60
 1081 009a 2DA9     		add	r1, sp, #180
 1082 009c 53A8     		add	r0, sp, #332
 1083 009e FFF7FEFF 		bl	rclc_publisher_init_default
 1084              	.LVL97:
 399:Core/Src/freertos.c ****     &publisher_test,
 1085              		.loc 1 399 3 view .LVU213
 1086 00a2 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 1087              	.LVL98:
 1088 00a6 0246     		mov	r2, r0
 1089 00a8 244B     		ldr	r3, .L142+64
 1090 00aa 2DA9     		add	r1, sp, #180
 1091 00ac 57A8     		add	r0, sp, #348
 1092 00ae FFF7FEFF 		bl	rclc_publisher_init_default
 1093              	.LVL99:
 406:Core/Src/freertos.c ****       &subscriber_2,
 1094              		.loc 1 406 3 view .LVU214
 1095 00b2 FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__geometry_msgs__msg__Twist
 1096              	.LVL100:
 1097 00b6 0246     		mov	r2, r0
 1098 00b8 214B     		ldr	r3, .L142+68
 1099 00ba 2DA9     		add	r1, sp, #180
 1100 00bc 4FA8     		add	r0, sp, #316
 1101 00be FFF7FEFF 		bl	rclc_subscription_init_default
ARM GAS  /tmp/ccj1n2cd.s 			page 41


 1102              	.LVL101:
 433:Core/Src/freertos.c ****   rclc_executor_init(&executor, &support.context, 1, &allocator);
 1103              		.loc 1 433 3 view .LVU215
 434:Core/Src/freertos.c **** //  rclc_executor_add_subscription(&executor, &subscriber_1, &submsg_1, &messageCallback, ON_NEW_DA
 1104              		.loc 1 434 3 view .LVU216
 1105 00c2 2FAB     		add	r3, sp, #188
 1106 00c4 0122     		movs	r2, #1
 1107 00c6 35A9     		add	r1, sp, #212
 1108 00c8 0CA8     		add	r0, sp, #48
 1109 00ca FFF7FEFF 		bl	rclc_executor_init
 1110              	.LVL102:
 439:Core/Src/freertos.c **** 
 1111              		.loc 1 439 3 view .LVU217
 1112 00ce 0094     		str	r4, [sp]
 1113 00d0 1C4B     		ldr	r3, .L142+72
 1114 00d2 42AA     		add	r2, sp, #264
 1115 00d4 4FA9     		add	r1, sp, #316
 1116 00d6 0CA8     		add	r0, sp, #48
 1117 00d8 FFF7FEFF 		bl	rclc_executor_add_subscription
 1118              	.LVL103:
 441:Core/Src/freertos.c ****   pubmsg_1.hall_1 = 0;
 1119              		.loc 1 441 3 view .LVU218
 442:Core/Src/freertos.c ****   pubmsg_2.hall_2 = 0;
 1120              		.loc 1 442 3 view .LVU219
 443:Core/Src/freertos.c **** 
 1121              		.loc 1 443 3 view .LVU220
 1122 00dc E4E0     		b	.L121
 1123              	.L137:
 297:Core/Src/freertos.c ****   }
 1124              		.loc 1 297 7 view .LVU221
 1125 00de 40F22911 		movw	r1, #297
 1126 00e2 1948     		ldr	r0, .L142+76
 1127 00e4 FFF7FEFF 		bl	printf
 1128              	.LVL104:
 1129 00e8 A9E7     		b	.L85
 1130              	.L86:
 1131              	.LBB2:
 477:Core/Src/freertos.c **** 	  }
 1132              		.loc 1 477 5 view .LVU222
 477:Core/Src/freertos.c **** 	  }
 1133              		.loc 1 477 14 is_stmt 0 view .LVU223
 1134 00ea 184B     		ldr	r3, .L142+80
 1135 00ec 0120     		movs	r0, #1
 1136 00ee 1860     		str	r0, [r3]
 1137 00f0 E6E0     		b	.L87
 1138              	.L88:
 484:Core/Src/freertos.c **** 	  }
 1139              		.loc 1 484 5 is_stmt 1 view .LVU224
 484:Core/Src/freertos.c **** 	  }
 1140              		.loc 1 484 14 is_stmt 0 view .LVU225
 1141 00f2 174B     		ldr	r3, .L142+84
 1142 00f4 0A20     		movs	r0, #10
 1143 00f6 1860     		str	r0, [r3]
 1144 00f8 E8E0     		b	.L89
 1145              	.L143:
 1146 00fa 00BF     		.align	2
 1147              	.L142:
ARM GAS  /tmp/ccj1n2cd.s 			page 42


 1148 00fc 00000000 		.word	cubemx_transport_read
 1149 0100 00000000 		.word	cubemx_transport_write
 1150 0104 00000000 		.word	cubemx_transport_close
 1151 0108 00000000 		.word	cubemx_transport_open
 1152 010c 00000000 		.word	huart3
 1153 0110 00000000 		.word	microros_allocate
 1154 0114 00000000 		.word	microros_deallocate
 1155 0118 00000000 		.word	microros_reallocate
 1156 011c 00000000 		.word	microros_zero_allocate
 1157 0120 00000000 		.word	.LANCHOR4
 1158 0124 00000000 		.word	.LANCHOR5
 1159 0128 28000000 		.word	.LC2
 1160 012c 2C000000 		.word	.LC3
 1161 0130 38000000 		.word	.LC4
 1162 0134 4C000000 		.word	.LC5
 1163 0138 50000000 		.word	.LC6
 1164 013c 58000000 		.word	.LC7
 1165 0140 70000000 		.word	.LC8
 1166 0144 00000000 		.word	twist_subscription_callback
 1167 0148 00000000 		.word	.LC1
 1168 014c 00000000 		.word	.LANCHOR6
 1169 0150 00000000 		.word	.LANCHOR7
 1170              	.LVL105:
 1171              	.L93:
 1172              	.LBB3:
 1173              	.LBB4:
 553:Core/Src/freertos.c ****   	    		          i++;
 1174              		.loc 1 553 20 is_stmt 1 discriminator 3 view .LVU226
 553:Core/Src/freertos.c ****   	    		          i++;
 1175              		.loc 1 553 60 is_stmt 0 discriminator 3 view .LVU227
 1176 0154 AA49     		ldr	r1, .L144+8
 1177 0156 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 553:Core/Src/freertos.c ****   	    		          i++;
 1178              		.loc 1 553 41 discriminator 3 view .LVU228
 1179 0158 AA49     		ldr	r1, .L144+12
 1180 015a 8854     		strb	r0, [r1, r2]
 554:Core/Src/freertos.c **** 					  }
 1181              		.loc 1 554 20 is_stmt 1 discriminator 3 view .LVU229
 554:Core/Src/freertos.c **** 					  }
 1182              		.loc 1 554 21 is_stmt 0 discriminator 3 view .LVU230
 1183 015c 0133     		adds	r3, r3, #1
 1184              	.LVL106:
 552:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1185              		.loc 1 552 44 is_stmt 1 discriminator 3 view .LVU231
 1186 015e 0132     		adds	r2, r2, #1
 1187              	.LVL107:
 1188              	.L92:
 552:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1189              		.loc 1 552 30 discriminator 1 view .LVU232
 1190 0160 172A     		cmp	r2, #23
 1191 0162 F7DD     		ble	.L93
 552:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1192              		.loc 1 552 30 is_stmt 0 discriminator 1 view .LVU233
 1193              	.LBE4:
 558:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1194              		.loc 1 558 12 is_stmt 1 view .LVU234
 558:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
ARM GAS  /tmp/ccj1n2cd.s 			page 43


 1195              		.loc 1 558 42 is_stmt 0 view .LVU235
 1196 0164 A74B     		ldr	r3, .L144+12
 1197              	.LVL108:
 558:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1198              		.loc 1 558 42 view .LVU236
 1199 0166 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1200              	.LVL109:
 558:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1201              		.loc 1 558 65 view .LVU237
 1202 0168 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 558:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1203              		.loc 1 558 46 view .LVU238
 1204 016a 42EA0122 		orr	r2, r2, r1, lsl #8
 558:Core/Src/freertos.c ****   	    		  motor1.current = Command_Response2[7] | Command_Response2[8]<<8;
 1205              		.loc 1 558 23 view .LVU239
 1206 016e A649     		ldr	r1, .L144+16
 1207 0170 8A80     		strh	r2, [r1, #4]	@ movhi
 559:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1208              		.loc 1 559 12 is_stmt 1 view .LVU240
 559:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1209              		.loc 1 559 46 is_stmt 0 view .LVU241
 1210 0172 DA79     		ldrb	r2, [r3, #7]	@ zero_extendqisi2
 559:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1211              		.loc 1 559 69 view .LVU242
 1212 0174 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 559:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1213              		.loc 1 559 50 view .LVU243
 1214 0176 42EA0022 		orr	r2, r2, r0, lsl #8
 559:Core/Src/freertos.c ****   	    		  motor1.state = Command_Response2[9];
 1215              		.loc 1 559 27 view .LVU244
 1216 017a 4A80     		strh	r2, [r1, #2]	@ movhi
 560:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 1217              		.loc 1 560 12 is_stmt 1 view .LVU245
 560:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 1218              		.loc 1 560 44 is_stmt 0 view .LVU246
 1219 017c 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
 560:Core/Src/freertos.c ****   	    		  motor1.position = Command_Response2[10] | Command_Response2[11]<<8 | Command_Response2[1
 1220              		.loc 1 560 25 view .LVU247
 1221 017e 0A80     		strh	r2, [r1]	@ movhi
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1222              		.loc 1 561 12 is_stmt 1 view .LVU248
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1223              		.loc 1 561 47 is_stmt 0 view .LVU249
 1224 0180 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1225              		.loc 1 561 71 view .LVU250
 1226 0182 D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1227              		.loc 1 561 52 view .LVU251
 1228 0184 42EA0022 		orr	r2, r2, r0, lsl #8
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1229              		.loc 1 561 98 view .LVU252
 1230 0188 187B     		ldrb	r0, [r3, #12]	@ zero_extendqisi2
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1231              		.loc 1 561 79 view .LVU253
 1232 018a 42EA0042 		orr	r2, r2, r0, lsl #16
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
ARM GAS  /tmp/ccj1n2cd.s 			page 44


 1233              		.loc 1 561 126 view .LVU254
 1234 018e 587B     		ldrb	r0, [r3, #13]	@ zero_extendqisi2
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1235              		.loc 1 561 107 view .LVU255
 1236 0190 42EA0062 		orr	r2, r2, r0, lsl #24
 561:Core/Src/freertos.c ****   	    		  motor1.encoder = motor1.position - motor1.position_p;
 1237              		.loc 1 561 28 view .LVU256
 1238 0194 8A60     		str	r2, [r1, #8]
 562:Core/Src/freertos.c **** 
 1239              		.loc 1 562 12 is_stmt 1 view .LVU257
 562:Core/Src/freertos.c **** 
 1240              		.loc 1 562 53 is_stmt 0 view .LVU258
 1241 0196 C868     		ldr	r0, [r1, #12]
 562:Core/Src/freertos.c **** 
 1242              		.loc 1 562 45 view .LVU259
 1243 0198 121A     		subs	r2, r2, r0
 562:Core/Src/freertos.c **** 
 1244              		.loc 1 562 27 view .LVU260
 1245 019a 0A61     		str	r2, [r1, #16]
 564:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1246              		.loc 1 564 12 is_stmt 1 view .LVU261
 564:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1247              		.loc 1 564 42 is_stmt 0 view .LVU262
 1248 019c 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 564:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1249              		.loc 1 564 66 view .LVU263
 1250 019e D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 564:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1251              		.loc 1 564 47 view .LVU264
 1252 01a0 42EA0122 		orr	r2, r2, r1, lsl #8
 564:Core/Src/freertos.c ****   	    		  motor2.current = Command_Response2[16] | Command_Response2[17]<<8;
 1253              		.loc 1 564 23 view .LVU265
 1254 01a4 9949     		ldr	r1, .L144+20
 1255 01a6 8A80     		strh	r2, [r1, #4]	@ movhi
 565:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1256              		.loc 1 565 12 is_stmt 1 view .LVU266
 565:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1257              		.loc 1 565 46 is_stmt 0 view .LVU267
 1258 01a8 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 565:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1259              		.loc 1 565 70 view .LVU268
 1260 01aa 587C     		ldrb	r0, [r3, #17]	@ zero_extendqisi2
 565:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1261              		.loc 1 565 51 view .LVU269
 1262 01ac 42EA0022 		orr	r2, r2, r0, lsl #8
 565:Core/Src/freertos.c ****   	    		  motor2.state = Command_Response2[18];
 1263              		.loc 1 565 27 view .LVU270
 1264 01b0 4A80     		strh	r2, [r1, #2]	@ movhi
 566:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 1265              		.loc 1 566 12 is_stmt 1 view .LVU271
 566:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 1266              		.loc 1 566 44 is_stmt 0 view .LVU272
 1267 01b2 9A7C     		ldrb	r2, [r3, #18]	@ zero_extendqisi2
 566:Core/Src/freertos.c ****   	    		  motor2.position = Command_Response2[19] | Command_Response2[20]<<8 | Command_Response2[2
 1268              		.loc 1 566 25 view .LVU273
 1269 01b4 0A80     		strh	r2, [r1]	@ movhi
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
ARM GAS  /tmp/ccj1n2cd.s 			page 45


 1270              		.loc 1 567 12 is_stmt 1 view .LVU274
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1271              		.loc 1 567 47 is_stmt 0 view .LVU275
 1272 01b6 DA7C     		ldrb	r2, [r3, #19]	@ zero_extendqisi2
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1273              		.loc 1 567 71 view .LVU276
 1274 01b8 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1275              		.loc 1 567 52 view .LVU277
 1276 01ba 42EA0022 		orr	r2, r2, r0, lsl #8
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1277              		.loc 1 567 98 view .LVU278
 1278 01be 587D     		ldrb	r0, [r3, #21]	@ zero_extendqisi2
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1279              		.loc 1 567 79 view .LVU279
 1280 01c0 42EA0042 		orr	r2, r2, r0, lsl #16
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1281              		.loc 1 567 126 view .LVU280
 1282 01c4 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1283              		.loc 1 567 107 view .LVU281
 1284 01c6 42EA0363 		orr	r3, r2, r3, lsl #24
 567:Core/Src/freertos.c **** //  	    		  motor2.encoder = motor2.position - motor2.position_p;
 1285              		.loc 1 567 28 view .LVU282
 1286 01ca 8B60     		str	r3, [r1, #8]
 569:Core/Src/freertos.c **** 
 1287              		.loc 1 569 12 is_stmt 1 view .LVU283
 569:Core/Src/freertos.c **** 
 1288              		.loc 1 569 55 is_stmt 0 view .LVU284
 1289 01cc CA68     		ldr	r2, [r1, #12]
 569:Core/Src/freertos.c **** 
 1290              		.loc 1 569 29 view .LVU285
 1291 01ce D21A     		subs	r2, r2, r3
 569:Core/Src/freertos.c **** 
 1292              		.loc 1 569 27 view .LVU286
 1293 01d0 0A61     		str	r2, [r1, #16]
 572:Core/Src/freertos.c ****       	    	  }
 1294              		.loc 1 572 12 is_stmt 1 view .LVU287
 1295              	.L94:
 572:Core/Src/freertos.c ****       	    	  }
 1296              		.loc 1 572 12 is_stmt 0 view .LVU288
 1297              	.LBE3:
 583:Core/Src/freertos.c ****     memset(Command_Response2, 0, sizeof(Command_Response2)); // 버퍼 초기화
 1298              		.loc 1 583 5 is_stmt 1 view .LVU289
 1299 01d2 3222     		movs	r2, #50
 1300 01d4 0021     		movs	r1, #0
 1301 01d6 8A48     		ldr	r0, .L144+8
 1302 01d8 FFF7FEFF 		bl	memset
 1303              	.LVL110:
 584:Core/Src/freertos.c **** 
 1304              		.loc 1 584 5 view .LVU290
 1305 01dc 894B     		ldr	r3, .L144+12
 1306 01de 0022     		movs	r2, #0
 1307 01e0 1A60     		str	r2, [r3]
 1308 01e2 5A60     		str	r2, [r3, #4]
 1309 01e4 9A60     		str	r2, [r3, #8]
 1310 01e6 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccj1n2cd.s 			page 46


 1311 01e8 1A61     		str	r2, [r3, #16]
 1312 01ea 5A61     		str	r2, [r3, #20]
 715:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1313              		.loc 1 715 2 view .LVU291
 715:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1314              		.loc 1 715 10 is_stmt 0 view .LVU292
 1315 01ec 884B     		ldr	r3, .L144+24
 1316 01ee 93ED042B 		vldr.64	d2, [r3, #16]
 1317 01f2 93ED021B 		vldr.64	d1, [r3, #8]
 1318 01f6 93ED000B 		vldr.64	d0, [r3]
 1319 01fa FFF7FEFF 		bl	CAL_LinearSpeed
 1320              	.LVL111:
 1321 01fe 57EC106B 		vmov	r6, r7, d0
 715:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1322              		.loc 1 715 61 view .LVU293
 1323 0202 844B     		ldr	r3, .L144+28
 1324 0204 93ED042B 		vldr.64	d2, [r3, #16]
 1325 0208 93ED021B 		vldr.64	d1, [r3, #8]
 1326 020c 93ED000B 		vldr.64	d0, [r3]
 1327 0210 FFF7FEFF 		bl	CAL_AngularSpeed
 1328              	.LVL112:
 1329 0214 55EC104B 		vmov	r4, r5, d0
 715:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1330              		.loc 1 715 59 view .LVU294
 1331 0218 10EE102A 		vmov	r2, s0	@ int
 1332 021c 2B46     		mov	r3, r5
 1333 021e 3046     		mov	r0, r6
 1334 0220 3946     		mov	r1, r7
 1335 0222 FFF7FEFF 		bl	__aeabi_dadd
 1336              	.LVL113:
 1337 0226 41EC180B 		vmov	d8, r0, r1
 715:Core/Src/freertos.c **** 	pwm_m = CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz) - CAL_AngularSpeed(Angular.vx, Angular.vy
 1338              		.loc 1 715 8 view .LVU295
 1339 022a 7B4B     		ldr	r3, .L144+32
 1340 022c C3E90001 		strd	r0, [r3]
 716:Core/Src/freertos.c **** 
 1341              		.loc 1 716 2 is_stmt 1 view .LVU296
 716:Core/Src/freertos.c **** 
 1342              		.loc 1 716 59 is_stmt 0 view .LVU297
 1343 0230 2246     		mov	r2, r4
 1344 0232 2B46     		mov	r3, r5
 1345 0234 3046     		mov	r0, r6
 1346 0236 3946     		mov	r1, r7
 1347 0238 FFF7FEFF 		bl	__aeabi_dsub
 1348              	.LVL114:
 1349 023c 0446     		mov	r4, r0
 1350 023e 0D46     		mov	r5, r1
 716:Core/Src/freertos.c **** 
 1351              		.loc 1 716 8 view .LVU298
 1352 0240 764B     		ldr	r3, .L144+36
 1353 0242 C3E90045 		strd	r4, [r3]
 719:Core/Src/freertos.c **** 		Run_State = 'B';
 1354              		.loc 1 719 2 is_stmt 1 view .LVU299
 719:Core/Src/freertos.c **** 		Run_State = 'B';
 1355              		.loc 1 719 12 is_stmt 0 view .LVU300
 1356 0246 764B     		ldr	r3, .L144+40
 1357 0248 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccj1n2cd.s 			page 47


 719:Core/Src/freertos.c **** 		Run_State = 'B';
 1358              		.loc 1 719 4 view .LVU301
 1359 024a 002B     		cmp	r3, #0
 1360 024c 40F09280 		bne	.L96
 720:Core/Src/freertos.c **** 		PWM_R(0);
 1361              		.loc 1 720 3 is_stmt 1 view .LVU302
 720:Core/Src/freertos.c **** 		PWM_R(0);
 1362              		.loc 1 720 13 is_stmt 0 view .LVU303
 1363 0250 744B     		ldr	r3, .L144+44
 1364 0252 4222     		movs	r2, #66
 1365 0254 1A70     		strb	r2, [r3]
 721:Core/Src/freertos.c **** 		PWM_L(0);
 1366              		.loc 1 721 3 is_stmt 1 view .LVU304
 1367 0256 9FED688B 		vldr.64	d8, .L144
 1368 025a B0EE480A 		vmov.f32	s0, s16
 1369 025e F0EE680A 		vmov.f32	s1, s17
 1370 0262 FFF7FEFF 		bl	PWM_R
 1371              	.LVL115:
 722:Core/Src/freertos.c **** 	}
 1372              		.loc 1 722 3 view .LVU305
 1373 0266 B0EE480A 		vmov.f32	s0, s16
 1374 026a F0EE680A 		vmov.f32	s1, s17
 1375 026e FFF7FEFF 		bl	PWM_L
 1376              	.LVL116:
 1377              	.L97:
 802:Core/Src/freertos.c ****     MOTOR_SS(Motor_State);
 1378              		.loc 1 802 5 view .LVU306
 1379 0272 6C4B     		ldr	r3, .L144+44
 1380 0274 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1381 0276 FFF7FEFF 		bl	RUN_RB
 1382              	.LVL117:
 803:Core/Src/freertos.c ****     RUN_DIR(Run_Dir);
 1383              		.loc 1 803 5 view .LVU307
 1384 027a 6B4B     		ldr	r3, .L144+48
 1385 027c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1386 027e FFF7FEFF 		bl	MOTOR_SS
 1387              	.LVL118:
 804:Core/Src/freertos.c **** 
 1388              		.loc 1 804 5 view .LVU308
 1389 0282 6A4B     		ldr	r3, .L144+52
 1390 0284 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1391 0286 FFF7FEFF 		bl	RUN_DIR
 1392              	.LVL119:
 806:Core/Src/freertos.c **** 
 1393              		.loc 1 806 5 view .LVU309
 1394 028a 694B     		ldr	r3, .L144+56
 1395 028c 1A68     		ldr	r2, [r3]
 1396 028e D317     		asrs	r3, r2, #31
 1397 0290 0CA8     		add	r0, sp, #48
 1398 0292 FFF7FEFF 		bl	rclc_executor_spin_some
 1399              	.LVL120:
 809:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 1400              		.loc 1 809 4 view .LVU310
 809:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 1401              		.loc 1 809 30 is_stmt 0 view .LVU311
 1402 0296 5C4B     		ldr	r3, .L144+16
 1403 0298 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccj1n2cd.s 			page 48


 809:Core/Src/freertos.c **** 	  motor2.position_p = motor2.position;
 1404              		.loc 1 809 22 view .LVU312
 1405 029a DA60     		str	r2, [r3, #12]
 810:Core/Src/freertos.c **** 
 1406              		.loc 1 810 4 is_stmt 1 view .LVU313
 810:Core/Src/freertos.c **** 
 1407              		.loc 1 810 30 is_stmt 0 view .LVU314
 1408 029c 5B4B     		ldr	r3, .L144+20
 1409 029e 9A68     		ldr	r2, [r3, #8]
 810:Core/Src/freertos.c **** 
 1410              		.loc 1 810 22 view .LVU315
 1411 02a0 DA60     		str	r2, [r3, #12]
 813:Core/Src/freertos.c ****       }
 1412              		.loc 1 813 9 is_stmt 1 view .LVU316
 1413 02a2 0020     		movs	r0, #0
 1414 02a4 FFF7FEFF 		bl	osDelay
 1415              	.LVL121:
 1416              	.LBE2:
 449:Core/Src/freertos.c ****   {
 1417              		.loc 1 449 3 view .LVU317
 1418              	.L121:
 449:Core/Src/freertos.c ****   {
 1419              		.loc 1 449 3 view .LVU318
 1420              	.LBB7:
 455:Core/Src/freertos.c **** 		pubmsg_1.hall_1 = (int32_t)motor1.encoder_p;
 1421              		.loc 1 455 4 view .LVU319
 460:Core/Src/freertos.c **** 		motor1.encoder_p = motor1.encoder;
 1422              		.loc 1 460 3 view .LVU320
 460:Core/Src/freertos.c **** 		motor1.encoder_p = motor1.encoder;
 1423              		.loc 1 460 36 is_stmt 0 view .LVU321
 1424 02a8 574B     		ldr	r3, .L144+16
 1425 02aa 1969     		ldr	r1, [r3, #16]
 461:Core/Src/freertos.c **** 	  }
 1426              		.loc 1 461 3 is_stmt 1 view .LVU322
 461:Core/Src/freertos.c **** 	  }
 1427              		.loc 1 461 20 is_stmt 0 view .LVU323
 1428 02ac 5961     		str	r1, [r3, #20]
 464:Core/Src/freertos.c **** 		pubmsg_2.hall_2 = (int32_t)motor2.encoder_p;
 1429              		.loc 1 464 4 is_stmt 1 view .LVU324
 469:Core/Src/freertos.c **** 		motor2.encoder_p = motor2.encoder;
 1430              		.loc 1 469 3 view .LVU325
 469:Core/Src/freertos.c **** 		motor2.encoder_p = motor2.encoder;
 1431              		.loc 1 469 36 is_stmt 0 view .LVU326
 1432 02ae 574B     		ldr	r3, .L144+20
 1433 02b0 1A69     		ldr	r2, [r3, #16]
 470:Core/Src/freertos.c **** 	  }
 1434              		.loc 1 470 3 is_stmt 1 view .LVU327
 470:Core/Src/freertos.c **** 	  }
 1435              		.loc 1 470 20 is_stmt 0 view .LVU328
 1436 02b2 5A61     		str	r2, [r3, #20]
 473:Core/Src/freertos.c **** 		  r_enc_op = 0;
 1437              		.loc 1 473 4 is_stmt 1 view .LVU329
 473:Core/Src/freertos.c **** 		  r_enc_op = 0;
 1438              		.loc 1 473 6 is_stmt 0 view .LVU330
 1439 02b4 0029     		cmp	r1, #0
 1440 02b6 FFF618AF 		blt	.L86
 474:Core/Src/freertos.c **** 	  }
ARM GAS  /tmp/ccj1n2cd.s 			page 49


 1441              		.loc 1 474 5 is_stmt 1 view .LVU331
 474:Core/Src/freertos.c **** 	  }
 1442              		.loc 1 474 14 is_stmt 0 view .LVU332
 1443 02ba 5E4B     		ldr	r3, .L144+60
 1444 02bc 0020     		movs	r0, #0
 1445 02be 1860     		str	r0, [r3]
 1446              	.L87:
 480:Core/Src/freertos.c **** 		  l_enc_op = 0;
 1447              		.loc 1 480 4 is_stmt 1 view .LVU333
 480:Core/Src/freertos.c **** 		  l_enc_op = 0;
 1448              		.loc 1 480 6 is_stmt 0 view .LVU334
 1449 02c0 002A     		cmp	r2, #0
 1450 02c2 FFF616AF 		blt	.L88
 481:Core/Src/freertos.c **** 	  }
 1451              		.loc 1 481 5 is_stmt 1 view .LVU335
 481:Core/Src/freertos.c **** 	  }
 1452              		.loc 1 481 14 is_stmt 0 view .LVU336
 1453 02c6 5C4B     		ldr	r3, .L144+64
 1454 02c8 0020     		movs	r0, #0
 1455 02ca 1860     		str	r0, [r3]
 1456              	.L89:
 488:Core/Src/freertos.c **** 
 1457              		.loc 1 488 7 is_stmt 1 view .LVU337
 488:Core/Src/freertos.c **** 
 1458              		.loc 1 488 34 is_stmt 0 view .LVU338
 1459 02cc 5A4B     		ldr	r3, .L144+64
 1460 02ce 1B68     		ldr	r3, [r3]
 1461 02d0 5848     		ldr	r0, .L144+60
 1462 02d2 0068     		ldr	r0, [r0]
 1463 02d4 0344     		add	r3, r3, r0
 488:Core/Src/freertos.c **** 
 1464              		.loc 1 488 51 view .LVU339
 1465 02d6 0029     		cmp	r1, #0
 1466 02d8 B8BF     		it	lt
 1467 02da 4942     		rsblt	r1, r1, #0
 488:Core/Src/freertos.c **** 
 1468              		.loc 1 488 50 view .LVU340
 1469 02dc 6424     		movs	r4, #100
 488:Core/Src/freertos.c **** 
 1470              		.loc 1 488 45 view .LVU341
 1471 02de 04FB0133 		mla	r3, r4, r1, r3
 488:Core/Src/freertos.c **** 
 1472              		.loc 1 488 84 view .LVU342
 1473 02e2 002A     		cmp	r2, #0
 1474 02e4 B8BF     		it	lt
 1475 02e6 5242     		rsblt	r2, r2, #0
 488:Core/Src/freertos.c **** 
 1476              		.loc 1 488 72 view .LVU343
 1477 02e8 5449     		ldr	r1, .L144+68
 1478 02ea 01FB0233 		mla	r3, r1, r2, r3
 488:Core/Src/freertos.c **** 
 1479              		.loc 1 488 23 view .LVU344
 1480 02ee 5493     		str	r3, [sp, #336]
 491:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.data = enc_str1;
 1481              		.loc 1 491 6 is_stmt 1 view .LVU345
 491:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.data = enc_str1;
 1482              		.loc 1 491 44 is_stmt 0 view .LVU346
ARM GAS  /tmp/ccj1n2cd.s 			page 50


 1483 02f0 464B     		ldr	r3, .L144+20
 1484 02f2 9A68     		ldr	r2, [r3, #8]
 491:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.data = enc_str1;
 1485              		.loc 1 491 6 view .LVU347
 1486 02f4 524D     		ldr	r5, .L144+72
 1487 02f6 444B     		ldr	r3, .L144+16
 1488 02f8 9B68     		ldr	r3, [r3, #8]
 1489 02fa 5242     		rsbs	r2, r2, #0
 1490 02fc 5149     		ldr	r1, .L144+76
 1491 02fe 2846     		mov	r0, r5
 1492 0300 FFF7FEFF 		bl	sprintf
 1493              	.LVL122:
 492:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.size = strlen(enc_str1);
 1494              		.loc 1 492 5 is_stmt 1 view .LVU348
 492:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.size = strlen(enc_str1);
 1495              		.loc 1 492 29 is_stmt 0 view .LVU349
 1496 0304 5095     		str	r5, [sp, #320]
 493:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.capacity = sizeof(enc_str1);
 1497              		.loc 1 493 5 is_stmt 1 view .LVU350
 493:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.capacity = sizeof(enc_str1);
 1498              		.loc 1 493 31 is_stmt 0 view .LVU351
 1499 0306 2846     		mov	r0, r5
 1500 0308 FFF7FEFF 		bl	strlen
 1501              	.LVL123:
 493:Core/Src/freertos.c **** 	  	pubmsg_str.enc_str.capacity = sizeof(enc_str1);
 1502              		.loc 1 493 29 view .LVU352
 1503 030c 5190     		str	r0, [sp, #324]
 494:Core/Src/freertos.c **** 
 1504              		.loc 1 494 5 is_stmt 1 view .LVU353
 494:Core/Src/freertos.c **** 
 1505              		.loc 1 494 33 is_stmt 0 view .LVU354
 1506 030e 5294     		str	r4, [sp, #328]
 496:Core/Src/freertos.c **** 
 1507              		.loc 1 496 5 is_stmt 1 view .LVU355
 502:Core/Src/freertos.c **** 
 1508              		.loc 1 502 4 view .LVU356
 502:Core/Src/freertos.c **** 
 1509              		.loc 1 502 22 is_stmt 0 view .LVU357
 1510 0310 0022     		movs	r2, #0
 1511 0312 54A9     		add	r1, sp, #336
 1512 0314 55A8     		add	r0, sp, #340
 1513 0316 FFF7FEFF 		bl	rcl_publish
 1514              	.LVL124:
 504:Core/Src/freertos.c **** 
 1515              		.loc 1 504 4 is_stmt 1 view .LVU358
 504:Core/Src/freertos.c **** 
 1516              		.loc 1 504 24 is_stmt 0 view .LVU359
 1517 031a 0022     		movs	r2, #0
 1518 031c 50A9     		add	r1, sp, #320
 1519 031e 53A8     		add	r0, sp, #332
 1520 0320 FFF7FEFF 		bl	rcl_publish
 1521              	.LVL125:
 519:Core/Src/freertos.c **** /*    if (ret != RCL_RET_OK)
 1522              		.loc 1 519 5 is_stmt 1 view .LVU360
 519:Core/Src/freertos.c **** /*    if (ret != RCL_RET_OK)
 1523              		.loc 1 519 26 is_stmt 0 view .LVU361
 1524 0324 0022     		movs	r2, #0
ARM GAS  /tmp/ccj1n2cd.s 			page 51


 1525 0326 56A9     		add	r1, sp, #344
 1526 0328 57A8     		add	r0, sp, #348
 1527 032a FFF7FEFF 		bl	rcl_publish
 1528              	.LVL126:
 536:Core/Src/freertos.c **** 	  HAL_UART_Transmit(&huart5, Command_Request_Data, length, 10);
 1529              		.loc 1 536 4 is_stmt 1 view .LVU362
 537:Core/Src/freertos.c **** 
 1530              		.loc 1 537 4 view .LVU363
 1531 032e 464C     		ldr	r4, .L144+80
 1532 0330 0A23     		movs	r3, #10
 1533 0332 0722     		movs	r2, #7
 1534 0334 4549     		ldr	r1, .L144+84
 1535 0336 2046     		mov	r0, r4
 1536 0338 FFF7FEFF 		bl	HAL_UART_Transmit
 1537              	.LVL127:
 540:Core/Src/freertos.c **** //    if (HAL_UART_Receive(&huart5, Command_Response1, 50, 100) == HAL_OK) {
 1538              		.loc 1 540 5 view .LVU364
 543:Core/Src/freertos.c **** 
 1539              		.loc 1 543 6 view .LVU365
 1540 033c 4FF4FA73 		mov	r3, #500
 1541 0340 3222     		movs	r2, #50
 1542 0342 2F49     		ldr	r1, .L144+8
 1543 0344 2046     		mov	r0, r4
 1544 0346 FFF7FEFF 		bl	HAL_UART_Receive
 1545              	.LVL128:
 545:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1546              		.loc 1 545 6 view .LVU366
 1547              	.LBB6:
 545:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1548              		.loc 1 545 10 view .LVU367
 545:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1549              		.loc 1 545 14 is_stmt 0 view .LVU368
 1550 034a 0023     		movs	r3, #0
 545:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1551              		.loc 1 545 6 view .LVU369
 1552 034c 00E0     		b	.L90
 1553              	.LVL129:
 1554              	.L91:
 545:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1555              		.loc 1 545 40 is_stmt 1 discriminator 2 view .LVU370
 1556 034e 0133     		adds	r3, r3, #1
 1557              	.LVL130:
 1558              	.L90:
 545:Core/Src/freertos.c ****   		  if(Command_Response1[i] == 0xB8){
 1559              		.loc 1 545 23 discriminator 1 view .LVU371
 1560 0350 192B     		cmp	r3, #25
 1561 0352 3FF73EAF 		bgt	.L94
 546:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 1562              		.loc 1 546 7 view .LVU372
 546:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 1563              		.loc 1 546 27 is_stmt 0 view .LVU373
 1564 0356 2A4A     		ldr	r2, .L144+8
 1565 0358 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 546:Core/Src/freertos.c **** //    	    	  if(Command_Response1[i] == 0xB8 && Command_Response1[i+1] == 0xB7 && Command_Response
 1566              		.loc 1 546 9 view .LVU374
 1567 035a B82A     		cmp	r2, #184
 1568 035c F7D1     		bne	.L91
ARM GAS  /tmp/ccj1n2cd.s 			page 52


 549:Core/Src/freertos.c **** 
 1569              		.loc 1 549 13 is_stmt 1 discriminator 1 view .LVU375
 549:Core/Src/freertos.c **** 
 1570              		.loc 1 549 67 is_stmt 0 discriminator 1 view .LVU376
 1571 035e 5A1C     		adds	r2, r3, #1
 549:Core/Src/freertos.c **** 
 1572              		.loc 1 549 65 discriminator 1 view .LVU377
 1573 0360 2749     		ldr	r1, .L144+8
 1574 0362 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 549:Core/Src/freertos.c **** 
 1575              		.loc 1 549 45 discriminator 1 view .LVU378
 1576 0364 B72A     		cmp	r2, #183
 1577 0366 F2D1     		bne	.L91
 549:Core/Src/freertos.c **** 
 1578              		.loc 1 549 101 discriminator 2 view .LVU379
 1579 0368 9A1C     		adds	r2, r3, #2
 549:Core/Src/freertos.c **** 
 1580              		.loc 1 549 99 discriminator 2 view .LVU380
 1581 036a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 549:Core/Src/freertos.c **** 
 1582              		.loc 1 549 79 discriminator 2 view .LVU381
 1583 036c 012A     		cmp	r2, #1
 1584 036e EED1     		bne	.L91
 1585              	.LBB5:
 552:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1586              		.loc 1 552 21 view .LVU382
 1587 0370 0022     		movs	r2, #0
 1588 0372 F5E6     		b	.L92
 1589              	.LVL131:
 1590              	.L96:
 552:Core/Src/freertos.c ****   	    		          Command_Response2[j] = Command_Response1[i];
 1591              		.loc 1 552 21 view .LVU383
 1592              	.LBE5:
 1593              	.LBE6:
 725:Core/Src/freertos.c **** 		Run_State = 'U';
 1594              		.loc 1 725 7 is_stmt 1 view .LVU384
 1595 0374 013B     		subs	r3, r3, #1
 1596 0376 052B     		cmp	r3, #5
 1597 0378 3FF67BAF 		bhi	.L97
 1598 037c DFE803F0 		tbb	[pc, r3]
 1599              	.L99:
 1600 0380 03       		.byte	(.L104-.L99)/2
 1601 0381 27       		.byte	(.L103-.L99)/2
 1602 0382 7C       		.byte	(.L102-.L99)/2
 1603 0383 A3       		.byte	(.L101-.L99)/2
 1604 0384 C7       		.byte	(.L100-.L99)/2
 1605 0385 DD       		.byte	(.L98-.L99)/2
 1606              		.p2align 1
 1607              	.L104:
 726:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1608              		.loc 1 726 3 view .LVU385
 726:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1609              		.loc 1 726 13 is_stmt 0 view .LVU386
 1610 0386 274B     		ldr	r3, .L144+44
 1611 0388 5522     		movs	r2, #85
 1612 038a 1A70     		strb	r2, [r3]
 729:Core/Src/freertos.c **** 			Run_Dir = 'R';
ARM GAS  /tmp/ccj1n2cd.s 			page 53


 1613              		.loc 1 729 3 is_stmt 1 view .LVU387
 729:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1614              		.loc 1 729 5 is_stmt 0 view .LVU388
 1615 038c 0022     		movs	r2, #0
 1616 038e 0023     		movs	r3, #0
 1617 0390 FFF7FEFF 		bl	__aeabi_dcmplt
 1618              	.LVL132:
 1619 0394 50B9     		cbnz	r0, .L138
 732:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1620              		.loc 1 732 8 is_stmt 1 view .LVU389
 732:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1621              		.loc 1 732 10 is_stmt 0 view .LVU390
 1622 0396 0022     		movs	r2, #0
 1623 0398 0023     		movs	r3, #0
 1624 039a 2046     		mov	r0, r4
 1625 039c 2946     		mov	r1, r5
 1626 039e FFF7FEFF 		bl	__aeabi_dcmpge
 1627              	.LVL133:
 1628 03a2 30B1     		cbz	r0, .L107
 733:Core/Src/freertos.c **** 		}
 1629              		.loc 1 733 4 is_stmt 1 view .LVU391
 733:Core/Src/freertos.c **** 		}
 1630              		.loc 1 733 12 is_stmt 0 view .LVU392
 1631 03a4 214B     		ldr	r3, .L144+52
 1632 03a6 4622     		movs	r2, #70
 1633 03a8 1A70     		strb	r2, [r3]
 1634 03aa 02E0     		b	.L107
 1635              	.L138:
 730:Core/Src/freertos.c **** 		}
 1636              		.loc 1 730 4 is_stmt 1 view .LVU393
 730:Core/Src/freertos.c **** 		}
 1637              		.loc 1 730 12 is_stmt 0 view .LVU394
 1638 03ac 1F4B     		ldr	r3, .L144+52
 1639 03ae 5222     		movs	r2, #82
 1640 03b0 1A70     		strb	r2, [r3]
 1641              	.L107:
 735:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 1642              		.loc 1 735 3 is_stmt 1 view .LVU395
 1643 03b2 0294     		str	r4, [sp, #8]
 1644 03b4 25F00043 		bic	r3, r5, #-2147483648
 1645 03b8 0393     		str	r3, [sp, #12]
 1646 03ba 9DED020B 		vldr.64	d0, [sp, #8]
 1647 03be FFF7FEFF 		bl	PWM_R
 1648              	.LVL134:
 736:Core/Src/freertos.c **** 	}
 1649              		.loc 1 736 3 view .LVU396
 1650 03c2 154B     		ldr	r3, .L144+32
 1651 03c4 93ED000B 		vldr.64	d0, [r3]
 1652 03c8 FFF7FEFF 		bl	PWM_L
 1653              	.LVL135:
 1654 03cc 51E7     		b	.L97
 1655              	.L103:
 739:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1656              		.loc 1 739 3 view .LVU397
 739:Core/Src/freertos.c **** //		Run_Dir = 'F';
 1657              		.loc 1 739 13 is_stmt 0 view .LVU398
 1658 03ce 154B     		ldr	r3, .L144+44
ARM GAS  /tmp/ccj1n2cd.s 			page 54


 1659 03d0 5522     		movs	r2, #85
 1660 03d2 1A70     		strb	r2, [r3]
 741:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1661              		.loc 1 741 3 is_stmt 1 view .LVU399
 741:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1662              		.loc 1 741 5 is_stmt 0 view .LVU400
 1663 03d4 0022     		movs	r2, #0
 1664 03d6 0023     		movs	r3, #0
 1665 03d8 FFF7FEFF 		bl	__aeabi_dcmplt
 1666              	.LVL136:
 1667 03dc C0BB     		cbnz	r0, .L139
 744:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1668              		.loc 1 744 8 is_stmt 1 view .LVU401
 744:Core/Src/freertos.c **** 			Run_Dir = 'F';
 1669              		.loc 1 744 10 is_stmt 0 view .LVU402
 1670 03de 0022     		movs	r2, #0
 1671 03e0 0023     		movs	r3, #0
 1672 03e2 2046     		mov	r0, r4
 1673 03e4 2946     		mov	r1, r5
 1674 03e6 FFF7FEFF 		bl	__aeabi_dcmpge
 1675              	.LVL137:
 1676 03ea A0B3     		cbz	r0, .L111
 745:Core/Src/freertos.c **** 		}
 1677              		.loc 1 745 4 is_stmt 1 view .LVU403
 745:Core/Src/freertos.c **** 		}
 1678              		.loc 1 745 12 is_stmt 0 view .LVU404
 1679 03ec 0F4B     		ldr	r3, .L144+52
 1680 03ee 4622     		movs	r2, #70
 1681 03f0 1A70     		strb	r2, [r3]
 1682 03f2 30E0     		b	.L111
 1683              	.L145:
 1684 03f4 AFF30080 		.align	3
 1685              	.L144:
 1686 03f8 00000000 		.word	0
 1687 03fc 00000000 		.word	0
 1688 0400 00000000 		.word	.LANCHOR10
 1689 0404 00000000 		.word	.LANCHOR11
 1690 0408 00000000 		.word	.LANCHOR4
 1691 040c 00000000 		.word	.LANCHOR5
 1692 0410 00000000 		.word	.LANCHOR12
 1693 0414 00000000 		.word	.LANCHOR13
 1694 0418 00000000 		.word	.LANCHOR14
 1695 041c 00000000 		.word	.LANCHOR15
 1696 0420 00000000 		.word	.LANCHOR16
 1697 0424 00000000 		.word	.LANCHOR17
 1698 0428 00000000 		.word	.LANCHOR19
 1699 042c 00000000 		.word	.LANCHOR18
 1700 0430 00000000 		.word	.LANCHOR20
 1701 0434 00000000 		.word	.LANCHOR6
 1702 0438 00000000 		.word	.LANCHOR7
 1703 043c 40420F00 		.word	1000000
 1704 0440 00000000 		.word	.LANCHOR8
 1705 0444 78000000 		.word	.LC9
 1706 0448 00000000 		.word	huart5
 1707 044c 00000000 		.word	.LANCHOR9
 1708              	.L139:
 742:Core/Src/freertos.c **** 		}
ARM GAS  /tmp/ccj1n2cd.s 			page 55


 1709              		.loc 1 742 4 is_stmt 1 view .LVU405
 742:Core/Src/freertos.c **** 		}
 1710              		.loc 1 742 12 is_stmt 0 view .LVU406
 1711 0450 454B     		ldr	r3, .L146
 1712 0452 4C22     		movs	r2, #76
 1713 0454 1A70     		strb	r2, [r3]
 1714              	.L111:
 747:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 1715              		.loc 1 747 3 is_stmt 1 view .LVU407
 1716 0456 B0EE480A 		vmov.f32	s0, s16
 1717 045a F0EE680A 		vmov.f32	s1, s17
 1718 045e FFF7FEFF 		bl	PWM_R
 1719              	.LVL138:
 748:Core/Src/freertos.c **** 	}
 1720              		.loc 1 748 3 view .LVU408
 1721 0462 424B     		ldr	r3, .L146+4
 1722 0464 D3F800A0 		ldr	r10, [r3]
 1723 0468 5B68     		ldr	r3, [r3, #4]
 1724 046a 23F0004B 		bic	fp, r3, #-2147483648
 1725 046e 4BEC10AB 		vmov	d0, r10, fp
 1726 0472 FFF7FEFF 		bl	PWM_L
 1727              	.LVL139:
 1728 0476 FCE6     		b	.L97
 1729              	.L102:
 751:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1730              		.loc 1 751 3 view .LVU409
 751:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1731              		.loc 1 751 13 is_stmt 0 view .LVU410
 1732 0478 3D4B     		ldr	r3, .L146+8
 1733 047a 5522     		movs	r2, #85
 1734 047c 1A70     		strb	r2, [r3]
 753:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1735              		.loc 1 753 3 is_stmt 1 view .LVU411
 753:Core/Src/freertos.c **** 			Run_Dir = 'R';
 1736              		.loc 1 753 5 is_stmt 0 view .LVU412
 1737 047e 0022     		movs	r2, #0
 1738 0480 0023     		movs	r3, #0
 1739 0482 FFF7FEFF 		bl	__aeabi_dcmplt
 1740              	.LVL140:
 1741 0486 50B9     		cbnz	r0, .L140
 756:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1742              		.loc 1 756 8 is_stmt 1 view .LVU413
 756:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1743              		.loc 1 756 10 is_stmt 0 view .LVU414
 1744 0488 0022     		movs	r2, #0
 1745 048a 0023     		movs	r3, #0
 1746 048c 2046     		mov	r0, r4
 1747 048e 2946     		mov	r1, r5
 1748 0490 FFF7FEFF 		bl	__aeabi_dcmpge
 1749              	.LVL141:
 1750 0494 30B1     		cbz	r0, .L115
 757:Core/Src/freertos.c **** 		}
 1751              		.loc 1 757 4 is_stmt 1 view .LVU415
 757:Core/Src/freertos.c **** 		}
 1752              		.loc 1 757 12 is_stmt 0 view .LVU416
 1753 0496 344B     		ldr	r3, .L146
 1754 0498 4F22     		movs	r2, #79
ARM GAS  /tmp/ccj1n2cd.s 			page 56


 1755 049a 1A70     		strb	r2, [r3]
 1756 049c 02E0     		b	.L115
 1757              	.L140:
 754:Core/Src/freertos.c **** 		}
 1758              		.loc 1 754 4 is_stmt 1 view .LVU417
 754:Core/Src/freertos.c **** 		}
 1759              		.loc 1 754 12 is_stmt 0 view .LVU418
 1760 049e 324B     		ldr	r3, .L146
 1761 04a0 5222     		movs	r2, #82
 1762 04a2 1A70     		strb	r2, [r3]
 1763              	.L115:
 759:Core/Src/freertos.c **** 		PWM_L(fabs(pwm_m));
 1764              		.loc 1 759 3 is_stmt 1 view .LVU419
 1765 04a4 B0EE480A 		vmov.f32	s0, s16
 1766 04a8 F0EE680A 		vmov.f32	s1, s17
 1767 04ac FFF7FEFF 		bl	PWM_R
 1768              	.LVL142:
 760:Core/Src/freertos.c **** 	}
 1769              		.loc 1 760 3 view .LVU420
 1770 04b0 2E4B     		ldr	r3, .L146+4
 1771 04b2 D3F80080 		ldr	r8, [r3]
 1772 04b6 5B68     		ldr	r3, [r3, #4]
 1773 04b8 23F00049 		bic	r9, r3, #-2147483648
 1774 04bc 49EC108B 		vmov	d0, r8, r9
 1775 04c0 FFF7FEFF 		bl	PWM_L
 1776              	.LVL143:
 1777 04c4 D5E6     		b	.L97
 1778              	.L101:
 763:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1779              		.loc 1 763 3 view .LVU421
 763:Core/Src/freertos.c **** //		Run_Dir = 'O';
 1780              		.loc 1 763 13 is_stmt 0 view .LVU422
 1781 04c6 2A4B     		ldr	r3, .L146+8
 1782 04c8 5522     		movs	r2, #85
 1783 04ca 1A70     		strb	r2, [r3]
 765:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1784              		.loc 1 765 3 is_stmt 1 view .LVU423
 765:Core/Src/freertos.c **** 			Run_Dir = 'L';
 1785              		.loc 1 765 5 is_stmt 0 view .LVU424
 1786 04cc 0022     		movs	r2, #0
 1787 04ce 0023     		movs	r3, #0
 1788 04d0 FFF7FEFF 		bl	__aeabi_dcmplt
 1789              	.LVL144:
 1790 04d4 50B9     		cbnz	r0, .L141
 768:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1791              		.loc 1 768 8 is_stmt 1 view .LVU425
 768:Core/Src/freertos.c **** 			Run_Dir = 'O';
 1792              		.loc 1 768 10 is_stmt 0 view .LVU426
 1793 04d6 0022     		movs	r2, #0
 1794 04d8 0023     		movs	r3, #0
 1795 04da 2046     		mov	r0, r4
 1796 04dc 2946     		mov	r1, r5
 1797 04de FFF7FEFF 		bl	__aeabi_dcmpge
 1798              	.LVL145:
 1799 04e2 30B1     		cbz	r0, .L119
 769:Core/Src/freertos.c **** 		}
 1800              		.loc 1 769 4 is_stmt 1 view .LVU427
ARM GAS  /tmp/ccj1n2cd.s 			page 57


 769:Core/Src/freertos.c **** 		}
 1801              		.loc 1 769 12 is_stmt 0 view .LVU428
 1802 04e4 204B     		ldr	r3, .L146
 1803 04e6 4F22     		movs	r2, #79
 1804 04e8 1A70     		strb	r2, [r3]
 1805 04ea 02E0     		b	.L119
 1806              	.L141:
 766:Core/Src/freertos.c **** 		}
 1807              		.loc 1 766 4 is_stmt 1 view .LVU429
 766:Core/Src/freertos.c **** 		}
 1808              		.loc 1 766 12 is_stmt 0 view .LVU430
 1809 04ec 1E4B     		ldr	r3, .L146
 1810 04ee 4C22     		movs	r2, #76
 1811 04f0 1A70     		strb	r2, [r3]
 1812              	.L119:
 771:Core/Src/freertos.c **** 		PWM_L(pwm_p);
 1813              		.loc 1 771 3 is_stmt 1 view .LVU431
 1814 04f2 0494     		str	r4, [sp, #16]
 1815 04f4 25F00043 		bic	r3, r5, #-2147483648
 1816 04f8 0593     		str	r3, [sp, #20]
 1817 04fa 9DED040B 		vldr.64	d0, [sp, #16]
 1818 04fe FFF7FEFF 		bl	PWM_R
 1819              	.LVL146:
 772:Core/Src/freertos.c **** 	}
 1820              		.loc 1 772 3 view .LVU432
 1821 0502 1C4B     		ldr	r3, .L146+12
 1822 0504 93ED000B 		vldr.64	d0, [r3]
 1823 0508 FFF7FEFF 		bl	PWM_L
 1824              	.LVL147:
 1825 050c B1E6     		b	.L97
 1826              	.L100:
 775:Core/Src/freertos.c **** 		Run_Dir = 'F';
 1827              		.loc 1 775 3 view .LVU433
 775:Core/Src/freertos.c **** 		Run_Dir = 'F';
 1828              		.loc 1 775 13 is_stmt 0 view .LVU434
 1829 050e 184B     		ldr	r3, .L146+8
 1830 0510 5522     		movs	r2, #85
 1831 0512 1A70     		strb	r2, [r3]
 776:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1832              		.loc 1 776 3 is_stmt 1 view .LVU435
 776:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1833              		.loc 1 776 11 is_stmt 0 view .LVU436
 1834 0514 144B     		ldr	r3, .L146
 1835 0516 4622     		movs	r2, #70
 1836 0518 1A70     		strb	r2, [r3]
 777:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1837              		.loc 1 777 3 is_stmt 1 view .LVU437
 1838 051a 47EC106B 		vmov	d0, r6, r7
 1839 051e FFF7FEFF 		bl	PWM_R
 1840              	.LVL148:
 778:Core/Src/freertos.c **** 	}
 1841              		.loc 1 778 3 view .LVU438
 1842 0522 154B     		ldr	r3, .L146+16
 1843 0524 93ED042B 		vldr.64	d2, [r3, #16]
 1844 0528 93ED021B 		vldr.64	d1, [r3, #8]
 1845 052c 93ED000B 		vldr.64	d0, [r3]
 1846 0530 FFF7FEFF 		bl	CAL_LinearSpeed
ARM GAS  /tmp/ccj1n2cd.s 			page 58


 1847              	.LVL149:
 1848 0534 FFF7FEFF 		bl	PWM_L
 1849              	.LVL150:
 1850 0538 9BE6     		b	.L97
 1851              	.L98:
 781:Core/Src/freertos.c **** 		Run_Dir = 'O';
 1852              		.loc 1 781 3 view .LVU439
 781:Core/Src/freertos.c **** 		Run_Dir = 'O';
 1853              		.loc 1 781 13 is_stmt 0 view .LVU440
 1854 053a 0D4B     		ldr	r3, .L146+8
 1855 053c 5522     		movs	r2, #85
 1856 053e 1A70     		strb	r2, [r3]
 782:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1857              		.loc 1 782 3 is_stmt 1 view .LVU441
 782:Core/Src/freertos.c **** 		PWM_R(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1858              		.loc 1 782 11 is_stmt 0 view .LVU442
 1859 0540 094B     		ldr	r3, .L146
 1860 0542 4F22     		movs	r2, #79
 1861 0544 1A70     		strb	r2, [r3]
 783:Core/Src/freertos.c **** 		PWM_L(CAL_LinearSpeed(Linear.vx, Linear.vy, Linear.vz));
 1862              		.loc 1 783 3 is_stmt 1 view .LVU443
 1863 0546 47EC106B 		vmov	d0, r6, r7
 1864 054a FFF7FEFF 		bl	PWM_R
 1865              	.LVL151:
 784:Core/Src/freertos.c **** 	}
 1866              		.loc 1 784 3 view .LVU444
 1867 054e 0A4B     		ldr	r3, .L146+16
 1868 0550 93ED042B 		vldr.64	d2, [r3, #16]
 1869 0554 93ED021B 		vldr.64	d1, [r3, #8]
 1870 0558 93ED000B 		vldr.64	d0, [r3]
 1871 055c FFF7FEFF 		bl	CAL_LinearSpeed
 1872              	.LVL152:
 1873 0560 FFF7FEFF 		bl	PWM_L
 1874              	.LVL153:
 1875 0564 85E6     		b	.L97
 1876              	.L147:
 1877 0566 00BF     		.align	2
 1878              	.L146:
 1879 0568 00000000 		.word	.LANCHOR18
 1880 056c 00000000 		.word	.LANCHOR15
 1881 0570 00000000 		.word	.LANCHOR17
 1882 0574 00000000 		.word	.LANCHOR14
 1883 0578 00000000 		.word	.LANCHOR12
 1884              	.LBE7:
 1885              		.cfi_endproc
 1886              	.LFE143:
 1888              		.global	__aeabi_dcmpeq
 1889              		.global	__aeabi_dcmpgt
 1890              		.section	.text.MOTION_MODE,"ax",%progbits
 1891              		.align	1
 1892              		.global	MOTION_MODE
 1893              		.syntax unified
 1894              		.thumb
 1895              		.thumb_func
 1897              	MOTION_MODE:
 1898              	.LVL154:
 1899              	.LFB156:
ARM GAS  /tmp/ccj1n2cd.s 			page 59


1072:Core/Src/freertos.c **** 
1073:Core/Src/freertos.c **** 	void MOTION_MODE(double lx, double ly, double lz, double ax, double ay, double az)
1074:Core/Src/freertos.c **** 	{
 1900              		.loc 1 1074 2 view -0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 0
 1903              		@ frame_needed = 0, uses_anonymous_args = 0
 1904              		.loc 1 1074 2 is_stmt 0 view .LVU446
 1905 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1906              	.LCFI15:
 1907              		.cfi_def_cfa_offset 24
 1908              		.cfi_offset 3, -24
 1909              		.cfi_offset 4, -20
 1910              		.cfi_offset 5, -16
 1911              		.cfi_offset 6, -12
 1912              		.cfi_offset 7, -8
 1913              		.cfi_offset 14, -4
 1914 0002 55EC104B 		vmov	r4, r5, d0
 1915 0006 57EC156B 		vmov	r6, r7, d5
1075:Core/Src/freertos.c **** 		/*
1076:Core/Src/freertos.c **** 	    if(lx == 0 && az == 0) {
1077:Core/Src/freertos.c **** 	        m_mode = 0; // 정지
1078:Core/Src/freertos.c **** 	    }
1079:Core/Src/freertos.c **** 	    else {
1080:Core/Src/freertos.c **** 	    	if(az >= 0){
1081:Core/Src/freertos.c **** 	    		if(lx > 0){
1082:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
1083:Core/Src/freertos.c **** 	    		}
1084:Core/Src/freertos.c **** 	    		else if(lx < 0){
1085:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
1086:Core/Src/freertos.c **** 	    		}
1087:Core/Src/freertos.c **** 	    	}
1088:Core/Src/freertos.c **** 	    	else if(az < 0){
1089:Core/Src/freertos.c **** 	    		if(lx >= 0){
1090:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
1091:Core/Src/freertos.c **** 	    		}
1092:Core/Src/freertos.c **** 	    		else if(lx < 0){
1093:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
1094:Core/Src/freertos.c **** 	    		}
1095:Core/Src/freertos.c **** 	    	}
1096:Core/Src/freertos.c **** 	    }
1097:Core/Src/freertos.c **** 	    */
1098:Core/Src/freertos.c **** 
1099:Core/Src/freertos.c **** 	    if(lx == 0 && az == 0) {
 1916              		.loc 1 1099 6 is_stmt 1 view .LVU447
 1917              		.loc 1 1099 8 is_stmt 0 view .LVU448
 1918 000a 0022     		movs	r2, #0
 1919 000c 0023     		movs	r3, #0
 1920 000e 10EE100A 		vmov	r0, s0	@ int
 1921 0012 2946     		mov	r1, r5
 1922 0014 FFF7FEFF 		bl	__aeabi_dcmpeq
 1923              	.LVL155:
 1924              		.loc 1 1099 8 view .LVU449
 1925 0018 50B1     		cbz	r0, .L149
 1926              		.loc 1 1099 17 discriminator 1 view .LVU450
 1927 001a 0022     		movs	r2, #0
 1928 001c 0023     		movs	r3, #0
ARM GAS  /tmp/ccj1n2cd.s 			page 60


 1929 001e 3046     		mov	r0, r6
 1930 0020 3946     		mov	r1, r7
 1931 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 1932              	.LVL156:
 1933 0026 18B1     		cbz	r0, .L149
1100:Core/Src/freertos.c **** 	        m_mode = 0; // 정지
 1934              		.loc 1 1100 10 is_stmt 1 view .LVU451
 1935              		.loc 1 1100 17 is_stmt 0 view .LVU452
 1936 0028 2F4B     		ldr	r3, .L184
 1937 002a 0022     		movs	r2, #0
 1938 002c 1A60     		str	r2, [r3]
 1939              	.L148:
1101:Core/Src/freertos.c **** 	    }
1102:Core/Src/freertos.c **** 	    else{
1103:Core/Src/freertos.c **** 	    	if(az == 0){
1104:Core/Src/freertos.c **** 	    		if(lx>0){
1105:Core/Src/freertos.c **** 	    			m_mode = 5; // 직진
1106:Core/Src/freertos.c **** 	    		}
1107:Core/Src/freertos.c **** 	    		else if(lx<0){
1108:Core/Src/freertos.c **** 	    			m_mode = 6; // 후진
1109:Core/Src/freertos.c **** 	    		}
1110:Core/Src/freertos.c **** 	    	}
1111:Core/Src/freertos.c **** 	    	else if(az > 0){
1112:Core/Src/freertos.c **** 	    		if(lx >= 0){
1113:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
1114:Core/Src/freertos.c **** 	    		}
1115:Core/Src/freertos.c **** 	    		else if(lx < 0){
1116:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
1117:Core/Src/freertos.c **** 	    		}
1118:Core/Src/freertos.c **** 	    	}
1119:Core/Src/freertos.c **** 	    	else if(az < 0){
1120:Core/Src/freertos.c **** 	    		if(lx >= 0){
1121:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
1122:Core/Src/freertos.c **** 	    		}
1123:Core/Src/freertos.c **** 	    		else if(lx < 0){
1124:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
1125:Core/Src/freertos.c **** 	    		}
1126:Core/Src/freertos.c **** 	    	}
1127:Core/Src/freertos.c **** 	    }
1128:Core/Src/freertos.c **** 	}
 1940              		.loc 1 1128 2 view .LVU453
 1941 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1942              	.LVL157:
 1943              	.L149:
1103:Core/Src/freertos.c **** 	    		if(lx>0){
 1944              		.loc 1 1103 7 is_stmt 1 view .LVU454
1103:Core/Src/freertos.c **** 	    		if(lx>0){
 1945              		.loc 1 1103 9 is_stmt 0 view .LVU455
 1946 0030 0022     		movs	r2, #0
 1947 0032 0023     		movs	r3, #0
 1948 0034 3046     		mov	r0, r6
 1949 0036 3946     		mov	r1, r7
 1950 0038 FFF7FEFF 		bl	__aeabi_dcmpeq
 1951              	.LVL158:
 1952 003c B0B1     		cbz	r0, .L178
1104:Core/Src/freertos.c **** 	    			m_mode = 5; // 직진
 1953              		.loc 1 1104 8 is_stmt 1 view .LVU456
ARM GAS  /tmp/ccj1n2cd.s 			page 61


1104:Core/Src/freertos.c **** 	    			m_mode = 5; // 직진
 1954              		.loc 1 1104 10 is_stmt 0 view .LVU457
 1955 003e 0022     		movs	r2, #0
 1956 0040 0023     		movs	r3, #0
 1957 0042 2046     		mov	r0, r4
 1958 0044 2946     		mov	r1, r5
 1959 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 1960              	.LVL159:
 1961 004a 18B1     		cbz	r0, .L179
1105:Core/Src/freertos.c **** 	    		}
 1962              		.loc 1 1105 9 is_stmt 1 view .LVU458
1105:Core/Src/freertos.c **** 	    		}
 1963              		.loc 1 1105 16 is_stmt 0 view .LVU459
 1964 004c 264B     		ldr	r3, .L184
 1965 004e 0522     		movs	r2, #5
 1966 0050 1A60     		str	r2, [r3]
 1967 0052 ECE7     		b	.L148
 1968              	.L179:
1107:Core/Src/freertos.c **** 	    			m_mode = 6; // 후진
 1969              		.loc 1 1107 13 is_stmt 1 view .LVU460
1107:Core/Src/freertos.c **** 	    			m_mode = 6; // 후진
 1970              		.loc 1 1107 15 is_stmt 0 view .LVU461
 1971 0054 0022     		movs	r2, #0
 1972 0056 0023     		movs	r3, #0
 1973 0058 2046     		mov	r0, r4
 1974 005a 2946     		mov	r1, r5
 1975 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1976              	.LVL160:
 1977 0060 0028     		cmp	r0, #0
 1978 0062 E4D0     		beq	.L148
1108:Core/Src/freertos.c **** 	    		}
 1979              		.loc 1 1108 9 is_stmt 1 view .LVU462
1108:Core/Src/freertos.c **** 	    		}
 1980              		.loc 1 1108 16 is_stmt 0 view .LVU463
 1981 0064 204B     		ldr	r3, .L184
 1982 0066 0622     		movs	r2, #6
 1983 0068 1A60     		str	r2, [r3]
 1984 006a E0E7     		b	.L148
 1985              	.L178:
1111:Core/Src/freertos.c **** 	    		if(lx >= 0){
 1986              		.loc 1 1111 12 is_stmt 1 view .LVU464
1111:Core/Src/freertos.c **** 	    		if(lx >= 0){
 1987              		.loc 1 1111 14 is_stmt 0 view .LVU465
 1988 006c 0022     		movs	r2, #0
 1989 006e 0023     		movs	r3, #0
 1990 0070 3046     		mov	r0, r6
 1991 0072 3946     		mov	r1, r7
 1992 0074 FFF7FEFF 		bl	__aeabi_dcmpgt
 1993              	.LVL161:
 1994 0078 B0B1     		cbz	r0, .L180
1112:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
 1995              		.loc 1 1112 8 is_stmt 1 view .LVU466
1112:Core/Src/freertos.c **** 	    			m_mode = 2; // 2사분면
 1996              		.loc 1 1112 10 is_stmt 0 view .LVU467
 1997 007a 0022     		movs	r2, #0
 1998 007c 0023     		movs	r3, #0
 1999 007e 2046     		mov	r0, r4
ARM GAS  /tmp/ccj1n2cd.s 			page 62


 2000 0080 2946     		mov	r1, r5
 2001 0082 FFF7FEFF 		bl	__aeabi_dcmpge
 2002              	.LVL162:
 2003 0086 18B1     		cbz	r0, .L181
1113:Core/Src/freertos.c **** 	    		}
 2004              		.loc 1 1113 9 is_stmt 1 view .LVU468
1113:Core/Src/freertos.c **** 	    		}
 2005              		.loc 1 1113 16 is_stmt 0 view .LVU469
 2006 0088 174B     		ldr	r3, .L184
 2007 008a 0222     		movs	r2, #2
 2008 008c 1A60     		str	r2, [r3]
 2009 008e CEE7     		b	.L148
 2010              	.L181:
1115:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
 2011              		.loc 1 1115 13 is_stmt 1 view .LVU470
1115:Core/Src/freertos.c **** 	    			m_mode = 4; // 4사분면
 2012              		.loc 1 1115 15 is_stmt 0 view .LVU471
 2013 0090 0022     		movs	r2, #0
 2014 0092 0023     		movs	r3, #0
 2015 0094 2046     		mov	r0, r4
 2016 0096 2946     		mov	r1, r5
 2017 0098 FFF7FEFF 		bl	__aeabi_dcmplt
 2018              	.LVL163:
 2019 009c 0028     		cmp	r0, #0
 2020 009e C6D0     		beq	.L148
1116:Core/Src/freertos.c **** 	    		}
 2021              		.loc 1 1116 9 is_stmt 1 view .LVU472
1116:Core/Src/freertos.c **** 	    		}
 2022              		.loc 1 1116 16 is_stmt 0 view .LVU473
 2023 00a0 114B     		ldr	r3, .L184
 2024 00a2 0422     		movs	r2, #4
 2025 00a4 1A60     		str	r2, [r3]
 2026 00a6 C2E7     		b	.L148
 2027              	.L180:
1119:Core/Src/freertos.c **** 	    		if(lx >= 0){
 2028              		.loc 1 1119 12 is_stmt 1 view .LVU474
1119:Core/Src/freertos.c **** 	    		if(lx >= 0){
 2029              		.loc 1 1119 14 is_stmt 0 view .LVU475
 2030 00a8 0022     		movs	r2, #0
 2031 00aa 0023     		movs	r3, #0
 2032 00ac 3046     		mov	r0, r6
 2033 00ae 3946     		mov	r1, r7
 2034 00b0 FFF7FEFF 		bl	__aeabi_dcmplt
 2035              	.LVL164:
 2036 00b4 0028     		cmp	r0, #0
 2037 00b6 BAD0     		beq	.L148
1120:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
 2038              		.loc 1 1120 8 is_stmt 1 view .LVU476
1120:Core/Src/freertos.c **** 	    			m_mode = 1; // 1사분면
 2039              		.loc 1 1120 10 is_stmt 0 view .LVU477
 2040 00b8 0022     		movs	r2, #0
 2041 00ba 0023     		movs	r3, #0
 2042 00bc 2046     		mov	r0, r4
 2043 00be 2946     		mov	r1, r5
 2044 00c0 FFF7FEFF 		bl	__aeabi_dcmpge
 2045              	.LVL165:
 2046 00c4 18B1     		cbz	r0, .L182
ARM GAS  /tmp/ccj1n2cd.s 			page 63


1121:Core/Src/freertos.c **** 	    		}
 2047              		.loc 1 1121 9 is_stmt 1 view .LVU478
1121:Core/Src/freertos.c **** 	    		}
 2048              		.loc 1 1121 16 is_stmt 0 view .LVU479
 2049 00c6 084B     		ldr	r3, .L184
 2050 00c8 0122     		movs	r2, #1
 2051 00ca 1A60     		str	r2, [r3]
 2052 00cc AFE7     		b	.L148
 2053              	.L182:
1123:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
 2054              		.loc 1 1123 13 is_stmt 1 view .LVU480
1123:Core/Src/freertos.c **** 	    			m_mode = 3; // 3사분면
 2055              		.loc 1 1123 15 is_stmt 0 view .LVU481
 2056 00ce 0022     		movs	r2, #0
 2057 00d0 0023     		movs	r3, #0
 2058 00d2 2046     		mov	r0, r4
 2059 00d4 2946     		mov	r1, r5
 2060 00d6 FFF7FEFF 		bl	__aeabi_dcmplt
 2061              	.LVL166:
 2062 00da 0028     		cmp	r0, #0
 2063 00dc A7D0     		beq	.L148
1124:Core/Src/freertos.c **** 	    		}
 2064              		.loc 1 1124 9 is_stmt 1 view .LVU482
1124:Core/Src/freertos.c **** 	    		}
 2065              		.loc 1 1124 16 is_stmt 0 view .LVU483
 2066 00de 024B     		ldr	r3, .L184
 2067 00e0 0322     		movs	r2, #3
 2068 00e2 1A60     		str	r2, [r3]
 2069              		.loc 1 1128 2 view .LVU484
 2070 00e4 A3E7     		b	.L148
 2071              	.L185:
 2072 00e6 00BF     		.align	2
 2073              	.L184:
 2074 00e8 00000000 		.word	.LANCHOR16
 2075              		.cfi_endproc
 2076              	.LFE156:
 2078              		.section	.text.twist_subscription_callback,"ax",%progbits
 2079              		.align	1
 2080              		.global	twist_subscription_callback
 2081              		.syntax unified
 2082              		.thumb
 2083              		.thumb_func
 2085              	twist_subscription_callback:
 2086              	.LVL167:
 2087              	.LFB146:
 838:Core/Src/freertos.c **** 	    const geometry_msgs__msg__Twist * msg = (const geometry_msgs__msg__Twist *)msgin;
 2088              		.loc 1 838 2 is_stmt 1 view -0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 838:Core/Src/freertos.c **** 	    const geometry_msgs__msg__Twist * msg = (const geometry_msgs__msg__Twist *)msgin;
 2092              		.loc 1 838 2 is_stmt 0 view .LVU486
 2093 0000 10B5     		push	{r4, lr}
 2094              	.LCFI16:
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 4, -8
 2097              		.cfi_offset 14, -4
ARM GAS  /tmp/ccj1n2cd.s 			page 64


 2098 0002 0446     		mov	r4, r0
 839:Core/Src/freertos.c **** 
 2099              		.loc 1 839 6 is_stmt 1 view .LVU487
 2100              	.LVL168:
 841:Core/Src/freertos.c **** 
 2101              		.loc 1 841 6 view .LVU488
 2102 0004 4FF40061 		mov	r1, #2048
 2103 0008 0F48     		ldr	r0, .L188
 2104              	.LVL169:
 841:Core/Src/freertos.c **** 
 2105              		.loc 1 841 6 is_stmt 0 view .LVU489
 2106 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2107              	.LVL170:
 884:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 2108              		.loc 1 884 3 is_stmt 1 view .LVU490
 884:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 2109              		.loc 1 884 26 is_stmt 0 view .LVU491
 2110 000e 94ED000B 		vldr.64	d0, [r4]
 884:Core/Src/freertos.c **** 		Linear.vy = msg->linear.y;
 2111              		.loc 1 884 13 view .LVU492
 2112 0012 0E4B     		ldr	r3, .L188+4
 2113 0014 83ED000B 		vstr.64	d0, [r3]
 885:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 2114              		.loc 1 885 3 is_stmt 1 view .LVU493
 885:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 2115              		.loc 1 885 26 is_stmt 0 view .LVU494
 2116 0018 94ED021B 		vldr.64	d1, [r4, #8]
 885:Core/Src/freertos.c **** 		Linear.vz = msg->linear.z;
 2117              		.loc 1 885 13 view .LVU495
 2118 001c 83ED021B 		vstr.64	d1, [r3, #8]
 886:Core/Src/freertos.c **** 
 2119              		.loc 1 886 3 is_stmt 1 view .LVU496
 886:Core/Src/freertos.c **** 
 2120              		.loc 1 886 26 is_stmt 0 view .LVU497
 2121 0020 94ED042B 		vldr.64	d2, [r4, #16]
 886:Core/Src/freertos.c **** 
 2122              		.loc 1 886 13 view .LVU498
 2123 0024 83ED042B 		vstr.64	d2, [r3, #16]
 888:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 2124              		.loc 1 888 3 is_stmt 1 view .LVU499
 888:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 2125              		.loc 1 888 28 is_stmt 0 view .LVU500
 2126 0028 94ED063B 		vldr.64	d3, [r4, #24]
 888:Core/Src/freertos.c **** 		Angular.vy = msg->angular.y;
 2127              		.loc 1 888 14 view .LVU501
 2128 002c 084B     		ldr	r3, .L188+8
 2129 002e 83ED003B 		vstr.64	d3, [r3]
 889:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 2130              		.loc 1 889 3 is_stmt 1 view .LVU502
 889:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 2131              		.loc 1 889 28 is_stmt 0 view .LVU503
 2132 0032 94ED084B 		vldr.64	d4, [r4, #32]
 889:Core/Src/freertos.c **** 		Angular.vz = msg->angular.z;
 2133              		.loc 1 889 14 view .LVU504
 2134 0036 83ED024B 		vstr.64	d4, [r3, #8]
 890:Core/Src/freertos.c **** 
 2135              		.loc 1 890 3 is_stmt 1 view .LVU505
ARM GAS  /tmp/ccj1n2cd.s 			page 65


 890:Core/Src/freertos.c **** 
 2136              		.loc 1 890 28 is_stmt 0 view .LVU506
 2137 003a 94ED0A5B 		vldr.64	d5, [r4, #40]
 890:Core/Src/freertos.c **** 
 2138              		.loc 1 890 14 view .LVU507
 2139 003e 83ED045B 		vstr.64	d5, [r3, #16]
 892:Core/Src/freertos.c **** /*		if(Linear.vy != 0)	m_mode = 2;
 2140              		.loc 1 892 3 is_stmt 1 view .LVU508
 2141 0042 FFF7FEFF 		bl	MOTION_MODE
 2142              	.LVL171:
 912:Core/Src/freertos.c **** 
 2143              		.loc 1 912 2 is_stmt 0 view .LVU509
 2144 0046 10BD     		pop	{r4, pc}
 2145              	.LVL172:
 2146              	.L189:
 912:Core/Src/freertos.c **** 
 2147              		.loc 1 912 2 view .LVU510
 2148              		.align	2
 2149              	.L188:
 2150 0048 00040240 		.word	1073873920
 2151 004c 00000000 		.word	.LANCHOR12
 2152 0050 00000000 		.word	.LANCHOR13
 2153              		.cfi_endproc
 2154              	.LFE146:
 2156              		.section	.text.hex_to_signed_int,"ax",%progbits
 2157              		.align	1
 2158              		.global	hex_to_signed_int
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2163              	hex_to_signed_int:
 2164              	.LVL173:
 2165              	.LFB157:
1129:Core/Src/freertos.c **** 
1130:Core/Src/freertos.c **** 	int16_t hex_to_signed_int(const char *hex_str){
 2166              		.loc 1 1130 48 is_stmt 1 view -0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              		.loc 1 1130 48 is_stmt 0 view .LVU512
 2171 0000 08B5     		push	{r3, lr}
 2172              	.LCFI17:
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 3, -8
 2175              		.cfi_offset 14, -4
1131:Core/Src/freertos.c **** 		int16_t value = (int16_t)strtol(hex_str, NULL, 16);
 2176              		.loc 1 1131 3 is_stmt 1 view .LVU513
 2177              		.loc 1 1131 28 is_stmt 0 view .LVU514
 2178 0002 1022     		movs	r2, #16
 2179 0004 0021     		movs	r1, #0
 2180 0006 FFF7FEFF 		bl	strtol
 2181              	.LVL174:
1132:Core/Src/freertos.c **** 		if(value > 0x7FFF){
 2182              		.loc 1 1132 3 is_stmt 1 view .LVU515
1133:Core/Src/freertos.c **** 			value -= 0x10000;
1134:Core/Src/freertos.c **** 		}
1135:Core/Src/freertos.c **** 		return value;
ARM GAS  /tmp/ccj1n2cd.s 			page 66


 2183              		.loc 1 1135 3 view .LVU516
1136:Core/Src/freertos.c **** 	}
 2184              		.loc 1 1136 2 is_stmt 0 view .LVU517
 2185 000a 00B2     		sxth	r0, r0
 2186              		.loc 1 1136 2 view .LVU518
 2187 000c 08BD     		pop	{r3, pc}
 2188              		.cfi_endproc
 2189              	.LFE157:
 2191              		.global	defaultTask_attributes
 2192              		.section	.rodata.str1.4,"aMS",%progbits,1
 2193              		.align	2
 2194              	.LC10:
 2195 0000 64656661 		.ascii	"defaultTask\000"
 2195      756C7454 
 2195      61736B00 
 2196              		.global	defaultTaskControlBlock
 2197              		.global	defaultTaskBuffer
 2198              		.global	defaultTaskHandle
 2199              		.global	enc_str1
 2200              		.global	timeout
 2201              		.global	angle
 2202              		.global	pwm_m
 2203              		.global	pwm_p
 2204              		.global	m_mode
 2205              		.global	Angular
 2206              		.global	Linear
 2207              		.global	r_enc_op
 2208              		.global	l_enc_op
 2209              		.global	hall2
 2210              		.global	hall1
 2211              		.global	m2_rpm_p_10
 2212              		.global	m1_rpm_p_10
 2213              		.global	m2_rpm_p
 2214              		.global	m1_rpm_p
 2215              		.global	m2_rpm
 2216              		.global	m1_rpm
 2217              		.global	m2_deg_1_10
 2218              		.global	m1_deg_1_10
 2219              		.global	m2_deg_10_p
 2220              		.global	m1_deg_10_p
 2221              		.global	m2_deg_10
 2222              		.global	m1_deg_10
 2223              		.global	m2_deg
 2224              		.global	m1_deg
 2225              		.global	m2_rev
 2226              		.global	m1_rev
 2227              		.global	m2_hall
 2228              		.global	m1_hall
 2229              		.global	angular_velocity_z
 2230              		.global	angular_velocity_y
 2231              		.global	angular_velocity_x
 2232              		.global	linear_velocity_z
 2233              		.global	linear_velocity_y
 2234              		.global	linear_velocity_x
 2235              		.global	Run_Dir
 2236              		.global	Motor_State
 2237              		.global	Run_State
ARM GAS  /tmp/ccj1n2cd.s 			page 67


 2238              		.global	motor2
 2239              		.global	motor1
 2240              		.global	Command_Response2
 2241              		.global	Command_Response1
 2242              		.global	Command_Request_Data
 2243              		.section	.bss.Angular,"aw",%nobits
 2244              		.align	3
 2245              		.set	.LANCHOR13,. + 0
 2248              	Angular:
 2249 0000 00000000 		.space	24
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2250              		.section	.bss.Linear,"aw",%nobits
 2251              		.align	3
 2252              		.set	.LANCHOR12,. + 0
 2255              	Linear:
 2256 0000 00000000 		.space	24
 2256      00000000 
 2256      00000000 
 2256      00000000 
 2256      00000000 
 2257              		.section	.bss.Motor_State,"aw",%nobits
 2258              		.set	.LANCHOR19,. + 0
 2261              	Motor_State:
 2262 0000 00       		.space	1
 2263              		.section	.bss.Run_Dir,"aw",%nobits
 2264              		.set	.LANCHOR18,. + 0
 2267              	Run_Dir:
 2268 0000 00       		.space	1
 2269              		.section	.bss.Run_State,"aw",%nobits
 2270              		.set	.LANCHOR17,. + 0
 2273              	Run_State:
 2274 0000 00       		.space	1
 2275              		.section	.bss.angle,"aw",%nobits
 2276              		.align	3
 2279              	angle:
 2280 0000 00000000 		.space	8
 2280      00000000 
 2281              		.section	.bss.angular_velocity_x,"aw",%nobits
 2282              		.align	2
 2285              	angular_velocity_x:
 2286 0000 00000000 		.space	4
 2287              		.section	.bss.angular_velocity_y,"aw",%nobits
 2288              		.align	2
 2291              	angular_velocity_y:
 2292 0000 00000000 		.space	4
 2293              		.section	.bss.angular_velocity_z,"aw",%nobits
 2294              		.align	2
 2297              	angular_velocity_z:
 2298 0000 00000000 		.space	4
 2299              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 2300              		.align	2
 2303              	defaultTaskBuffer:
 2304 0000 00000000 		.space	12000
 2304      00000000 
ARM GAS  /tmp/ccj1n2cd.s 			page 68


 2304      00000000 
 2304      00000000 
 2304      00000000 
 2305              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 2306              		.align	2
 2309              	defaultTaskControlBlock:
 2310 0000 00000000 		.space	92
 2310      00000000 
 2310      00000000 
 2310      00000000 
 2310      00000000 
 2311              		.section	.bss.defaultTaskHandle,"aw",%nobits
 2312              		.align	2
 2313              		.set	.LANCHOR1,. + 0
 2316              	defaultTaskHandle:
 2317 0000 00000000 		.space	4
 2318              		.section	.bss.enc_str1,"aw",%nobits
 2319              		.align	2
 2320              		.set	.LANCHOR8,. + 0
 2323              	enc_str1:
 2324 0000 00000000 		.space	100
 2324      00000000 
 2324      00000000 
 2324      00000000 
 2324      00000000 
 2325              		.section	.bss.hall1,"aw",%nobits
 2326              		.align	2
 2327              		.set	.LANCHOR2,. + 0
 2330              	hall1:
 2331 0000 00000000 		.space	4
 2332              		.section	.bss.hall2,"aw",%nobits
 2333              		.align	2
 2334              		.set	.LANCHOR3,. + 0
 2337              	hall2:
 2338 0000 00000000 		.space	4
 2339              		.section	.bss.l_enc_op,"aw",%nobits
 2340              		.align	2
 2341              		.set	.LANCHOR7,. + 0
 2344              	l_enc_op:
 2345 0000 00000000 		.space	4
 2346              		.section	.bss.linear_velocity_x,"aw",%nobits
 2347              		.align	2
 2350              	linear_velocity_x:
 2351 0000 00000000 		.space	4
 2352              		.section	.bss.linear_velocity_y,"aw",%nobits
 2353              		.align	2
 2356              	linear_velocity_y:
 2357 0000 00000000 		.space	4
 2358              		.section	.bss.linear_velocity_z,"aw",%nobits
 2359              		.align	2
 2362              	linear_velocity_z:
 2363 0000 00000000 		.space	4
 2364              		.section	.bss.m1_deg,"aw",%nobits
 2365              		.align	2
 2368              	m1_deg:
 2369 0000 00000000 		.space	4
 2370              		.section	.bss.m1_deg_10,"aw",%nobits
ARM GAS  /tmp/ccj1n2cd.s 			page 69


 2371              		.align	2
 2374              	m1_deg_10:
 2375 0000 00000000 		.space	4
 2376              		.section	.bss.m1_deg_10_p,"aw",%nobits
 2377              		.align	2
 2380              	m1_deg_10_p:
 2381 0000 00000000 		.space	4
 2382              		.section	.bss.m1_deg_1_10,"aw",%nobits
 2383              		.align	2
 2386              	m1_deg_1_10:
 2387 0000 00000000 		.space	4
 2388              		.section	.bss.m1_hall,"aw",%nobits
 2389              		.align	2
 2392              	m1_hall:
 2393 0000 00000000 		.space	4
 2394              		.section	.bss.m1_rev,"aw",%nobits
 2395              		.align	2
 2398              	m1_rev:
 2399 0000 00000000 		.space	4
 2400              		.section	.bss.m1_rpm,"aw",%nobits
 2401              		.align	2
 2404              	m1_rpm:
 2405 0000 00000000 		.space	4
 2406              		.section	.bss.m1_rpm_p,"aw",%nobits
 2407              		.align	2
 2410              	m1_rpm_p:
 2411 0000 00000000 		.space	4
 2412              		.section	.bss.m1_rpm_p_10,"aw",%nobits
 2413              		.align	2
 2416              	m1_rpm_p_10:
 2417 0000 00000000 		.space	4
 2418              		.section	.bss.m2_deg,"aw",%nobits
 2419              		.align	2
 2422              	m2_deg:
 2423 0000 00000000 		.space	4
 2424              		.section	.bss.m2_deg_10,"aw",%nobits
 2425              		.align	2
 2428              	m2_deg_10:
 2429 0000 00000000 		.space	4
 2430              		.section	.bss.m2_deg_10_p,"aw",%nobits
 2431              		.align	2
 2434              	m2_deg_10_p:
 2435 0000 00000000 		.space	4
 2436              		.section	.bss.m2_deg_1_10,"aw",%nobits
 2437              		.align	2
 2440              	m2_deg_1_10:
 2441 0000 00000000 		.space	4
 2442              		.section	.bss.m2_hall,"aw",%nobits
 2443              		.align	2
 2446              	m2_hall:
 2447 0000 00000000 		.space	4
 2448              		.section	.bss.m2_rev,"aw",%nobits
 2449              		.align	2
 2452              	m2_rev:
 2453 0000 00000000 		.space	4
 2454              		.section	.bss.m2_rpm,"aw",%nobits
 2455              		.align	2
ARM GAS  /tmp/ccj1n2cd.s 			page 70


 2458              	m2_rpm:
 2459 0000 00000000 		.space	4
 2460              		.section	.bss.m2_rpm_p,"aw",%nobits
 2461              		.align	2
 2464              	m2_rpm_p:
 2465 0000 00000000 		.space	4
 2466              		.section	.bss.m2_rpm_p_10,"aw",%nobits
 2467              		.align	2
 2470              	m2_rpm_p_10:
 2471 0000 00000000 		.space	4
 2472              		.section	.bss.m_mode,"aw",%nobits
 2473              		.align	2
 2474              		.set	.LANCHOR16,. + 0
 2477              	m_mode:
 2478 0000 00000000 		.space	4
 2479              		.section	.bss.motor1,"aw",%nobits
 2480              		.align	2
 2481              		.set	.LANCHOR4,. + 0
 2484              	motor1:
 2485 0000 00000000 		.space	24
 2485      00000000 
 2485      00000000 
 2485      00000000 
 2485      00000000 
 2486              		.section	.bss.motor2,"aw",%nobits
 2487              		.align	2
 2488              		.set	.LANCHOR5,. + 0
 2491              	motor2:
 2492 0000 00000000 		.space	24
 2492      00000000 
 2492      00000000 
 2492      00000000 
 2492      00000000 
 2493              		.section	.bss.pwm_m,"aw",%nobits
 2494              		.align	3
 2495              		.set	.LANCHOR15,. + 0
 2498              	pwm_m:
 2499 0000 00000000 		.space	8
 2499      00000000 
 2500              		.section	.bss.pwm_p,"aw",%nobits
 2501              		.align	3
 2502              		.set	.LANCHOR14,. + 0
 2505              	pwm_p:
 2506 0000 00000000 		.space	8
 2506      00000000 
 2507              		.section	.bss.r_enc_op,"aw",%nobits
 2508              		.align	2
 2509              		.set	.LANCHOR6,. + 0
 2512              	r_enc_op:
 2513 0000 00000000 		.space	4
 2514              		.section	.data.Command_Request_Data,"aw"
 2515              		.align	2
 2516              		.set	.LANCHOR9,. + 0
 2519              	Command_Request_Data:
 2520 0000 B7B80104 		.ascii	"\267\270\001\004\001\322\271"
 2520      01D2B9
 2521              		.section	.data.Command_Response1,"aw"
ARM GAS  /tmp/ccj1n2cd.s 			page 71


 2522              		.align	2
 2523              		.set	.LANCHOR10,. + 0
 2526              	Command_Response1:
 2527 0000 30313233 		.ascii	"01234567890ABCDEF\000"
 2527      34353637 
 2527      38393041 
 2527      42434445 
 2527      4600
 2528 0012 00000000 		.space	32
 2528      00000000 
 2528      00000000 
 2528      00000000 
 2528      00000000 
 2529              		.section	.data.Command_Response2,"aw"
 2530              		.align	2
 2531              		.set	.LANCHOR11,. + 0
 2534              	Command_Response2:
 2535 0000 30313233 		.ascii	"01234567890ABCDEF\000"
 2535      34353637 
 2535      38393041 
 2535      42434445 
 2535      4600
 2536 0012 00000000 		.space	6
 2536      0000
 2537              		.section	.data.timeout,"aw"
 2538              		.align	2
 2539              		.set	.LANCHOR20,. + 0
 2542              	timeout:
 2543 0000 80969800 		.word	10000000
 2544              		.section	.rodata.defaultTask_attributes,"a"
 2545              		.align	2
 2546              		.set	.LANCHOR0,. + 0
 2549              	defaultTask_attributes:
 2550 0000 00000000 		.word	.LC10
 2551 0004 00000000 		.space	4
 2552 0008 00000000 		.word	defaultTaskControlBlock
 2553 000c 5C000000 		.word	92
 2554 0010 00000000 		.word	defaultTaskBuffer
 2555 0014 E02E0000 		.word	12000
 2556 0018 18000000 		.word	24
 2557 001c 00000000 		.space	8
 2557      00000000 
 2558              		.text
 2559              	.Letext0:
 2560              		.file 2 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 2561              		.file 3 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 2562              		.file 4 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 2563              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 2564              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2565              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 2566              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2567              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2568              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2569              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2570              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2571              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2572              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccj1n2cd.s 			page 72


 2573              		.file 15 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 2574              		.file 16 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/all
 2575              		.file 17 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/ret
 2576              		.file 18 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 2577              		.file 19 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 2578              		.file 20 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/typ
 2579              		.file 21 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/ini
 2580              		.file 22 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/con
 2581              		.file 23 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/nod
 2582              		.file 24 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 2583              		.file 25 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/pub
 2584              		.file 26 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/sub
 2585              		.file 27 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/cli
 2586              		.file 28 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/gua
 2587              		.file 29 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/ser
 2588              		.file 30 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 2589              		.file 31 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 2590              		.file 32 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 2591              		.file 33 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/eve
 2592              		.file 34 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/wai
 2593              		.file 35 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ty
 2594              		.file 36 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ex
 2595              		.file 37 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ex
 2596              		.file 38 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 2597              		.file 39 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 2598              		.file 40 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/uxr/cli
 2599              		.file 41 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2600              		.file 42 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rosidl_
 2601              		.file 43 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2602              		.file 44 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/geometr
 2603              		.file 45 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/geometr
 2604              		.file 46 "Core/Inc/usart.h"
 2605              		.file 47 "Core/Inc/tim.h"
 2606              		.file 48 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 2607              		.file 49 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 2608              		.file 50 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for
 2609              		.file 51 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/su
 2610              		.file 52 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/geometr
 2611              		.file 53 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2612              		.file 54 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/pu
 2613              		.file 55 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 2614              		.file 56 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/no
 2615              		.file 57 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/in
 2616              		.file 58 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw_mic
 2617              		.file 59 "<built-in>"
ARM GAS  /tmp/ccj1n2cd.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccj1n2cd.s:20     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccj1n2cd.s:26     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccj1n2cd.s:53     .text.MX_FREERTOS_Init:0000000000000014 $d
     /tmp/ccj1n2cd.s:931    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccj1n2cd.s:60     .rodata.messageCallback_test1.str1.4:0000000000000000 $d
     /tmp/ccj1n2cd.s:64     .text.messageCallback_test1:0000000000000000 $t
     /tmp/ccj1n2cd.s:70     .text.messageCallback_test1:0000000000000000 messageCallback_test1
     /tmp/ccj1n2cd.s:97     .text.messageCallback_test1:000000000000000c $d
     /tmp/ccj1n2cd.s:102    .text.messageCallback_test2:0000000000000000 $t
     /tmp/ccj1n2cd.s:108    .text.messageCallback_test2:0000000000000000 messageCallback_test2
     /tmp/ccj1n2cd.s:135    .text.messageCallback_test2:000000000000000c $d
     /tmp/ccj1n2cd.s:140    .text.RUN_INIT:0000000000000000 $t
     /tmp/ccj1n2cd.s:146    .text.RUN_INIT:0000000000000000 RUN_INIT
     /tmp/ccj1n2cd.s:187    .text.RUN_INIT:0000000000000034 $d
     /tmp/ccj1n2cd.s:194    .text.RUN_DIR:0000000000000000 $t
     /tmp/ccj1n2cd.s:200    .text.RUN_DIR:0000000000000000 RUN_DIR
     /tmp/ccj1n2cd.s:221    .text.RUN_DIR:000000000000000c $d
     /tmp/ccj1n2cd.s:301    .text.RUN_DIR:0000000000000084 $d
     /tmp/ccj1n2cd.s:306    .text.RUN_RB:0000000000000000 $t
     /tmp/ccj1n2cd.s:312    .text.RUN_RB:0000000000000000 RUN_RB
     /tmp/ccj1n2cd.s:375    .text.RUN_RB:000000000000003c $d
     /tmp/ccj1n2cd.s:381    .text.MOTOR_SS:0000000000000000 $t
     /tmp/ccj1n2cd.s:387    .text.MOTOR_SS:0000000000000000 MOTOR_SS
     /tmp/ccj1n2cd.s:450    .text.MOTOR_SS:000000000000003c $d
     /tmp/ccj1n2cd.s:456    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/ccj1n2cd.s:462    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccj1n2cd.s:585    .text.HAL_TIM_IC_CaptureCallback:0000000000000080 $d
     /tmp/ccj1n2cd.s:596    .text.PWM_R:0000000000000000 $t
     /tmp/ccj1n2cd.s:602    .text.PWM_R:0000000000000000 PWM_R
     /tmp/ccj1n2cd.s:668    .text.PWM_R:0000000000000040 $d
     /tmp/ccj1n2cd.s:674    .text.PWM_L:0000000000000000 $t
     /tmp/ccj1n2cd.s:680    .text.PWM_L:0000000000000000 PWM_L
     /tmp/ccj1n2cd.s:746    .text.PWM_L:0000000000000040 $d
     /tmp/ccj1n2cd.s:754    .text.CAL_LinearSpeed:0000000000000000 $t
     /tmp/ccj1n2cd.s:760    .text.CAL_LinearSpeed:0000000000000000 CAL_LinearSpeed
     /tmp/ccj1n2cd.s:815    .text.CAL_LinearSpeed:0000000000000038 $d
     /tmp/ccj1n2cd.s:822    .text.CAL_AngularSpeed:0000000000000000 $t
     /tmp/ccj1n2cd.s:828    .text.CAL_AngularSpeed:0000000000000000 CAL_AngularSpeed
     /tmp/ccj1n2cd.s:888    .text.CAL_AngularSpeed:0000000000000040 $d
     /tmp/ccj1n2cd.s:895    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccj1n2cd.s:925    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccj1n2cd.s:1148   .text.StartDefaultTask:00000000000000fc $d
     /tmp/ccj1n2cd.s:2085   .text.twist_subscription_callback:0000000000000000 twist_subscription_callback
     /tmp/ccj1n2cd.s:1176   .text.StartDefaultTask:0000000000000154 $t
     /tmp/ccj1n2cd.s:1600   .text.StartDefaultTask:0000000000000380 $d
     /tmp/ccj1n2cd.s:1606   .text.StartDefaultTask:0000000000000386 $t
     /tmp/ccj1n2cd.s:1686   .text.StartDefaultTask:00000000000003f8 $d
     /tmp/ccj1n2cd.s:1711   .text.StartDefaultTask:0000000000000450 $t
     /tmp/ccj1n2cd.s:1879   .text.StartDefaultTask:0000000000000568 $d
     /tmp/ccj1n2cd.s:1891   .text.MOTION_MODE:0000000000000000 $t
     /tmp/ccj1n2cd.s:1897   .text.MOTION_MODE:0000000000000000 MOTION_MODE
     /tmp/ccj1n2cd.s:2074   .text.MOTION_MODE:00000000000000e8 $d
     /tmp/ccj1n2cd.s:2079   .text.twist_subscription_callback:0000000000000000 $t
     /tmp/ccj1n2cd.s:2150   .text.twist_subscription_callback:0000000000000048 $d
     /tmp/ccj1n2cd.s:2157   .text.hex_to_signed_int:0000000000000000 $t
ARM GAS  /tmp/ccj1n2cd.s 			page 74


     /tmp/ccj1n2cd.s:2163   .text.hex_to_signed_int:0000000000000000 hex_to_signed_int
     /tmp/ccj1n2cd.s:2549   .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccj1n2cd.s:2193   .rodata.str1.4:0000000000000000 $d
     /tmp/ccj1n2cd.s:2309   .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccj1n2cd.s:2303   .bss.defaultTaskBuffer:0000000000000000 defaultTaskBuffer
     /tmp/ccj1n2cd.s:2316   .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccj1n2cd.s:2323   .bss.enc_str1:0000000000000000 enc_str1
     /tmp/ccj1n2cd.s:2542   .data.timeout:0000000000000000 timeout
     /tmp/ccj1n2cd.s:2279   .bss.angle:0000000000000000 angle
     /tmp/ccj1n2cd.s:2498   .bss.pwm_m:0000000000000000 pwm_m
     /tmp/ccj1n2cd.s:2505   .bss.pwm_p:0000000000000000 pwm_p
     /tmp/ccj1n2cd.s:2477   .bss.m_mode:0000000000000000 m_mode
     /tmp/ccj1n2cd.s:2248   .bss.Angular:0000000000000000 Angular
     /tmp/ccj1n2cd.s:2255   .bss.Linear:0000000000000000 Linear
     /tmp/ccj1n2cd.s:2512   .bss.r_enc_op:0000000000000000 r_enc_op
     /tmp/ccj1n2cd.s:2344   .bss.l_enc_op:0000000000000000 l_enc_op
     /tmp/ccj1n2cd.s:2337   .bss.hall2:0000000000000000 hall2
     /tmp/ccj1n2cd.s:2330   .bss.hall1:0000000000000000 hall1
     /tmp/ccj1n2cd.s:2470   .bss.m2_rpm_p_10:0000000000000000 m2_rpm_p_10
     /tmp/ccj1n2cd.s:2416   .bss.m1_rpm_p_10:0000000000000000 m1_rpm_p_10
     /tmp/ccj1n2cd.s:2464   .bss.m2_rpm_p:0000000000000000 m2_rpm_p
     /tmp/ccj1n2cd.s:2410   .bss.m1_rpm_p:0000000000000000 m1_rpm_p
     /tmp/ccj1n2cd.s:2458   .bss.m2_rpm:0000000000000000 m2_rpm
     /tmp/ccj1n2cd.s:2404   .bss.m1_rpm:0000000000000000 m1_rpm
     /tmp/ccj1n2cd.s:2440   .bss.m2_deg_1_10:0000000000000000 m2_deg_1_10
     /tmp/ccj1n2cd.s:2386   .bss.m1_deg_1_10:0000000000000000 m1_deg_1_10
     /tmp/ccj1n2cd.s:2434   .bss.m2_deg_10_p:0000000000000000 m2_deg_10_p
     /tmp/ccj1n2cd.s:2380   .bss.m1_deg_10_p:0000000000000000 m1_deg_10_p
     /tmp/ccj1n2cd.s:2428   .bss.m2_deg_10:0000000000000000 m2_deg_10
     /tmp/ccj1n2cd.s:2374   .bss.m1_deg_10:0000000000000000 m1_deg_10
     /tmp/ccj1n2cd.s:2422   .bss.m2_deg:0000000000000000 m2_deg
     /tmp/ccj1n2cd.s:2368   .bss.m1_deg:0000000000000000 m1_deg
     /tmp/ccj1n2cd.s:2452   .bss.m2_rev:0000000000000000 m2_rev
     /tmp/ccj1n2cd.s:2398   .bss.m1_rev:0000000000000000 m1_rev
     /tmp/ccj1n2cd.s:2446   .bss.m2_hall:0000000000000000 m2_hall
     /tmp/ccj1n2cd.s:2392   .bss.m1_hall:0000000000000000 m1_hall
     /tmp/ccj1n2cd.s:2297   .bss.angular_velocity_z:0000000000000000 angular_velocity_z
     /tmp/ccj1n2cd.s:2291   .bss.angular_velocity_y:0000000000000000 angular_velocity_y
     /tmp/ccj1n2cd.s:2285   .bss.angular_velocity_x:0000000000000000 angular_velocity_x
     /tmp/ccj1n2cd.s:2362   .bss.linear_velocity_z:0000000000000000 linear_velocity_z
     /tmp/ccj1n2cd.s:2356   .bss.linear_velocity_y:0000000000000000 linear_velocity_y
     /tmp/ccj1n2cd.s:2350   .bss.linear_velocity_x:0000000000000000 linear_velocity_x
     /tmp/ccj1n2cd.s:2267   .bss.Run_Dir:0000000000000000 Run_Dir
     /tmp/ccj1n2cd.s:2261   .bss.Motor_State:0000000000000000 Motor_State
     /tmp/ccj1n2cd.s:2273   .bss.Run_State:0000000000000000 Run_State
     /tmp/ccj1n2cd.s:2491   .bss.motor2:0000000000000000 motor2
     /tmp/ccj1n2cd.s:2484   .bss.motor1:0000000000000000 motor1
     /tmp/ccj1n2cd.s:2534   .data.Command_Response2:0000000000000000 Command_Response2
     /tmp/ccj1n2cd.s:2526   .data.Command_Response1:0000000000000000 Command_Response1
     /tmp/ccj1n2cd.s:2519   .data.Command_Request_Data:0000000000000000 Command_Request_Data
     /tmp/ccj1n2cd.s:2244   .bss.Angular:0000000000000000 $d
     /tmp/ccj1n2cd.s:2251   .bss.Linear:0000000000000000 $d
     /tmp/ccj1n2cd.s:2262   .bss.Motor_State:0000000000000000 $d
     /tmp/ccj1n2cd.s:2268   .bss.Run_Dir:0000000000000000 $d
     /tmp/ccj1n2cd.s:2274   .bss.Run_State:0000000000000000 $d
     /tmp/ccj1n2cd.s:2276   .bss.angle:0000000000000000 $d
     /tmp/ccj1n2cd.s:2282   .bss.angular_velocity_x:0000000000000000 $d
ARM GAS  /tmp/ccj1n2cd.s 			page 75


     /tmp/ccj1n2cd.s:2288   .bss.angular_velocity_y:0000000000000000 $d
     /tmp/ccj1n2cd.s:2294   .bss.angular_velocity_z:0000000000000000 $d
     /tmp/ccj1n2cd.s:2300   .bss.defaultTaskBuffer:0000000000000000 $d
     /tmp/ccj1n2cd.s:2306   .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccj1n2cd.s:2312   .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccj1n2cd.s:2319   .bss.enc_str1:0000000000000000 $d
     /tmp/ccj1n2cd.s:2326   .bss.hall1:0000000000000000 $d
     /tmp/ccj1n2cd.s:2333   .bss.hall2:0000000000000000 $d
     /tmp/ccj1n2cd.s:2340   .bss.l_enc_op:0000000000000000 $d
     /tmp/ccj1n2cd.s:2347   .bss.linear_velocity_x:0000000000000000 $d
     /tmp/ccj1n2cd.s:2353   .bss.linear_velocity_y:0000000000000000 $d
     /tmp/ccj1n2cd.s:2359   .bss.linear_velocity_z:0000000000000000 $d
     /tmp/ccj1n2cd.s:2365   .bss.m1_deg:0000000000000000 $d
     /tmp/ccj1n2cd.s:2371   .bss.m1_deg_10:0000000000000000 $d
     /tmp/ccj1n2cd.s:2377   .bss.m1_deg_10_p:0000000000000000 $d
     /tmp/ccj1n2cd.s:2383   .bss.m1_deg_1_10:0000000000000000 $d
     /tmp/ccj1n2cd.s:2389   .bss.m1_hall:0000000000000000 $d
     /tmp/ccj1n2cd.s:2395   .bss.m1_rev:0000000000000000 $d
     /tmp/ccj1n2cd.s:2401   .bss.m1_rpm:0000000000000000 $d
     /tmp/ccj1n2cd.s:2407   .bss.m1_rpm_p:0000000000000000 $d
     /tmp/ccj1n2cd.s:2413   .bss.m1_rpm_p_10:0000000000000000 $d
     /tmp/ccj1n2cd.s:2419   .bss.m2_deg:0000000000000000 $d
     /tmp/ccj1n2cd.s:2425   .bss.m2_deg_10:0000000000000000 $d
     /tmp/ccj1n2cd.s:2431   .bss.m2_deg_10_p:0000000000000000 $d
     /tmp/ccj1n2cd.s:2437   .bss.m2_deg_1_10:0000000000000000 $d
     /tmp/ccj1n2cd.s:2443   .bss.m2_hall:0000000000000000 $d
     /tmp/ccj1n2cd.s:2449   .bss.m2_rev:0000000000000000 $d
     /tmp/ccj1n2cd.s:2455   .bss.m2_rpm:0000000000000000 $d
     /tmp/ccj1n2cd.s:2461   .bss.m2_rpm_p:0000000000000000 $d
     /tmp/ccj1n2cd.s:2467   .bss.m2_rpm_p_10:0000000000000000 $d
     /tmp/ccj1n2cd.s:2473   .bss.m_mode:0000000000000000 $d
     /tmp/ccj1n2cd.s:2480   .bss.motor1:0000000000000000 $d
     /tmp/ccj1n2cd.s:2487   .bss.motor2:0000000000000000 $d
     /tmp/ccj1n2cd.s:2494   .bss.pwm_m:0000000000000000 $d
     /tmp/ccj1n2cd.s:2501   .bss.pwm_p:0000000000000000 $d
     /tmp/ccj1n2cd.s:2508   .bss.r_enc_op:0000000000000000 $d
     /tmp/ccj1n2cd.s:2515   .data.Command_Request_Data:0000000000000000 $d
     /tmp/ccj1n2cd.s:2522   .data.Command_Response1:0000000000000000 $d
     /tmp/ccj1n2cd.s:2530   .data.Command_Response2:0000000000000000 $d
     /tmp/ccj1n2cd.s:2538   .data.timeout:0000000000000000 $d
     /tmp/ccj1n2cd.s:2545   .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccj1n2cd.s:234    .text.RUN_DIR:0000000000000019 $d
     /tmp/ccj1n2cd.s:234    .text.RUN_DIR:000000000000001a $t

UNDEFINED SYMBOLS
osThreadNew
printf
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
__aeabi_dcmple
__aeabi_dcmpge
__aeabi_d2iz
htim4
htim3
__aeabi_dcmplt
__aeabi_dmul
__aeabi_ddiv
ARM GAS  /tmp/ccj1n2cd.s 			page 76


__aeabi_dadd
__aeabi_dsub
rmw_uros_set_custom_transport
rcutils_get_zero_initialized_allocator
rcutils_set_default_allocator
rcutils_get_default_allocator
rclc_support_init
rclc_node_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
rclc_publisher_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__String
rosidl_typesupport_c__get_message_type_support_handle__geometry_msgs__msg__Twist
rclc_subscription_init_default
rclc_executor_init
rclc_executor_add_subscription
cubemx_transport_read
cubemx_transport_write
cubemx_transport_close
cubemx_transport_open
huart3
microros_allocate
microros_deallocate
microros_reallocate
microros_zero_allocate
memset
rclc_executor_spin_some
osDelay
sprintf
strlen
rcl_publish
HAL_UART_Transmit
HAL_UART_Receive
huart5
__aeabi_dcmpeq
__aeabi_dcmpgt
HAL_GPIO_TogglePin
strtol
