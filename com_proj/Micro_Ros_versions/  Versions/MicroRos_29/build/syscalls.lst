ARM GAS  /tmp/ccGSvt8p.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initialise_monitor_handles,"ax",%progbits
  20              		.align	1
  21              		.global	initialise_monitor_handles
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author        : Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** **                   For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
ARM GAS  /tmp/ccGSvt8p.s 			page 2


  31:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  33:Core/Src/syscalls.c **** **      without specific prior written permission.
  34:Core/Src/syscalls.c **** **
  35:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/syscalls.c **** **
  46:Core/Src/syscalls.c **** *****************************************************************************
  47:Core/Src/syscalls.c **** */
  48:Core/Src/syscalls.c **** 
  49:Core/Src/syscalls.c **** // the code was modified by Fynn Boyer
  50:Core/Src/syscalls.c **** 
  51:Core/Src/syscalls.c **** /* Includes */
  52:Core/Src/syscalls.c **** #include <sys/stat.h>
  53:Core/Src/syscalls.c **** #include <stdlib.h>
  54:Core/Src/syscalls.c **** #include <errno.h>
  55:Core/Src/syscalls.c **** #include <stdio.h>
  56:Core/Src/syscalls.c **** #include <signal.h>
  57:Core/Src/syscalls.c **** #include <time.h>
  58:Core/Src/syscalls.c **** #include <sys/time.h>
  59:Core/Src/syscalls.c **** #include <sys/times.h>
  60:Core/Src/syscalls.c **** 
  61:Core/Src/syscalls.c **** 
  62:Core/Src/syscalls.c **** /* Variables */
  63:Core/Src/syscalls.c **** //#undef errno
  64:Core/Src/syscalls.c **** extern int errno;
  65:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  66:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  67:Core/Src/syscalls.c **** 
  68:Core/Src/syscalls.c **** register char * stack_ptr asm("sp");
  69:Core/Src/syscalls.c **** 
  70:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  71:Core/Src/syscalls.c **** char **environ = __env;
  72:Core/Src/syscalls.c **** 
  73:Core/Src/syscalls.c **** extern char _estack;  // see ld file
  74:Core/Src/syscalls.c **** extern char _Min_Stack_Size;  // see ld file
  75:Core/Src/syscalls.c **** 
  76:Core/Src/syscalls.c **** /* Functions */
  77:Core/Src/syscalls.c **** void initialise_monitor_handles()
  78:Core/Src/syscalls.c **** {
  29              		.loc 1 78 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  79:Core/Src/syscalls.c **** }
  34              		.loc 1 79 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/ccGSvt8p.s 			page 3


  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
  40              		.align	1
  41              		.global	_getpid
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	_getpid:
  47              	.LFB26:
  80:Core/Src/syscalls.c **** 
  81:Core/Src/syscalls.c **** int _getpid(void)
  82:Core/Src/syscalls.c **** {
  48              		.loc 1 82 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  83:Core/Src/syscalls.c ****     return 1;
  53              		.loc 1 83 5 view .LVU3
  84:Core/Src/syscalls.c **** }
  54              		.loc 1 84 1 is_stmt 0 view .LVU4
  55 0000 0120     		movs	r0, #1
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE26:
  60              		.section	.text._kill,"ax",%progbits
  61              		.align	1
  62              		.global	_kill
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	_kill:
  68              	.LVL0:
  69              	.LFB27:
  85:Core/Src/syscalls.c **** 
  86:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  87:Core/Src/syscalls.c **** {
  70              		.loc 1 87 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		.loc 1 87 1 is_stmt 0 view .LVU6
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  88:Core/Src/syscalls.c ****     errno = EINVAL;
  80              		.loc 1 88 5 is_stmt 1 view .LVU7
  81 0002 FFF7FEFF 		bl	__errno
  82              	.LVL1:
  83              		.loc 1 88 11 is_stmt 0 view .LVU8
  84 0006 1623     		movs	r3, #22
  85 0008 0360     		str	r3, [r0]
  89:Core/Src/syscalls.c ****     return -1;
  86              		.loc 1 89 5 is_stmt 1 view .LVU9
  90:Core/Src/syscalls.c **** }
ARM GAS  /tmp/ccGSvt8p.s 			page 4


  87              		.loc 1 90 1 is_stmt 0 view .LVU10
  88 000a 4FF0FF30 		mov	r0, #-1
  89 000e 08BD     		pop	{r3, pc}
  90              		.cfi_endproc
  91              	.LFE27:
  93              		.section	.text._exit,"ax",%progbits
  94              		.align	1
  95              		.global	_exit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_exit:
 101              	.LVL2:
 102              	.LFB28:
  91:Core/Src/syscalls.c **** 
  92:Core/Src/syscalls.c **** void _exit (int status)
  93:Core/Src/syscalls.c **** {
 103              		.loc 1 93 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 93 1 is_stmt 0 view .LVU12
 109 0000 08B5     		push	{r3, lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 3, -8
 113              		.cfi_offset 14, -4
  94:Core/Src/syscalls.c ****     _kill(status, -1);
 114              		.loc 1 94 5 is_stmt 1 view .LVU13
 115 0002 4FF0FF31 		mov	r1, #-1
 116 0006 FFF7FEFF 		bl	_kill
 117              	.LVL3:
 118              	.L6:
  95:Core/Src/syscalls.c ****     while (1) {}        /* Make sure we hang here */
 119              		.loc 1 95 5 discriminator 1 view .LVU14
 120              		.loc 1 95 16 discriminator 1 view .LVU15
 121              		.loc 1 95 11 discriminator 1 view .LVU16
 122 000a FEE7     		b	.L6
 123              		.cfi_endproc
 124              	.LFE28:
 126              		.section	.text._read,"ax",%progbits
 127              		.align	1
 128              		.weak	_read
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	_read:
 134              	.LVL4:
 135              	.LFB29:
  96:Core/Src/syscalls.c **** }
  97:Core/Src/syscalls.c **** 
  98:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  99:Core/Src/syscalls.c **** {
 136              		.loc 1 99 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccGSvt8p.s 			page 5


 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 99 1 is_stmt 0 view .LVU18
 141 0000 70B5     		push	{r4, r5, r6, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 16
 144              		.cfi_offset 4, -16
 145              		.cfi_offset 5, -12
 146              		.cfi_offset 6, -8
 147              		.cfi_offset 14, -4
 148 0002 0C46     		mov	r4, r1
 149 0004 1646     		mov	r6, r2
 100:Core/Src/syscalls.c ****     int DataIdx;
 150              		.loc 1 100 5 is_stmt 1 view .LVU19
 101:Core/Src/syscalls.c **** 
 102:Core/Src/syscalls.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 151              		.loc 1 102 5 view .LVU20
 152              	.LVL5:
 153              		.loc 1 102 18 is_stmt 0 view .LVU21
 154 0006 0025     		movs	r5, #0
 155              		.loc 1 102 5 view .LVU22
 156 0008 06E0     		b	.L9
 157              	.LVL6:
 158              	.L10:
 103:Core/Src/syscalls.c ****     {
 104:Core/Src/syscalls.c ****         *ptr++ = __io_getchar();
 159              		.loc 1 104 9 is_stmt 1 discriminator 3 view .LVU23
 160              		.loc 1 104 18 is_stmt 0 discriminator 3 view .LVU24
 161 000a FFF7FEFF 		bl	__io_getchar
 162              	.LVL7:
 163              		.loc 1 104 13 discriminator 3 view .LVU25
 164 000e 2146     		mov	r1, r4
 165              	.LVL8:
 166              		.loc 1 104 16 discriminator 3 view .LVU26
 167 0010 01F8010B 		strb	r0, [r1], #1
 168              	.LVL9:
 102:Core/Src/syscalls.c ****     {
 169              		.loc 1 102 45 is_stmt 1 discriminator 3 view .LVU27
 170 0014 0135     		adds	r5, r5, #1
 171              	.LVL10:
 172              		.loc 1 104 13 is_stmt 0 discriminator 3 view .LVU28
 173 0016 0C46     		mov	r4, r1
 174              	.LVL11:
 175              	.L9:
 102:Core/Src/syscalls.c ****     {
 176              		.loc 1 102 31 is_stmt 1 discriminator 1 view .LVU29
 177 0018 B542     		cmp	r5, r6
 178 001a F6DB     		blt	.L10
 105:Core/Src/syscalls.c ****     }
 106:Core/Src/syscalls.c **** 
 107:Core/Src/syscalls.c **** return len;
 179              		.loc 1 107 1 view .LVU30
 108:Core/Src/syscalls.c **** }
 180              		.loc 1 108 1 is_stmt 0 view .LVU31
 181 001c 3046     		mov	r0, r6
 182 001e 70BD     		pop	{r4, r5, r6, pc}
 183              		.loc 1 108 1 view .LVU32
 184              		.cfi_endproc
ARM GAS  /tmp/ccGSvt8p.s 			page 6


 185              	.LFE29:
 187              		.section	.text._write,"ax",%progbits
 188              		.align	1
 189              		.weak	_write
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	_write:
 195              	.LVL12:
 196              	.LFB30:
 109:Core/Src/syscalls.c **** 
 110:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 111:Core/Src/syscalls.c **** {
 197              		.loc 1 111 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		.loc 1 111 1 is_stmt 0 view .LVU34
 202 0000 70B5     		push	{r4, r5, r6, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 16
 205              		.cfi_offset 4, -16
 206              		.cfi_offset 5, -12
 207              		.cfi_offset 6, -8
 208              		.cfi_offset 14, -4
 209 0002 0C46     		mov	r4, r1
 210 0004 1646     		mov	r6, r2
 112:Core/Src/syscalls.c ****     int DataIdx;
 211              		.loc 1 112 5 is_stmt 1 view .LVU35
 113:Core/Src/syscalls.c **** 
 114:Core/Src/syscalls.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 212              		.loc 1 114 5 view .LVU36
 213              	.LVL13:
 214              		.loc 1 114 18 is_stmt 0 view .LVU37
 215 0006 0025     		movs	r5, #0
 216              		.loc 1 114 5 view .LVU38
 217 0008 04E0     		b	.L13
 218              	.LVL14:
 219              	.L14:
 115:Core/Src/syscalls.c ****     {
 116:Core/Src/syscalls.c ****         __io_putchar(*ptr++);
 220              		.loc 1 116 9 is_stmt 1 discriminator 3 view .LVU39
 221              		.loc 1 116 9 is_stmt 0 discriminator 3 view .LVU40
 222 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 223              	.LVL15:
 224              		.loc 1 116 9 discriminator 3 view .LVU41
 225 000e FFF7FEFF 		bl	__io_putchar
 226              	.LVL16:
 114:Core/Src/syscalls.c ****     {
 227              		.loc 1 114 45 is_stmt 1 discriminator 3 view .LVU42
 228 0012 0135     		adds	r5, r5, #1
 229              	.LVL17:
 230              	.L13:
 114:Core/Src/syscalls.c ****     {
 231              		.loc 1 114 31 discriminator 1 view .LVU43
 232 0014 B542     		cmp	r5, r6
 233 0016 F8DB     		blt	.L14
ARM GAS  /tmp/ccGSvt8p.s 			page 7


 117:Core/Src/syscalls.c ****     }
 118:Core/Src/syscalls.c ****     return len;
 234              		.loc 1 118 5 view .LVU44
 119:Core/Src/syscalls.c **** }
 235              		.loc 1 119 1 is_stmt 0 view .LVU45
 236 0018 3046     		mov	r0, r6
 237 001a 70BD     		pop	{r4, r5, r6, pc}
 238              		.loc 1 119 1 view .LVU46
 239              		.cfi_endproc
 240              	.LFE30:
 242              		.section	.text._sbrk,"ax",%progbits
 243              		.align	1
 244              		.global	_sbrk
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	_sbrk:
 250              	.LVL18:
 251              	.LFB31:
 120:Core/Src/syscalls.c **** 
 121:Core/Src/syscalls.c **** caddr_t _sbrk(int incr) {
 252              		.loc 1 121 25 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		.loc 1 121 25 is_stmt 0 view .LVU48
 257 0000 08B5     		push	{r3, lr}
 258              	.LCFI4:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 262 0002 0346     		mov	r3, r0
 122:Core/Src/syscalls.c ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 263              		.loc 1 122 5 is_stmt 1 view .LVU49
 123:Core/Src/syscalls.c ****     static char *heap_end;
 264              		.loc 1 123 5 view .LVU50
 124:Core/Src/syscalls.c ****     char *prev_heap_end;
 265              		.loc 1 124 5 view .LVU51
 125:Core/Src/syscalls.c **** 
 126:Core/Src/syscalls.c ****     if (heap_end == NULL) heap_end = &__heap_start__;
 266              		.loc 1 126 5 view .LVU52
 267              		.loc 1 126 18 is_stmt 0 view .LVU53
 268 0004 0D4A     		ldr	r2, .L23
 269 0006 1268     		ldr	r2, [r2]
 270              		.loc 1 126 8 view .LVU54
 271 0008 5AB1     		cbz	r2, .L21
 272              	.L17:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c ****     prev_heap_end = heap_end;
 273              		.loc 1 128 5 is_stmt 1 view .LVU55
 274              		.loc 1 128 19 is_stmt 0 view .LVU56
 275 000a 0C4A     		ldr	r2, .L23
 276 000c 1068     		ldr	r0, [r2]
 277              	.LVL19:
 129:Core/Src/syscalls.c **** 
 130:Core/Src/syscalls.c ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 278              		.loc 1 130 5 is_stmt 1 view .LVU57
ARM GAS  /tmp/ccGSvt8p.s 			page 8


 279              		.loc 1 130 18 is_stmt 0 view .LVU58
 280 000e 0344     		add	r3, r3, r0
 281              	.LVL20:
 282              		.loc 1 130 36 view .LVU59
 283 0010 0B4A     		ldr	r2, .L23+4
 284 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 285 0014 0B4A     		ldr	r2, .L23+8
 286 0016 521A     		subs	r2, r2, r1
 287              		.loc 1 130 8 view .LVU60
 288 0018 9342     		cmp	r3, r2
 289 001a 06D8     		bhi	.L22
 131:Core/Src/syscalls.c ****             __asm("BKPT #0\n");
 132:Core/Src/syscalls.c ****         errno = ENOMEM;
 133:Core/Src/syscalls.c ****         return (caddr_t)-1;
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c ****     }
 136:Core/Src/syscalls.c **** 
 137:Core/Src/syscalls.c ****     heap_end += incr;
 290              		.loc 1 137 5 is_stmt 1 view .LVU61
 291              		.loc 1 137 14 is_stmt 0 view .LVU62
 292 001c 074A     		ldr	r2, .L23
 293 001e 1360     		str	r3, [r2]
 138:Core/Src/syscalls.c ****     return (caddr_t)prev_heap_end;
 294              		.loc 1 138 5 is_stmt 1 view .LVU63
 295              	.LVL21:
 296              	.L16:
 139:Core/Src/syscalls.c **** 
 140:Core/Src/syscalls.c **** }
 297              		.loc 1 140 1 is_stmt 0 view .LVU64
 298 0020 08BD     		pop	{r3, pc}
 299              	.LVL22:
 300              	.L21:
 126:Core/Src/syscalls.c **** 
 301              		.loc 1 126 27 is_stmt 1 discriminator 1 view .LVU65
 126:Core/Src/syscalls.c **** 
 302              		.loc 1 126 36 is_stmt 0 discriminator 1 view .LVU66
 303 0022 064A     		ldr	r2, .L23
 304 0024 0849     		ldr	r1, .L23+12
 305 0026 1160     		str	r1, [r2]
 306 0028 EFE7     		b	.L17
 307              	.LVL23:
 308              	.L22:
 131:Core/Src/syscalls.c ****         errno = ENOMEM;
 309              		.loc 1 131 13 is_stmt 1 view .LVU67
 310              		.syntax unified
 311              	@ 131 "Core/Src/syscalls.c" 1
 312 002a 00BE     		BKPT #0
 313              	
 314              	@ 0 "" 2
 132:Core/Src/syscalls.c ****         return (caddr_t)-1;
 315              		.loc 1 132 9 view .LVU68
 316              		.thumb
 317              		.syntax unified
 318 002c FFF7FEFF 		bl	__errno
 319              	.LVL24:
 132:Core/Src/syscalls.c ****         return (caddr_t)-1;
 320              		.loc 1 132 15 is_stmt 0 view .LVU69
ARM GAS  /tmp/ccGSvt8p.s 			page 9


 321 0030 0C23     		movs	r3, #12
 322 0032 0360     		str	r3, [r0]
 133:Core/Src/syscalls.c **** 
 323              		.loc 1 133 9 is_stmt 1 view .LVU70
 133:Core/Src/syscalls.c **** 
 324              		.loc 1 133 16 is_stmt 0 view .LVU71
 325 0034 4FF0FF30 		mov	r0, #-1
 326 0038 F2E7     		b	.L16
 327              	.L24:
 328 003a 00BF     		.align	2
 329              	.L23:
 330 003c 00000000 		.word	.LANCHOR0
 331 0040 00000000 		.word	_Min_Stack_Size
 332 0044 00000000 		.word	_estack
 333 0048 00000000 		.word	end
 334              		.cfi_endproc
 335              	.LFE31:
 337              		.section	.text._close,"ax",%progbits
 338              		.align	1
 339              		.global	_close
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	_close:
 345              	.LVL25:
 346              	.LFB32:
 141:Core/Src/syscalls.c **** 
 142:Core/Src/syscalls.c **** int _close(int file)
 143:Core/Src/syscalls.c **** {
 347              		.loc 1 143 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 144:Core/Src/syscalls.c ****     return -1;
 352              		.loc 1 144 5 view .LVU73
 145:Core/Src/syscalls.c **** }
 353              		.loc 1 145 1 is_stmt 0 view .LVU74
 354 0000 4FF0FF30 		mov	r0, #-1
 355              	.LVL26:
 356              		.loc 1 145 1 view .LVU75
 357 0004 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE32:
 361              		.section	.text._fstat,"ax",%progbits
 362              		.align	1
 363              		.global	_fstat
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 368              	_fstat:
 369              	.LVL27:
 370              	.LFB33:
 146:Core/Src/syscalls.c **** 
 147:Core/Src/syscalls.c **** 
 148:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 149:Core/Src/syscalls.c **** {
ARM GAS  /tmp/ccGSvt8p.s 			page 10


 371              		.loc 1 149 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 150:Core/Src/syscalls.c ****     st->st_mode = S_IFCHR;
 376              		.loc 1 150 5 view .LVU77
 377              		.loc 1 150 17 is_stmt 0 view .LVU78
 378 0000 4FF40053 		mov	r3, #8192
 379 0004 4B60     		str	r3, [r1, #4]
 151:Core/Src/syscalls.c ****     return 0;
 380              		.loc 1 151 5 is_stmt 1 view .LVU79
 152:Core/Src/syscalls.c **** }
 381              		.loc 1 152 1 is_stmt 0 view .LVU80
 382 0006 0020     		movs	r0, #0
 383              	.LVL28:
 384              		.loc 1 152 1 view .LVU81
 385 0008 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE33:
 389              		.section	.text._isatty,"ax",%progbits
 390              		.align	1
 391              		.global	_isatty
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	_isatty:
 397              	.LVL29:
 398              	.LFB34:
 153:Core/Src/syscalls.c **** 
 154:Core/Src/syscalls.c **** int _isatty(int file)
 155:Core/Src/syscalls.c **** {
 399              		.loc 1 155 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 156:Core/Src/syscalls.c ****     return 1;
 404              		.loc 1 156 5 view .LVU83
 157:Core/Src/syscalls.c **** }
 405              		.loc 1 157 1 is_stmt 0 view .LVU84
 406 0000 0120     		movs	r0, #1
 407              	.LVL30:
 408              		.loc 1 157 1 view .LVU85
 409 0002 7047     		bx	lr
 410              		.cfi_endproc
 411              	.LFE34:
 413              		.section	.text._lseek,"ax",%progbits
 414              		.align	1
 415              		.global	_lseek
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	_lseek:
 421              	.LVL31:
 422              	.LFB35:
 158:Core/Src/syscalls.c **** 
ARM GAS  /tmp/ccGSvt8p.s 			page 11


 159:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 160:Core/Src/syscalls.c **** {
 423              		.loc 1 160 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 161:Core/Src/syscalls.c ****     return 0;
 428              		.loc 1 161 5 view .LVU87
 162:Core/Src/syscalls.c **** }
 429              		.loc 1 162 1 is_stmt 0 view .LVU88
 430 0000 0020     		movs	r0, #0
 431              	.LVL32:
 432              		.loc 1 162 1 view .LVU89
 433 0002 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE35:
 437              		.section	.text._open,"ax",%progbits
 438              		.align	1
 439              		.global	_open
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	_open:
 445              	.LVL33:
 446              	.LFB36:
 163:Core/Src/syscalls.c **** 
 164:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 165:Core/Src/syscalls.c **** {
 447              		.loc 1 165 1 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 4, pretend = 12, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 1
 451              		@ link register save eliminated.
 452              		.loc 1 165 1 is_stmt 0 view .LVU91
 453 0000 0EB4     		push	{r1, r2, r3}
 454              	.LCFI5:
 455              		.cfi_def_cfa_offset 12
 456              		.cfi_offset 1, -12
 457              		.cfi_offset 2, -8
 458              		.cfi_offset 3, -4
 166:Core/Src/syscalls.c ****     /* Pretend like we always fail */
 167:Core/Src/syscalls.c ****     return -1;
 459              		.loc 1 167 5 is_stmt 1 view .LVU92
 168:Core/Src/syscalls.c **** }
 460              		.loc 1 168 1 is_stmt 0 view .LVU93
 461 0002 4FF0FF30 		mov	r0, #-1
 462              	.LVL34:
 463              		.loc 1 168 1 view .LVU94
 464 0006 03B0     		add	sp, sp, #12
 465              	.LCFI6:
 466              		.cfi_restore 3
 467              		.cfi_restore 2
 468              		.cfi_restore 1
 469              		.cfi_def_cfa_offset 0
 470 0008 7047     		bx	lr
 471              		.cfi_endproc
ARM GAS  /tmp/ccGSvt8p.s 			page 12


 472              	.LFE36:
 474              		.section	.text._wait,"ax",%progbits
 475              		.align	1
 476              		.global	_wait
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	_wait:
 482              	.LVL35:
 483              	.LFB37:
 169:Core/Src/syscalls.c **** 
 170:Core/Src/syscalls.c **** int _wait(int *status)
 171:Core/Src/syscalls.c **** {
 484              		.loc 1 171 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		.loc 1 171 1 is_stmt 0 view .LVU96
 489 0000 08B5     		push	{r3, lr}
 490              	.LCFI7:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 172:Core/Src/syscalls.c ****     errno = ECHILD;
 494              		.loc 1 172 5 is_stmt 1 view .LVU97
 495 0002 FFF7FEFF 		bl	__errno
 496              	.LVL36:
 497              		.loc 1 172 11 is_stmt 0 view .LVU98
 498 0006 0A23     		movs	r3, #10
 499 0008 0360     		str	r3, [r0]
 173:Core/Src/syscalls.c ****     return -1;
 500              		.loc 1 173 5 is_stmt 1 view .LVU99
 174:Core/Src/syscalls.c **** }
 501              		.loc 1 174 1 is_stmt 0 view .LVU100
 502 000a 4FF0FF30 		mov	r0, #-1
 503 000e 08BD     		pop	{r3, pc}
 504              		.cfi_endproc
 505              	.LFE37:
 507              		.section	.text._unlink,"ax",%progbits
 508              		.align	1
 509              		.global	_unlink
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	_unlink:
 515              	.LVL37:
 516              	.LFB38:
 175:Core/Src/syscalls.c **** 
 176:Core/Src/syscalls.c **** int _unlink(char *name)
 177:Core/Src/syscalls.c **** {
 517              		.loc 1 177 1 is_stmt 1 view -0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		.loc 1 177 1 is_stmt 0 view .LVU102
 522 0000 08B5     		push	{r3, lr}
 523              	.LCFI8:
ARM GAS  /tmp/ccGSvt8p.s 			page 13


 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 3, -8
 526              		.cfi_offset 14, -4
 178:Core/Src/syscalls.c ****     errno = ENOENT;
 527              		.loc 1 178 5 is_stmt 1 view .LVU103
 528 0002 FFF7FEFF 		bl	__errno
 529              	.LVL38:
 530              		.loc 1 178 11 is_stmt 0 view .LVU104
 531 0006 0223     		movs	r3, #2
 532 0008 0360     		str	r3, [r0]
 179:Core/Src/syscalls.c ****     return -1;
 533              		.loc 1 179 5 is_stmt 1 view .LVU105
 180:Core/Src/syscalls.c **** }
 534              		.loc 1 180 1 is_stmt 0 view .LVU106
 535 000a 4FF0FF30 		mov	r0, #-1
 536 000e 08BD     		pop	{r3, pc}
 537              		.cfi_endproc
 538              	.LFE38:
 540              		.section	.text._times,"ax",%progbits
 541              		.align	1
 542              		.global	_times
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 547              	_times:
 548              	.LVL39:
 549              	.LFB39:
 181:Core/Src/syscalls.c **** 
 182:Core/Src/syscalls.c **** int _times(struct tms *buf)
 183:Core/Src/syscalls.c **** {
 550              		.loc 1 183 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 184:Core/Src/syscalls.c ****     return -1;
 555              		.loc 1 184 5 view .LVU108
 185:Core/Src/syscalls.c **** }
 556              		.loc 1 185 1 is_stmt 0 view .LVU109
 557 0000 4FF0FF30 		mov	r0, #-1
 558              	.LVL40:
 559              		.loc 1 185 1 view .LVU110
 560 0004 7047     		bx	lr
 561              		.cfi_endproc
 562              	.LFE39:
 564              		.section	.text._stat,"ax",%progbits
 565              		.align	1
 566              		.global	_stat
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 571              	_stat:
 572              	.LVL41:
 573              	.LFB40:
 186:Core/Src/syscalls.c **** 
 187:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 188:Core/Src/syscalls.c **** {
ARM GAS  /tmp/ccGSvt8p.s 			page 14


 574              		.loc 1 188 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 189:Core/Src/syscalls.c ****     st->st_mode = S_IFCHR;
 579              		.loc 1 189 5 view .LVU112
 580              		.loc 1 189 17 is_stmt 0 view .LVU113
 581 0000 4FF40053 		mov	r3, #8192
 582 0004 4B60     		str	r3, [r1, #4]
 190:Core/Src/syscalls.c ****     return 0;
 583              		.loc 1 190 5 is_stmt 1 view .LVU114
 191:Core/Src/syscalls.c **** }
 584              		.loc 1 191 1 is_stmt 0 view .LVU115
 585 0006 0020     		movs	r0, #0
 586              	.LVL42:
 587              		.loc 1 191 1 view .LVU116
 588 0008 7047     		bx	lr
 589              		.cfi_endproc
 590              	.LFE40:
 592              		.section	.text._link,"ax",%progbits
 593              		.align	1
 594              		.global	_link
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 599              	_link:
 600              	.LVL43:
 601              	.LFB41:
 192:Core/Src/syscalls.c **** 
 193:Core/Src/syscalls.c **** int _link(char *old, char *new)
 194:Core/Src/syscalls.c **** {
 602              		.loc 1 194 1 is_stmt 1 view -0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		.loc 1 194 1 is_stmt 0 view .LVU118
 607 0000 08B5     		push	{r3, lr}
 608              	.LCFI9:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 3, -8
 611              		.cfi_offset 14, -4
 195:Core/Src/syscalls.c ****     errno = EMLINK;
 612              		.loc 1 195 5 is_stmt 1 view .LVU119
 613 0002 FFF7FEFF 		bl	__errno
 614              	.LVL44:
 615              		.loc 1 195 11 is_stmt 0 view .LVU120
 616 0006 1F23     		movs	r3, #31
 617 0008 0360     		str	r3, [r0]
 196:Core/Src/syscalls.c ****     return -1;
 618              		.loc 1 196 5 is_stmt 1 view .LVU121
 197:Core/Src/syscalls.c **** }
 619              		.loc 1 197 1 is_stmt 0 view .LVU122
 620 000a 4FF0FF30 		mov	r0, #-1
 621 000e 08BD     		pop	{r3, pc}
 622              		.cfi_endproc
 623              	.LFE41:
ARM GAS  /tmp/ccGSvt8p.s 			page 15


 625              		.section	.text._fork,"ax",%progbits
 626              		.align	1
 627              		.global	_fork
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 632              	_fork:
 633              	.LFB42:
 198:Core/Src/syscalls.c **** 
 199:Core/Src/syscalls.c **** int _fork(void)
 200:Core/Src/syscalls.c **** {
 634              		.loc 1 200 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              	.LCFI10:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 3, -8
 642              		.cfi_offset 14, -4
 201:Core/Src/syscalls.c ****     errno = EAGAIN;
 643              		.loc 1 201 5 view .LVU124
 644 0002 FFF7FEFF 		bl	__errno
 645              	.LVL45:
 646              		.loc 1 201 11 is_stmt 0 view .LVU125
 647 0006 0B23     		movs	r3, #11
 648 0008 0360     		str	r3, [r0]
 202:Core/Src/syscalls.c ****     return -1;
 649              		.loc 1 202 5 is_stmt 1 view .LVU126
 203:Core/Src/syscalls.c **** }
 650              		.loc 1 203 1 is_stmt 0 view .LVU127
 651 000a 4FF0FF30 		mov	r0, #-1
 652 000e 08BD     		pop	{r3, pc}
 653              		.cfi_endproc
 654              	.LFE42:
 656              		.section	.text._execve,"ax",%progbits
 657              		.align	1
 658              		.global	_execve
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 663              	_execve:
 664              	.LVL46:
 665              	.LFB43:
 204:Core/Src/syscalls.c **** 
 205:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 206:Core/Src/syscalls.c **** {
 666              		.loc 1 206 1 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		.loc 1 206 1 is_stmt 0 view .LVU129
 671 0000 08B5     		push	{r3, lr}
 672              	.LCFI11:
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 3, -8
 675              		.cfi_offset 14, -4
ARM GAS  /tmp/ccGSvt8p.s 			page 16


 207:Core/Src/syscalls.c ****     errno = ENOMEM;
 676              		.loc 1 207 5 is_stmt 1 view .LVU130
 677 0002 FFF7FEFF 		bl	__errno
 678              	.LVL47:
 679              		.loc 1 207 11 is_stmt 0 view .LVU131
 680 0006 0C23     		movs	r3, #12
 681 0008 0360     		str	r3, [r0]
 208:Core/Src/syscalls.c ****     return -1;
 682              		.loc 1 208 5 is_stmt 1 view .LVU132
 209:Core/Src/syscalls.c **** }
 683              		.loc 1 209 1 is_stmt 0 view .LVU133
 684 000a 4FF0FF30 		mov	r0, #-1
 685 000e 08BD     		pop	{r3, pc}
 686              		.cfi_endproc
 687              	.LFE43:
 689              		.global	environ
 690              		.global	__env
 691              		.section	.bss.__env,"aw",%nobits
 692              		.align	2
 695              	__env:
 696 0000 00000000 		.space	4
 697              		.section	.bss.heap_end.0,"aw",%nobits
 698              		.align	2
 699              		.set	.LANCHOR0,. + 0
 702              	heap_end.0:
 703 0000 00000000 		.space	4
 704              		.section	.data.environ,"aw"
 705              		.align	2
 708              	environ:
 709 0000 00000000 		.word	__env
 710              		.weak	__io_putchar
 711              		.weak	__io_getchar
 712              		.text
 713              	.Letext0:
 714              		.file 2 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 715              		.file 3 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 716              		.file 4 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 717              		.file 5 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 718              		.file 6 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 719              		.file 7 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 720              		.file 8 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 721              		.file 9 "/opt/st/stm32cubeide_1.14.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
ARM GAS  /tmp/ccGSvt8p.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccGSvt8p.s:20     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccGSvt8p.s:26     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccGSvt8p.s:40     .text._getpid:0000000000000000 $t
     /tmp/ccGSvt8p.s:46     .text._getpid:0000000000000000 _getpid
     /tmp/ccGSvt8p.s:61     .text._kill:0000000000000000 $t
     /tmp/ccGSvt8p.s:67     .text._kill:0000000000000000 _kill
     /tmp/ccGSvt8p.s:94     .text._exit:0000000000000000 $t
     /tmp/ccGSvt8p.s:100    .text._exit:0000000000000000 _exit
     /tmp/ccGSvt8p.s:127    .text._read:0000000000000000 $t
     /tmp/ccGSvt8p.s:133    .text._read:0000000000000000 _read
     /tmp/ccGSvt8p.s:188    .text._write:0000000000000000 $t
     /tmp/ccGSvt8p.s:194    .text._write:0000000000000000 _write
     /tmp/ccGSvt8p.s:243    .text._sbrk:0000000000000000 $t
     /tmp/ccGSvt8p.s:249    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccGSvt8p.s:330    .text._sbrk:000000000000003c $d
     /tmp/ccGSvt8p.s:338    .text._close:0000000000000000 $t
     /tmp/ccGSvt8p.s:344    .text._close:0000000000000000 _close
     /tmp/ccGSvt8p.s:362    .text._fstat:0000000000000000 $t
     /tmp/ccGSvt8p.s:368    .text._fstat:0000000000000000 _fstat
     /tmp/ccGSvt8p.s:390    .text._isatty:0000000000000000 $t
     /tmp/ccGSvt8p.s:396    .text._isatty:0000000000000000 _isatty
     /tmp/ccGSvt8p.s:414    .text._lseek:0000000000000000 $t
     /tmp/ccGSvt8p.s:420    .text._lseek:0000000000000000 _lseek
     /tmp/ccGSvt8p.s:438    .text._open:0000000000000000 $t
     /tmp/ccGSvt8p.s:444    .text._open:0000000000000000 _open
     /tmp/ccGSvt8p.s:475    .text._wait:0000000000000000 $t
     /tmp/ccGSvt8p.s:481    .text._wait:0000000000000000 _wait
     /tmp/ccGSvt8p.s:508    .text._unlink:0000000000000000 $t
     /tmp/ccGSvt8p.s:514    .text._unlink:0000000000000000 _unlink
     /tmp/ccGSvt8p.s:541    .text._times:0000000000000000 $t
     /tmp/ccGSvt8p.s:547    .text._times:0000000000000000 _times
     /tmp/ccGSvt8p.s:565    .text._stat:0000000000000000 $t
     /tmp/ccGSvt8p.s:571    .text._stat:0000000000000000 _stat
     /tmp/ccGSvt8p.s:593    .text._link:0000000000000000 $t
     /tmp/ccGSvt8p.s:599    .text._link:0000000000000000 _link
     /tmp/ccGSvt8p.s:626    .text._fork:0000000000000000 $t
     /tmp/ccGSvt8p.s:632    .text._fork:0000000000000000 _fork
     /tmp/ccGSvt8p.s:657    .text._execve:0000000000000000 $t
     /tmp/ccGSvt8p.s:663    .text._execve:0000000000000000 _execve
     /tmp/ccGSvt8p.s:708    .data.environ:0000000000000000 environ
     /tmp/ccGSvt8p.s:695    .bss.__env:0000000000000000 __env
     /tmp/ccGSvt8p.s:692    .bss.__env:0000000000000000 $d
     /tmp/ccGSvt8p.s:698    .bss.heap_end.0:0000000000000000 $d
     /tmp/ccGSvt8p.s:702    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/ccGSvt8p.s:705    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
